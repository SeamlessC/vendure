{"version":3,"file":"vendure-admin-ui-order.js","sources":["../../src/lib/order/src/components/add-manual-payment-dialog/add-manual-payment-dialog.component.ts","../../src/lib/order/src/components/cancel-order-dialog/cancel-order-dialog.component.ts","../../src/lib/order/src/components/coupon-code-selector/coupon-code-selector.component.ts","../../src/lib/order/src/components/order-state-select-dialog/order-state-select-dialog.component.ts","../../src/lib/order/src/providers/order-transition.service.ts","../../src/lib/order/src/components/select-address-dialog/select-address-dialog.graphql.ts","../../src/lib/order/src/components/select-address-dialog/select-address-dialog.component.ts","../../src/lib/order/src/components/select-customer-dialog/select-customer-dialog.component.ts","../../src/lib/order/src/components/select-shipping-method-dialog/select-shipping-method-dialog.component.ts","../../src/lib/order/src/components/draft-order-detail/draft-order-detail.component.ts","../../src/lib/order/src/components/draft-order-variant-selector/draft-order-variant-selector.component.ts","../../src/lib/order/src/components/fulfill-order-dialog/fulfill-order-dialog.component.ts","../../src/lib/order/src/components/fulfillment-card/fulfillment-card.component.ts","../../src/lib/order/src/components/fulfillment-detail/fulfillment-detail.component.ts","../../src/lib/order/src/components/fulfillment-state-label/fulfillment-state-label.component.ts","../../src/lib/order/src/components/line-fulfillment/line-fulfillment.component.ts","../../src/lib/order/src/components/line-refunds/line-refunds.component.ts","../../src/lib/order/src/components/modification-detail/modification-detail.component.ts","../../src/lib/order/src/components/order-custom-fields-card/order-custom-fields-card.component.ts","../../src/lib/order/src/components/order-process-graph-dialog/order-process-graph-dialog.component.ts","../../src/lib/order/src/components/refund-order-dialog/refund-order-dialog.component.ts","../../src/lib/order/src/components/settle-refund-dialog/settle-refund-dialog.component.ts","../../src/lib/order/src/components/order-detail/order-detail.component.ts","../../src/lib/order/src/components/order-edits-preview-dialog/order-edits-preview-dialog.component.ts","../../src/lib/order/src/components/order-editor/order-editor.component.ts","../../src/lib/order/src/components/order-history/order-history.component.ts","../../src/lib/order/src/components/order-list/order-list.component.ts","../../src/lib/order/src/components/order-payment-card/order-payment-card.component.ts","../../src/lib/order/src/components/order-process-graph/constants.ts","../../src/lib/order/src/components/order-process-graph/order-process-edge.component.ts","../../src/lib/order/src/components/order-process-graph/order-process-node.component.ts","../../src/lib/order/src/components/order-process-graph/order-process-graph.component.ts","../../src/lib/order/src/components/order-table/order-table.component.ts","../../src/lib/order/src/components/payment-detail/payment-detail.component.ts","../../src/lib/order/src/components/payment-state-label/payment-state-label.component.ts","../../src/lib/order/src/components/refund-state-label/refund-state-label.component.ts","../../src/lib/order/src/components/simple-item-list/simple-item-list.component.ts","../../src/lib/order/src/providers/routing/order-resolver.ts","../../src/lib/order/src/providers/routing/order.guard.ts","../../src/lib/order/src/order.routes.ts","../../src/lib/order/src/order.module.ts","../../src/lib/order/src/public_api.ts","../../src/lib/order/src/vendure-admin-ui-order.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport {\n    CurrencyCode,\n    DataService,\n    Dialog,\n    GetPaymentMethodList,\n    ManualPaymentInput,\n} from '@vendure/admin-ui/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'vdr-add-manual-payment-dialog',\n    templateUrl: './add-manual-payment-dialog.component.html',\n    styleUrls: ['./add-manual-payment-dialog.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AddManualPaymentDialogComponent implements OnInit, Dialog<Omit<ManualPaymentInput, 'orderId'>> {\n    // populated by ModalService call\n    outstandingAmount: number;\n    currencyCode: CurrencyCode;\n\n    resolveWith: (result?: Omit<ManualPaymentInput, 'orderId'>) => void;\n    form = new FormGroup({\n        method: new FormControl('', Validators.required),\n        transactionId: new FormControl('', Validators.required),\n    });\n    paymentMethods$: Observable<GetPaymentMethodList.Items[]>;\n    constructor(private dataService: DataService) {}\n\n    ngOnInit(): void {\n        this.paymentMethods$ = this.dataService.settings\n            .getPaymentMethods(999)\n            .mapSingle(data => data.paymentMethods.items);\n    }\n\n    submit() {\n        const formValue = this.form.value;\n        this.resolveWith({\n            method: formValue.method,\n            transactionId: formValue.transactionId,\n        });\n    }\n\n    cancel() {\n        this.resolveWith();\n    }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    CancelOrderInput,\n    Dialog,\n    getAppConfig,\n    I18nService,\n    OrderDetailFragment,\n    OrderLineInput,\n} from '@vendure/admin-ui/core';\n\n@Component({\n    selector: 'vdr-cancel-order-dialog',\n    templateUrl: './cancel-order-dialog.component.html',\n    styleUrls: ['./cancel-order-dialog.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CancelOrderDialogComponent implements OnInit, Dialog<CancelOrderInput> {\n    order: OrderDetailFragment;\n    cancelAll = true;\n    resolveWith: (result?: CancelOrderInput) => void;\n    reason: string;\n    lineQuantities: { [lineId: string]: number } = {};\n    reasons: string[] = getAppConfig().cancellationReasons ?? [\n        _('order.cancel-reason-customer-request'),\n        _('order.cancel-reason-not-available'),\n    ];\n\n    get selectionCount(): number {\n        return Object.values(this.lineQuantities).reduce((sum, n) => sum + n, 0);\n    }\n\n    constructor(private i18nService: I18nService) {\n        this.reasons = this.reasons.map(r => this.i18nService.translate(r));\n    }\n\n    ngOnInit() {\n        this.lineQuantities = this.order.lines.reduce((result, line) => {\n            return { ...result, [line.id]: line.quantity };\n        }, {});\n    }\n\n    radioChanged() {\n        if (this.cancelAll) {\n            for (const line of this.order.lines) {\n                this.lineQuantities[line.id] = line.quantity;\n            }\n        } else {\n            for (const line of this.order.lines) {\n                this.lineQuantities[line.id] = 0;\n            }\n        }\n    }\n\n    checkIfAllSelected() {\n        for (const [lineId, quantity] of Object.entries(this.lineQuantities)) {\n            const quantityInOrder = this.order.lines.find(line => line.id === lineId)?.quantity;\n            if (quantityInOrder && quantity < quantityInOrder) {\n                return;\n            }\n        }\n        // If we got here, all of the selected quantities are equal to the order\n        // line quantities, i.e. everything is selected.\n        this.cancelAll = true;\n    }\n\n    select() {\n        this.resolveWith({\n            orderId: this.order.id,\n            lines: this.getLineInputs(),\n            reason: this.reason,\n            cancelShipping: this.cancelAll,\n        });\n    }\n\n    cancel() {\n        this.resolveWith();\n    }\n\n    private getLineInputs(): OrderLineInput[] | undefined {\n        if (this.order.active) {\n            return;\n        }\n        return Object.entries(this.lineQuantities)\n            .map(([orderLineId, quantity]) => ({\n                orderLineId,\n                quantity,\n            }))\n            .filter(l => 0 < l.quantity);\n    }\n}\n","import { Component, OnInit, ChangeDetectionStrategy, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { DataService } from '@vendure/admin-ui/core';\nimport { concat, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, map, startWith, switchMap } from 'rxjs/operators';\n\n@Component({\n    selector: 'vdr-coupon-code-selector',\n    templateUrl: './coupon-code-selector.component.html',\n    styleUrls: ['./coupon-code-selector.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CouponCodeSelectorComponent implements OnInit {\n    @Input() couponCodes: string[];\n    @Input() control: FormControl | undefined;\n    @Output() addCouponCode = new EventEmitter<string>();\n    @Output() removeCouponCode = new EventEmitter<string>();\n    availableCouponCodes$: Observable<Array<{ code: string; promotionName: string }>>;\n    couponCodeInput$ = new Subject<string>();\n    constructor(private dataService: DataService) {}\n\n    ngOnInit(): void {\n        this.availableCouponCodes$ = concat(\n            this.couponCodeInput$.pipe(\n                distinctUntilChanged(),\n                switchMap(\n                    term =>\n                        this.dataService.promotion.getPromotions(10, 0, {\n                            couponCode: { contains: term },\n                        }).single$,\n                ),\n                map(({ promotions }) =>\n                    // tslint:disable-next-line:no-non-null-assertion\n                    promotions.items.map(p => ({ code: p.couponCode!, promotionName: p.name })),\n                ),\n                startWith([]),\n            ),\n        );\n        if (!this.control) {\n            this.control = new FormControl(this.couponCodes ?? []);\n        }\n    }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Dialog } from '@vendure/admin-ui/core';\n\n@Component({\n    selector: 'vdr-order-state-select-dialog',\n    templateUrl: './order-state-select-dialog.component.html',\n    styleUrls: ['./order-state-select-dialog.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderStateSelectDialogComponent implements Dialog<string> {\n    resolveWith: (result?: string) => void;\n    nextStates: string[] = [];\n    message = '';\n    cancellable: boolean;\n    selectedState = '';\n\n    select() {\n        if (this.selectedState) {\n            this.resolveWith(this.selectedState);\n        }\n    }\n\n    cancel() {\n        this.resolveWith();\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    DataService,\n    HistoryEntryType,\n    I18nService,\n    ModalService,\n    NotificationService,\n    SortOrder,\n} from '@vendure/admin-ui/core';\nimport { EMPTY } from 'rxjs';\nimport { catchError, delay, map, retryWhen, switchMap, take } from 'rxjs/operators';\n\nimport { OrderStateSelectDialogComponent } from '../components/order-state-select-dialog/order-state-select-dialog.component';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrderTransitionService {\n    constructor(\n        private dataService: DataService,\n        private modalService: ModalService,\n        private notificationService: NotificationService,\n        private i18nService: I18nService,\n    ) {}\n\n    /**\n     * Attempts to transition the Order to the last state it was in before it was transitioned\n     * to the \"Modifying\" state. If this fails, a manual prompt is used.\n     */\n    transitionToPreModifyingState(orderId: string, nextStates: string[]) {\n        return this.getPreModifyingState(orderId).pipe(\n            switchMap(state => {\n                const manualTransitionOptions = {\n                    orderId,\n                    nextStates,\n                    message: this.i18nService.translate(\n                        _('order.unable-to-transition-to-state-try-another'),\n                        { state },\n                    ),\n                    cancellable: false,\n                    retry: 10,\n                };\n                if (state) {\n                    return this.transitionToStateOrThrow(orderId, state).pipe(\n                        catchError(err => this.manuallyTransitionToState(manualTransitionOptions)),\n                    );\n                } else {\n                    return this.manuallyTransitionToState(manualTransitionOptions);\n                }\n            }),\n        );\n    }\n\n    /**\n     * Displays a modal for manually selecting the next state.\n     */\n    manuallyTransitionToState(options: {\n        orderId: string;\n        nextStates: string[];\n        message: string;\n        cancellable: boolean;\n        retry: number;\n    }) {\n        return this.modalService\n            .fromComponent(OrderStateSelectDialogComponent, {\n                locals: {\n                    nextStates: options.nextStates,\n                    cancellable: options.cancellable,\n                    message: options.message,\n                },\n                closable: false,\n                size: 'md',\n            })\n            .pipe(\n                switchMap(result => {\n                    if (result) {\n                        return this.transitionToStateOrThrow(options.orderId, result);\n                    } else {\n                        if (!options.cancellable) {\n                            throw new Error(`An order state must be selected`);\n                        } else {\n                            return EMPTY;\n                        }\n                    }\n                }),\n                retryWhen(errors => errors.pipe(delay(2000), take(options.retry))),\n            );\n    }\n\n    /**\n     * Attempts to get the last state the Order was in before it was transitioned\n     * to the \"Modifying\" state.\n     */\n    private getPreModifyingState(orderId: string) {\n        return this.dataService.order\n            .getOrderHistory(orderId, {\n                filter: {\n                    type: {\n                        eq: HistoryEntryType.ORDER_STATE_TRANSITION,\n                    },\n                },\n                sort: {\n                    createdAt: SortOrder.DESC,\n                },\n            })\n            .mapSingle(result => result.order)\n            .pipe(\n                map(result => {\n                    const item = result?.history.items.find(i => i.data.to === 'Modifying');\n                    if (item) {\n                        return item.data.from as string;\n                    } else {\n                        return;\n                    }\n                }),\n            );\n    }\n\n    private transitionToStateOrThrow(orderId: string, state: string) {\n        return this.dataService.order.transitionToState(orderId, state).pipe(\n            map(({ transitionOrderToState }) => {\n                switch (transitionOrderToState?.__typename) {\n                    case 'Order':\n                        return transitionOrderToState?.state;\n                    case 'OrderStateTransitionError':\n                        this.notificationService.error(transitionOrderToState?.transitionError);\n                        throw new Error(transitionOrderToState?.transitionError);\n                }\n            }),\n        );\n    }\n}\n","import { ADDRESS_FRAGMENT } from '@vendure/admin-ui/core';\nimport { gql } from 'apollo-angular';\n\nexport const GET_CUSTOMER_ADDRESSES = gql`\n    query GetCustomerAddresses($customerId: ID!) {\n        customer(id: $customerId) {\n            id\n            addresses {\n                ...Address\n            }\n        }\n    }\n    ${ADDRESS_FRAGMENT}\n`;\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n    AddressFragment,\n    CreateAddressInput,\n    CreateCustomerInput,\n    DataService,\n    Dialog,\n    GetAvailableCountriesQuery,\n    GetCustomerAddressesQuery,\n    GetCustomerAddressesQueryVariables,\n    OrderAddressFragment,\n} from '@vendure/admin-ui/core';\nimport { pick } from '@vendure/common/lib/pick';\nimport { Observable, of } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { Customer } from '../select-customer-dialog/select-customer-dialog.component';\n\nimport { GET_CUSTOMER_ADDRESSES } from './select-address-dialog.graphql';\n\n@Component({\n    selector: 'vdr-select-address-dialog',\n    templateUrl: './select-address-dialog.component.html',\n    styleUrls: ['./select-address-dialog.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SelectAddressDialogComponent implements OnInit, Dialog<CreateAddressInput> {\n    resolveWith: (result?: CreateAddressInput) => void;\n    availableCountries$: Observable<GetAvailableCountriesQuery['countries']['items']>;\n    addresses$: Observable<AddressFragment[]>;\n    customerId: string | undefined;\n    currentAddress: OrderAddressFragment | undefined;\n    addressForm: FormGroup;\n    selectedAddress: AddressFragment | undefined;\n    useExisting = true;\n    createNew = false;\n\n    constructor(private dataService: DataService, private formBuilder: FormBuilder) {}\n\n    ngOnInit(): void {\n        this.addressForm = this.formBuilder.group({\n            fullName: [this.currentAddress?.fullName ?? ''],\n            company: [this.currentAddress?.company ?? ''],\n            streetLine1: [this.currentAddress?.streetLine1 ?? '', Validators.required],\n            streetLine2: [this.currentAddress?.streetLine2 ?? ''],\n            city: [this.currentAddress?.city ?? '', Validators.required],\n            province: [this.currentAddress?.province ?? ''],\n            postalCode: [this.currentAddress?.postalCode ?? '', Validators.required],\n            countryCode: [this.currentAddress?.countryCode ?? '', Validators.required],\n            phoneNumber: [this.currentAddress?.phoneNumber ?? ''],\n        });\n        this.useExisting = !!this.customerId;\n        this.addresses$ = this.customerId\n            ? this.dataService\n                  .query<GetCustomerAddressesQuery, GetCustomerAddressesQueryVariables>(\n                      GET_CUSTOMER_ADDRESSES,\n                      { customerId: this.customerId },\n                  )\n                  .mapSingle(({ customer }) => customer?.addresses ?? [])\n                  .pipe(\n                      tap(addresses => {\n                          if (this.currentAddress) {\n                              this.selectedAddress = addresses.find(\n                                  a =>\n                                      a.streetLine1 === this.currentAddress?.streetLine1 &&\n                                      a.postalCode === this.currentAddress?.postalCode,\n                              );\n                          }\n                          if (addresses.length === 0) {\n                              this.createNew = true;\n                              this.useExisting = false;\n                          }\n                      }),\n                  )\n            : of([]);\n        this.availableCountries$ = this.dataService.settings\n            .getAvailableCountries()\n            .mapSingle(({ countries }) => countries.items);\n    }\n\n    trackByFn(item: Customer) {\n        return item.id;\n    }\n\n    addressIdFn(item: AddressFragment) {\n        return item.streetLine1 + item.postalCode;\n    }\n\n    cancel() {\n        this.resolveWith();\n    }\n\n    select() {\n        if (this.useExisting && this.selectedAddress) {\n            this.resolveWith({\n                ...pick(this.selectedAddress, [\n                    'fullName',\n                    'company',\n                    'streetLine1',\n                    'streetLine2',\n                    'city',\n                    'province',\n                    'phoneNumber',\n                    'postalCode',\n                ]),\n                countryCode: this.selectedAddress.country.code,\n            });\n        }\n        if (this.createNew && this.addressForm.valid) {\n            const formValue = this.addressForm.value;\n            this.resolveWith(formValue);\n        }\n    }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CreateCustomerInput, DataService, Dialog, GetCustomerListQuery } from '@vendure/admin-ui/core';\nimport { concat, Observable, of, Subject } from 'rxjs';\nimport { catchError, debounceTime, distinctUntilChanged, switchMap, tap } from 'rxjs/operators';\n\nexport type Customer = GetCustomerListQuery['customers']['items'][number];\n\n@Component({\n    selector: 'vdr-select-customer-dialog',\n    templateUrl: './select-customer-dialog.component.html',\n    styleUrls: ['./select-customer-dialog.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SelectCustomerDialogComponent implements OnInit, Dialog<Customer | CreateCustomerInput> {\n    resolveWith: (result?: Customer | CreateCustomerInput) => void;\n    customerForm: FormGroup;\n    customers$: Observable<Customer[]>;\n    isLoading = false;\n    input$ = new Subject<string>();\n    selectedCustomer: Customer[] = [];\n    useExisting = true;\n    createNew = false;\n\n    constructor(private dataService: DataService, private formBuilder: FormBuilder) {\n        this.customerForm = this.formBuilder.group({\n            title: '',\n            firstName: ['', Validators.required],\n            lastName: ['', Validators.required],\n            phoneNumber: '',\n            emailAddress: ['', [Validators.required, Validators.email]],\n        });\n    }\n\n    ngOnInit(): void {\n        this.customers$ = concat(\n            of([]), // default items\n            this.input$.pipe(\n                debounceTime(200),\n                distinctUntilChanged(),\n                tap(() => (this.isLoading = true)),\n                switchMap(term =>\n                    this.dataService.customer\n                        .getCustomerList(10, 0, term)\n                        .mapStream(({ customers }) => customers.items)\n                        .pipe(\n                            catchError(() => of([])), // empty list on error\n                            tap(() => (this.isLoading = false)),\n                        ),\n                ),\n            ),\n        );\n    }\n\n    trackByFn(item: Customer) {\n        return item.id;\n    }\n\n    cancel() {\n        this.resolveWith();\n    }\n\n    select() {\n        if (this.useExisting && this.selectedCustomer.length === 1) {\n            this.resolveWith(this.selectedCustomer[0]);\n        }\n        if (this.createNew && this.customerForm.valid) {\n            const formValue = this.customerForm.value;\n            this.resolveWith(formValue);\n        }\n    }\n}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport {\n    CreateAddressInput,\n    CurrencyCode,\n    Dialog,\n    DraftOrderEligibleShippingMethodsQuery,\n} from '@vendure/admin-ui/core';\n\ntype ShippingMethodQuote =\n    DraftOrderEligibleShippingMethodsQuery['eligibleShippingMethodsForDraftOrder'][number];\n\n@Component({\n    selector: 'vdr-select-shipping-method-dialog',\n    templateUrl: './select-shipping-method-dialog.component.html',\n    styleUrls: ['./select-shipping-method-dialog.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SelectShippingMethodDialogComponent implements OnInit, Dialog<string> {\n    resolveWith: (result?: string) => void;\n    eligibleShippingMethods: ShippingMethodQuote[];\n    currentSelectionId: string;\n    currencyCode: CurrencyCode;\n    selectedMethod: ShippingMethodQuote | undefined;\n    constructor() {}\n\n    ngOnInit(): void {\n        if (this.currentSelectionId) {\n            this.selectedMethod = this.eligibleShippingMethods.find(m => m.id === this.currentSelectionId);\n        }\n    }\n\n    methodIdFn(item: ShippingMethodQuote) {\n        return item.id;\n    }\n\n    cancel() {\n        this.resolveWith();\n    }\n\n    select() {\n        if (this.selectedMethod) {\n            this.resolveWith(this.selectedMethod.id);\n        }\n    }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    BaseDetailComponent,\n    CustomFieldConfig,\n    DataService,\n    DeletionResult,\n    DraftOrderEligibleShippingMethodsQuery,\n    ModalService,\n    NotificationService,\n    Order,\n    OrderDetail,\n    ServerConfigService,\n} from '@vendure/admin-ui/core';\nimport { combineLatest, Observable, Subject } from 'rxjs';\nimport { switchMap, take } from 'rxjs/operators';\n\nimport { OrderTransitionService } from '../../providers/order-transition.service';\nimport { SelectAddressDialogComponent } from '../select-address-dialog/select-address-dialog.component';\nimport { SelectCustomerDialogComponent } from '../select-customer-dialog/select-customer-dialog.component';\nimport { SelectShippingMethodDialogComponent } from '../select-shipping-method-dialog/select-shipping-method-dialog.component';\n\n@Component({\n    selector: 'vdr-draft-order-detail',\n    templateUrl: './draft-order-detail.component.html',\n    styleUrls: ['./draft-order-detail.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DraftOrderDetailComponent\n    extends BaseDetailComponent<OrderDetail.Fragment>\n    implements OnInit, OnDestroy\n{\n    detailForm = new FormGroup({});\n    eligibleShippingMethods$: Observable<\n        DraftOrderEligibleShippingMethodsQuery['eligibleShippingMethodsForDraftOrder']\n    >;\n    nextStates$: Observable<string[]>;\n    fetchHistory = new Subject<void>();\n    customFields: CustomFieldConfig[];\n    orderLineCustomFields: CustomFieldConfig[];\n    displayCouponCodeInput = false;\n\n    constructor(\n        router: Router,\n        route: ActivatedRoute,\n        serverConfigService: ServerConfigService,\n        private changeDetector: ChangeDetectorRef,\n        protected dataService: DataService,\n        private notificationService: NotificationService,\n        private modalService: ModalService,\n        private orderTransitionService: OrderTransitionService,\n    ) {\n        super(route, router, serverConfigService, dataService);\n    }\n\n    ngOnInit() {\n        this.init();\n        this.orderLineCustomFields = this.getCustomFieldConfig('OrderLine');\n        this.eligibleShippingMethods$ = this.entity$.pipe(\n            switchMap(order =>\n                this.dataService.order\n                    .getDraftOrderEligibleShippingMethods(order.id)\n                    .mapSingle(\n                        ({ eligibleShippingMethodsForDraftOrder }) => eligibleShippingMethodsForDraftOrder,\n                    ),\n            ),\n        );\n        this.customFields = this.getCustomFieldConfig('Order');\n        this.orderLineCustomFields = this.getCustomFieldConfig('OrderLine');\n    }\n\n    ngOnDestroy() {\n        this.destroy();\n    }\n\n    addItemToOrder(event: { productVariantId: string; quantity: number; customFields: any }) {\n        this.dataService.order.addItemToDraftOrder(this.id, event).subscribe(result => {\n            if (result.addItemToDraftOrder.__typename !== 'Order') {\n                this.notificationService.error((result.addItemToDraftOrder as any).message);\n            }\n        });\n    }\n\n    adjustOrderLine(event: { lineId: string; quantity: number }) {\n        this.dataService.order\n            .adjustDraftOrderLine(this.id, { orderLineId: event.lineId, quantity: event.quantity })\n            .subscribe(result => {\n                if (result.adjustDraftOrderLine.__typename !== 'Order') {\n                    this.notificationService.error((result.adjustDraftOrderLine as any).message);\n                }\n            });\n    }\n\n    removeOrderLine(event: { lineId: string }) {\n        this.dataService.order.removeDraftOrderLine(this.id, event.lineId).subscribe(result => {\n            if (result.removeDraftOrderLine.__typename !== 'Order') {\n                this.notificationService.error((result.removeDraftOrderLine as any).message);\n            }\n        });\n    }\n\n    getOrderAddressLines(orderAddress?: { [key: string]: string }): string[] {\n        if (!orderAddress) {\n            return [];\n        }\n        return Object.values(orderAddress)\n            .filter(val => val !== 'OrderAddress')\n            .filter(line => !!line);\n    }\n\n    setCustomer() {\n        this.modalService.fromComponent(SelectCustomerDialogComponent).subscribe(result => {\n            if (this.hasId(result)) {\n                this.dataService.order\n                    .setCustomerForDraftOrder(this.id, { customerId: result.id })\n                    .subscribe();\n            } else if (result) {\n                this.dataService.order.setCustomerForDraftOrder(this.id, { input: result }).subscribe();\n            }\n        });\n    }\n\n    setShippingAddress() {\n        this.entity$\n            .pipe(\n                take(1),\n                switchMap(order => {\n                    return this.modalService.fromComponent(SelectAddressDialogComponent, {\n                        locals: {\n                            customerId: order.customer?.id,\n                            currentAddress: order.shippingAddress ?? undefined,\n                        },\n                    });\n                }),\n            )\n            .subscribe(result => {\n                if (result) {\n                    this.dataService.order.setDraftOrderShippingAddress(this.id, result).subscribe();\n                }\n            });\n    }\n\n    setBillingAddress() {\n        this.entity$\n            .pipe(\n                take(1),\n                switchMap(order => {\n                    return this.modalService.fromComponent(SelectAddressDialogComponent, {\n                        locals: {\n                            customerId: order.customer?.id,\n                            currentAddress: order.billingAddress ?? undefined,\n                        },\n                    });\n                }),\n            )\n            .subscribe(result => {\n                if (result) {\n                    this.dataService.order.setDraftOrderBillingAddress(this.id, result).subscribe();\n                }\n            });\n    }\n\n    applyCouponCode(couponCode: string) {\n        this.dataService.order.applyCouponCodeToDraftOrder(this.id, couponCode).subscribe();\n    }\n\n    removeCouponCode(couponCode: string) {\n        this.dataService.order.removeCouponCodeFromDraftOrder(this.id, couponCode).subscribe();\n    }\n\n    setShippingMethod() {\n        combineLatest(this.entity$, this.eligibleShippingMethods$)\n            .pipe(\n                take(1),\n                switchMap(([order, methods]) =>\n                    this.modalService.fromComponent(SelectShippingMethodDialogComponent, {\n                        locals: {\n                            eligibleShippingMethods: methods,\n                            currencyCode: order.currencyCode,\n                            currentSelectionId: order.shippingLines?.[0]?.shippingMethod.id,\n                        },\n                    }),\n                ),\n            )\n            .subscribe(result => {\n                if (result) {\n                    this.dataService.order.setDraftOrderShippingMethod(this.id, result).subscribe();\n                }\n            });\n    }\n\n    updateCustomFields(customFieldsValue: any) {\n        this.dataService.order\n            .updateOrderCustomFields({\n                id: this.id,\n                customFields: customFieldsValue,\n            })\n            .subscribe();\n    }\n\n    deleteOrder() {\n        this.dataService.order.deleteDraftOrder(this.id).subscribe(({ deleteDraftOrder }) => {\n            if (deleteDraftOrder.result === DeletionResult.DELETED) {\n                this.notificationService.success(_('common.notify-delete-success'), {\n                    entity: 'Order',\n                });\n                this.router.navigate(['/orders']);\n            } else if (deleteDraftOrder.message) {\n                this.notificationService.error(deleteDraftOrder.message);\n            }\n        });\n    }\n\n    completeOrder() {\n        this.dataService.order\n            .transitionToState(this.id, 'ArrangingPayment')\n            .subscribe(({ transitionOrderToState }) => {\n                if (transitionOrderToState?.__typename === 'Order') {\n                    this.router.navigate(['/orders', this.id]);\n                } else if (transitionOrderToState?.__typename === 'OrderStateTransitionError') {\n                    this.notificationService.error(transitionOrderToState.transitionError);\n                }\n            });\n    }\n\n    private hasId<T extends { id: string }>(input: T | any): input is { id: string } {\n        return typeof input === 'object' && !!input.id;\n    }\n\n    protected setFormValues(entity: Order.Fragment): void {\n        // empty\n    }\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport {\n    CurrencyCode,\n    CustomFieldConfig,\n    DataService,\n    GetProductVariant,\n    GetProductVariantQuery,\n    ProductSelectorSearchQuery,\n} from '@vendure/admin-ui/core';\nimport { Observable, Subject } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n    selector: 'vdr-draft-order-variant-selector',\n    templateUrl: './draft-order-variant-selector.component.html',\n    styleUrls: ['./draft-order-variant-selector.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DraftOrderVariantSelectorComponent implements OnInit {\n    @Input() currencyCode: CurrencyCode;\n    @Input() orderLineCustomFields: CustomFieldConfig[];\n    @Output() addItem = new EventEmitter<{ productVariantId: string; quantity: number; customFields: any }>();\n    customFieldsFormGroup = new FormGroup({});\n    selectedVariant$: Observable<GetProductVariantQuery['productVariant']>;\n    selectedVariantId$ = new Subject<string>();\n    quantity = 1;\n    constructor(private dataService: DataService) {}\n\n    ngOnInit(): void {\n        this.selectedVariant$ = this.selectedVariantId$.pipe(\n            switchMap(id => {\n                if (id) {\n                    return this.dataService.product\n                        .getProductVariant(id)\n                        .mapSingle(({ productVariant }) => productVariant);\n                } else {\n                    return [undefined];\n                }\n            }),\n        );\n        for (const customField of this.orderLineCustomFields) {\n            this.customFieldsFormGroup.addControl(customField.name, new FormControl(''));\n        }\n    }\n\n    addItemClick(selectedVariant: GetProductVariantQuery['productVariant']) {\n        if (selectedVariant) {\n            this.addItem.emit({\n                productVariantId: selectedVariant.id,\n                quantity: this.quantity,\n                customFields: this.orderLineCustomFields.length\n                    ? this.customFieldsFormGroup.value\n                    : undefined,\n            });\n            this.selectedVariantId$.next(undefined);\n            this.customFieldsFormGroup.reset();\n        }\n    }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport {\n    configurableDefinitionToInstance,\n    ConfigurableOperation,\n    ConfigurableOperationDefinition,\n    configurableOperationValueIsValid,\n    DataService,\n    Dialog,\n    FulfillOrderInput,\n    GlobalFlag,\n    OrderDetail,\n    OrderDetailFragment,\n    toConfigurableOperationInput,\n} from '@vendure/admin-ui/core';\n\n@Component({\n    selector: 'vdr-fulfill-order-dialog',\n    templateUrl: './fulfill-order-dialog.component.html',\n    styleUrls: ['./fulfill-order-dialog.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FulfillOrderDialogComponent implements Dialog<FulfillOrderInput>, OnInit {\n    resolveWith: (result?: FulfillOrderInput) => void;\n    fulfillmentHandlerDef: ConfigurableOperationDefinition;\n    fulfillmentHandler: ConfigurableOperation;\n    fulfillmentHandlerControl = new FormControl();\n    fulfillmentQuantities: { [lineId: string]: { fulfillCount: number; max: number } } = {};\n\n    // Provided by modalService.fromComponent() call\n    order: OrderDetailFragment;\n\n    constructor(private dataService: DataService, private changeDetector: ChangeDetectorRef) {}\n\n    ngOnInit(): void {\n        this.dataService.settings.getGlobalSettings().single$.subscribe(({ globalSettings }) => {\n            this.fulfillmentQuantities = this.order.lines.reduce((result, line) => {\n                const fulfillCount = this.getFulfillableCount(line, globalSettings.trackInventory);\n                return {\n                    ...result,\n                    [line.id]: { fulfillCount, max: fulfillCount },\n                };\n            }, {});\n            this.changeDetector.markForCheck();\n        });\n\n        this.dataService.shippingMethod\n            .getShippingMethodOperations()\n            .mapSingle(data => data.fulfillmentHandlers)\n            .subscribe(handlers => {\n                this.fulfillmentHandlerDef =\n                    handlers.find(\n                        h => h.code === this.order.shippingLines[0]?.shippingMethod?.fulfillmentHandlerCode,\n                    ) || handlers[0];\n                this.fulfillmentHandler = configurableDefinitionToInstance(this.fulfillmentHandlerDef);\n                this.fulfillmentHandlerControl.patchValue(this.fulfillmentHandler);\n                this.changeDetector.markForCheck();\n            });\n    }\n\n    getFulfillableCount(line: OrderDetail.Lines, globalTrackInventory: boolean): number {\n        const { trackInventory, stockOnHand } = line.productVariant;\n        const effectiveTracInventory =\n            trackInventory === GlobalFlag.INHERIT ? globalTrackInventory : trackInventory === GlobalFlag.TRUE;\n\n        const unfulfilledCount = this.getUnfulfilledCount(line);\n        return effectiveTracInventory ? Math.min(unfulfilledCount, stockOnHand) : unfulfilledCount;\n    }\n\n    getUnfulfilledCount(line: OrderDetail.Lines): number {\n        const fulfilled =\n            line.fulfillments\n                ?.map(f => f.summary)\n                .flat()\n                .filter(row => row.orderLine.id === line.id)\n                .reduce((sum, row) => sum + row.quantity, 0) ?? 0;\n        return line.quantity - fulfilled;\n    }\n\n    canSubmit(): boolean {\n        const totalCount = Object.values(this.fulfillmentQuantities).reduce(\n            (total, { fulfillCount }) => total + fulfillCount,\n            0,\n        );\n        const formIsValid =\n            configurableOperationValueIsValid(\n                this.fulfillmentHandlerDef,\n                this.fulfillmentHandlerControl.value,\n            ) && this.fulfillmentHandlerControl.valid;\n        return formIsValid && 0 < totalCount;\n    }\n\n    select() {\n        const lines = Object.entries(this.fulfillmentQuantities).map(([orderLineId, { fulfillCount }]) => ({\n            orderLineId,\n            quantity: fulfillCount,\n        }));\n        this.resolveWith({\n            lines,\n            handler: toConfigurableOperationInput(\n                this.fulfillmentHandler,\n                this.fulfillmentHandlerControl.value,\n            ),\n        });\n    }\n\n    cancel() {\n        this.resolveWith();\n    }\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Fulfillment, OrderDetail } from '@vendure/admin-ui/core';\n\n@Component({\n    selector: 'vdr-fulfillment-card',\n    templateUrl: './fulfillment-card.component.html',\n    styleUrls: ['./fulfillment-card.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FulfillmentCardComponent {\n    @Input() fulfillment: Fulfillment.Fragment | undefined;\n    @Input() order: OrderDetail.Fragment;\n    @Output() transitionState = new EventEmitter<string>();\n\n    nextSuggestedState(): string | undefined {\n        if (!this.fulfillment) {\n            return;\n        }\n        const { nextStates } = this.fulfillment;\n        const namedStateOrDefault = (targetState: string) =>\n            nextStates.includes(targetState) ? targetState : nextStates[0];\n        switch (this.fulfillment?.state) {\n            case 'Pending':\n                return namedStateOrDefault('Shipped');\n            case 'Shipped':\n                return namedStateOrDefault('Delivered');\n            default:\n                return nextStates.find(s => s !== 'Cancelled');\n        }\n    }\n\n    nextOtherStates(): string[] {\n        if (!this.fulfillment) {\n            return [];\n        }\n        const suggested = this.nextSuggestedState();\n        return this.fulfillment.nextStates.filter(s => s !== suggested);\n    }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { CustomFieldConfig, OrderDetail, ServerConfigService } from '@vendure/admin-ui/core';\nimport { isObject } from '@vendure/common/lib/shared-utils';\n\n@Component({\n    selector: 'vdr-fulfillment-detail',\n    templateUrl: './fulfillment-detail.component.html',\n    styleUrls: ['./fulfillment-detail.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FulfillmentDetailComponent implements OnInit, OnChanges {\n    @Input() fulfillmentId: string;\n    @Input() order: OrderDetail.Fragment;\n\n    customFieldConfig: CustomFieldConfig[] = [];\n    customFieldFormGroup = new FormGroup({});\n\n    constructor(private serverConfigService: ServerConfigService) {}\n\n    ngOnInit() {\n        this.customFieldConfig = this.serverConfigService.getCustomFieldsFor('Fulfillment');\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.buildCustomFieldsFormGroup();\n    }\n\n    get fulfillment(): OrderDetail.Fulfillments | undefined | null {\n        return this.order.fulfillments && this.order.fulfillments.find(f => f.id === this.fulfillmentId);\n    }\n\n    get items(): Array<{ name: string; quantity: number }> {\n        return (\n            this.fulfillment?.summary.map(row => {\n                return {\n                    name:\n                        this.order.lines.find(line => line.id === row.orderLine.id)?.productVariant.name ??\n                        '',\n                    quantity: row.quantity,\n                };\n            }) ?? []\n        );\n    }\n\n    buildCustomFieldsFormGroup() {\n        const customFields = (this.fulfillment as any).customFields;\n        for (const fieldDef of this.serverConfigService.getCustomFieldsFor('Fulfillment')) {\n            this.customFieldFormGroup.addControl(fieldDef.name, new FormControl(customFields[fieldDef.name]));\n        }\n    }\n\n    customFieldIsObject(customField: unknown) {\n        return Array.isArray(customField) || isObject(customField);\n    }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'vdr-fulfillment-state-label',\n    templateUrl: './fulfillment-state-label.component.html',\n    styleUrls: ['./fulfillment-state-label.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FulfillmentStateLabelComponent {\n    @Input() state: string;\n\n    get chipColorType() {\n        switch (this.state) {\n            case 'Pending':\n            case 'Shipped':\n                return 'warning';\n            case 'Delivered':\n                return 'success';\n            case 'Cancelled':\n                return 'error';\n        }\n    }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { OrderDetail, OrderDetailFragment } from '@vendure/admin-ui/core';\nimport { unique } from '@vendure/common/lib/unique';\n\nexport type FulfillmentStatus = 'full' | 'partial' | 'none';\n\n@Component({\n    selector: 'vdr-line-fulfillment',\n    templateUrl: './line-fulfillment.component.html',\n    styleUrls: ['./line-fulfillment.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LineFulfillmentComponent implements OnChanges {\n    @Input() line: OrderDetail.Lines;\n    @Input() orderState: string;\n    fulfilledCount = 0;\n    fulfillmentStatus: FulfillmentStatus;\n    fulfillments: Array<{\n        count: number;\n        fulfillment: NonNullable<OrderDetailFragment['fulfillments']>[number];\n    }> = [];\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (this.line) {\n            this.fulfilledCount = this.getDeliveredCount(this.line);\n            this.fulfillmentStatus = this.getFulfillmentStatus(this.fulfilledCount, this.line.items.length);\n            this.fulfillments = this.getFulfillments(this.line);\n        }\n    }\n\n    /**\n     * Returns the number of items in an OrderLine which are fulfilled.\n     */\n    private getDeliveredCount(line: OrderDetail.Lines): number {\n        return (\n            line.fulfillments?.reduce(\n                (sum, fulfillment) =>\n                    sum + (fulfillment.summary.find(s => s.orderLine.id === line.id)?.quantity ?? 0),\n                0,\n            ) ?? 0\n        );\n    }\n\n    private getFulfillmentStatus(fulfilledCount: number, lineQuantity: number): FulfillmentStatus {\n        if (fulfilledCount === lineQuantity) {\n            return 'full';\n        }\n        if (0 < fulfilledCount && fulfilledCount < lineQuantity) {\n            return 'partial';\n        }\n        return 'none';\n    }\n\n    private getFulfillments(\n        line: OrderDetail.Lines,\n    ): Array<{ count: number; fulfillment: NonNullable<OrderDetailFragment['fulfillments']>[number] }> {\n        return (\n            line.fulfillments?.map(fulfillment => {\n                const summaryLine = fulfillment.summary.find(s => s.orderLine.id === line.id);\n                return {\n                    count: summaryLine?.quantity ?? 0,\n                    fulfillment,\n                };\n            }) ?? []\n        );\n    }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { OrderDetail } from '@vendure/admin-ui/core';\n\n@Component({\n    selector: 'vdr-line-refunds',\n    templateUrl: './line-refunds.component.html',\n    styleUrls: ['./line-refunds.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LineRefundsComponent {\n    @Input() line: OrderDetail.Lines;\n    @Input() payments: OrderDetail.Payments[];\n\n    getRefundedCount(): number {\n        const refunds =\n            this.payments?.reduce(\n                (all, payment) => [...all, ...payment.refunds],\n                [] as OrderDetail.Refunds[],\n            ) ?? [];\n        return this.line.items.filter(i => {\n            if (i.refundId === null && !i.cancelled) {\n                return false;\n            }\n            if (i.refundId) {\n                const refund = refunds.find(r => r.id === i.refundId);\n                if (refund?.state === 'Failed') {\n                    return false;\n                } else {\n                    return true;\n                }\n            }\n            return false;\n        }).length;\n    }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { OrderDetail, OrderDetailFragment } from '@vendure/admin-ui/core';\n\n@Component({\n    selector: 'vdr-modification-detail',\n    templateUrl: './modification-detail.component.html',\n    styleUrls: ['./modification-detail.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ModificationDetailComponent implements OnChanges {\n    @Input() order: OrderDetailFragment;\n    @Input() modification: OrderDetail.Modifications;\n    private addedItems = new Map<OrderDetail.Lines, number>();\n    private removedItems = new Map<OrderDetail.Lines, number>();\n\n    ngOnChanges(): void {\n        const { added, removed } = this.getModifiedLines();\n        this.addedItems = added;\n        this.removedItems = removed;\n    }\n\n    getSurcharge(id: string) {\n        return this.order.surcharges.find(m => m.id === id);\n    }\n\n    getAddedItems() {\n        return [...this.addedItems.entries()].map(([line, count]) => {\n            return { name: line.productVariant.name, quantity: count };\n        });\n    }\n\n    getRemovedItems() {\n        return [...this.removedItems.entries()].map(([line, count]) => {\n            return { name: line.productVariant.name, quantity: count };\n        });\n    }\n\n    private getModifiedLines() {\n        const added = new Map<OrderDetail.Lines, number>();\n        const removed = new Map<OrderDetail.Lines, number>();\n        for (const _item of this.modification.orderItems || []) {\n            const result = this.getOrderLineAndItem(_item.id);\n            if (result) {\n                const { line, item } = result;\n                if (item.cancelled) {\n                    const count = removed.get(line) ?? 0;\n                    removed.set(line, count + 1);\n                } else {\n                    const count = added.get(line) ?? 0;\n                    added.set(line, count + 1);\n                }\n            }\n        }\n        return { added, removed };\n    }\n\n    private getOrderLineAndItem(itemId: string) {\n        for (const line of this.order.lines) {\n            const item = line.items.find(i => i.id === itemId);\n            if (item) {\n                return { line, item };\n            }\n        }\n    }\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport { CustomFieldConfig, ModalService } from '@vendure/admin-ui/core';\n\n@Component({\n    selector: 'vdr-order-custom-fields-card',\n    templateUrl: './order-custom-fields-card.component.html',\n    styleUrls: ['./order-custom-fields-card.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderCustomFieldsCardComponent implements OnInit {\n    @Input() customFieldsConfig: CustomFieldConfig[] = [];\n    @Input() customFieldValues: { [name: string]: any } = {};\n    @Output() updateClick = new EventEmitter<any>();\n    customFieldForm: FormGroup;\n    editable = false;\n    constructor(private formBuilder: FormBuilder, private modalService: ModalService) {}\n\n    ngOnInit() {\n        this.customFieldForm = this.formBuilder.group({});\n        for (const field of this.customFieldsConfig) {\n            this.customFieldForm.addControl(\n                field.name,\n                this.formBuilder.control(this.customFieldValues[field.name]),\n            );\n        }\n    }\n\n    onUpdateClick() {\n        this.updateClick.emit(this.customFieldForm.value);\n        this.customFieldForm.markAsPristine();\n        this.editable = false;\n    }\n\n    onCancelClick() {\n        if (this.customFieldForm.dirty) {\n            this.modalService\n                .dialog({\n                    title: _('catalog.confirm-cancel'),\n                    buttons: [\n                        { type: 'secondary', label: _('common.keep-editing') },\n                        { type: 'danger', label: _('common.discard-changes'), returnValue: true },\n                    ],\n                })\n                .subscribe(result => {\n                    if (result) {\n                        this.customFieldForm.reset();\n                        this.customFieldForm.markAsPristine();\n                        this.editable = false;\n                    }\n                });\n        } else {\n            this.editable = false;\n        }\n    }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport {\n    CancelOrderInput,\n    DataService,\n    Dialog,\n    OrderProcessState,\n    ServerConfigService,\n} from '@vendure/admin-ui/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'vdr-order-process-graph-dialog',\n    templateUrl: './order-process-graph-dialog.component.html',\n    styleUrls: ['./order-process-graph-dialog.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderProcessGraphDialogComponent implements OnInit, Dialog<void> {\n    activeState: string;\n    states: OrderProcessState[] = [];\n    constructor(private serverConfigService: ServerConfigService) {}\n\n    ngOnInit(): void {\n        this.states = this.serverConfigService.getOrderProcessStates();\n    }\n\n    resolveWith: (result: void | undefined) => void;\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    CancelOrderInput,\n    Dialog,\n    getAppConfig,\n    I18nService,\n    OrderDetail,\n    OrderDetailFragment,\n    OrderLineInput,\n    RefundOrderInput,\n} from '@vendure/admin-ui/core';\nimport { summate } from '@vendure/common/lib/shared-utils';\n\ntype SelectionLine = { quantity: number; refund: boolean; cancel: boolean };\n\n@Component({\n    selector: 'vdr-refund-order-dialog',\n    templateUrl: './refund-order-dialog.component.html',\n    styleUrls: ['./refund-order-dialog.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RefundOrderDialogComponent\n    implements OnInit, Dialog<{ cancel: CancelOrderInput; refund: RefundOrderInput }>\n{\n    order: OrderDetailFragment;\n    resolveWith: (result?: { cancel: CancelOrderInput; refund: RefundOrderInput }) => void;\n    reason: string;\n    settledPayments: OrderDetail.Payments[];\n    selectedPayment: OrderDetail.Payments;\n    lineQuantities: { [lineId: string]: SelectionLine } = {};\n    refundShipping = false;\n    adjustment = 0;\n    reasons = getAppConfig().cancellationReasons ?? [\n        _('order.refund-reason-customer-request'),\n        _('order.refund-reason-not-available'),\n    ];\n\n    constructor(private i18nService: I18nService) {\n        this.reasons = this.reasons.map(r => this.i18nService.translate(r));\n    }\n\n    get refundTotal(): number {\n        const itemTotal = this.order.lines.reduce((total, line) => {\n            const lineRef = this.lineQuantities[line.id];\n            const refundCount = (lineRef.refund && lineRef.quantity) || 0;\n            return total + line.proratedUnitPriceWithTax * refundCount;\n        }, 0);\n        return itemTotal + (this.refundShipping ? this.order.shippingWithTax : 0) + this.adjustment;\n    }\n\n    get settledPaymentsTotal(): number {\n        return this.settledPayments\n            .map(payment => {\n                const paymentTotal = payment.amount;\n                const alreadyRefundedTotal = summate(\n                    payment.refunds.filter(r => r.state !== 'Failed') as Array<Required<OrderDetail.Refunds>>,\n                    'total',\n                );\n                return paymentTotal - alreadyRefundedTotal;\n            })\n            .reduce((sum, amount) => sum + amount, 0);\n    }\n\n    lineCanBeRefundedOrCancelled(line: OrderDetail.Lines): boolean {\n        const refunds =\n            this.order.payments?.reduce(\n                (all, payment) => [...all, ...payment.refunds],\n                [] as OrderDetail.Refunds[],\n            ) ?? [];\n\n        const refundable = line.items.filter(i => {\n            if (i.cancelled) {\n                return false;\n            }\n            if (i.refundId == null) {\n                return true;\n            }\n            const refund = refunds.find(r => r.id === i.refundId);\n            return refund?.state === 'Failed';\n        });\n        return 0 < refundable.length;\n    }\n\n    ngOnInit() {\n        this.lineQuantities = this.order.lines.reduce((result, line) => {\n            return {\n                ...result,\n                [line.id]: {\n                    quantity: 0,\n                    refund: false,\n                    cancel: false,\n                },\n            };\n        }, {});\n        this.settledPayments = (this.order.payments || []).filter(p => p.state === 'Settled');\n        if (this.settledPayments.length) {\n            this.selectedPayment = this.settledPayments[0];\n        }\n    }\n\n    handleZeroQuantity(line?: SelectionLine) {\n        if (line?.quantity === 0) {\n            line.cancel = false;\n            line.refund = false;\n        }\n    }\n\n    isRefunding(): boolean {\n        const result = Object.values(this.lineQuantities).reduce((isRefunding, line) => {\n            return isRefunding || (0 < line.quantity && line.refund);\n        }, false);\n        return result;\n    }\n\n    isCancelling(): boolean {\n        const result = Object.values(this.lineQuantities).reduce((isCancelling, line) => {\n            return isCancelling || (0 < line.quantity && line.cancel);\n        }, false);\n        return result;\n    }\n\n    canSubmit(): boolean {\n        if (this.isRefunding()) {\n            return !!(\n                this.selectedPayment &&\n                this.reason &&\n                0 < this.refundTotal &&\n                this.refundTotal <= this.settledPaymentsTotal\n            );\n        } else if (this.isCancelling()) {\n            return !!this.reason;\n        }\n        return false;\n    }\n\n    select() {\n        const payment = this.selectedPayment;\n        if (payment) {\n            const refundLines = this.getOrderLineInput(line => line.refund);\n            const cancelLines = this.getOrderLineInput(line => line.cancel);\n\n            this.resolveWith({\n                refund: {\n                    lines: refundLines,\n                    reason: this.reason,\n                    shipping: this.refundShipping ? this.order.shippingWithTax : 0,\n                    adjustment: this.adjustment,\n                    paymentId: payment.id,\n                },\n                cancel: {\n                    lines: cancelLines,\n                    orderId: this.order.id,\n                    reason: this.reason,\n                    cancelShipping: this.refundShipping,\n                },\n            });\n        }\n    }\n\n    cancel() {\n        this.resolveWith();\n    }\n\n    private getOrderLineInput(filterFn: (line: SelectionLine) => boolean): OrderLineInput[] {\n        return Object.entries(this.lineQuantities)\n            .filter(([orderLineId, line]) => 0 < line.quantity && filterFn(line))\n            .map(([orderLineId, line]) => ({\n                orderLineId,\n                quantity: line.quantity,\n            }));\n    }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nimport { OrderDetail } from '@vendure/admin-ui/core';\nimport { Dialog } from '@vendure/admin-ui/core';\n\n@Component({\n    selector: 'vdr-settle-refund-dialog',\n    templateUrl: './settle-refund-dialog.component.html',\n    styleUrls: ['./settle-refund-dialog.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SettleRefundDialogComponent implements Dialog<string> {\n    resolveWith: (result?: string) => void;\n    transactionId = '';\n    refund: OrderDetail.Refunds;\n\n    submit() {\n        this.resolveWith(this.transactionId);\n    }\n\n    cancel() {\n        this.resolveWith();\n    }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    BaseDetailComponent,\n    CancelOrder,\n    CustomFieldConfig,\n    DataService,\n    EditNoteDialogComponent,\n    FulfillmentFragment,\n    FulfillmentLineSummary,\n    GetOrderHistory,\n    GetOrderQuery,\n    HistoryEntry,\n    HistoryEntryType,\n    ModalService,\n    NotificationService,\n    Order,\n    OrderDetail,\n    OrderDetailFragment,\n    OrderLineFragment,\n    Refund,\n    RefundOrder,\n    ServerConfigService,\n    SortOrder,\n} from '@vendure/admin-ui/core';\nimport { pick } from '@vendure/common/lib/pick';\nimport { assertNever, summate } from '@vendure/common/lib/shared-utils';\nimport { EMPTY, merge, Observable, of, Subject } from 'rxjs';\nimport { map, mapTo, startWith, switchMap, take } from 'rxjs/operators';\n\nimport { OrderTransitionService } from '../../providers/order-transition.service';\nimport { AddManualPaymentDialogComponent } from '../add-manual-payment-dialog/add-manual-payment-dialog.component';\nimport { CancelOrderDialogComponent } from '../cancel-order-dialog/cancel-order-dialog.component';\nimport { FulfillOrderDialogComponent } from '../fulfill-order-dialog/fulfill-order-dialog.component';\nimport { OrderProcessGraphDialogComponent } from '../order-process-graph-dialog/order-process-graph-dialog.component';\nimport { RefundOrderDialogComponent } from '../refund-order-dialog/refund-order-dialog.component';\nimport { SettleRefundDialogComponent } from '../settle-refund-dialog/settle-refund-dialog.component';\n\n@Component({\n    selector: 'vdr-order-detail',\n    templateUrl: './order-detail.component.html',\n    styleUrls: ['./order-detail.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderDetailComponent\n    extends BaseDetailComponent<OrderDetail.Fragment>\n    implements OnInit, OnDestroy\n{\n    detailForm = new FormGroup({});\n    history$: Observable<GetOrderHistory.Items[] | undefined>;\n    nextStates$: Observable<string[]>;\n    fetchHistory = new Subject<void>();\n    customFields: CustomFieldConfig[];\n    orderLineCustomFields: CustomFieldConfig[];\n    private readonly defaultStates = [\n        'AddingItems',\n        'ArrangingPayment',\n        'PaymentAuthorized',\n        'PaymentSettled',\n        'PartiallyShipped',\n        'Shipped',\n        'PartiallyDelivered',\n        'Delivered',\n        'Cancelled',\n        'Modifying',\n        'ArrangingAdditionalPayment',\n    ];\n\n    constructor(\n        router: Router,\n        route: ActivatedRoute,\n        serverConfigService: ServerConfigService,\n        private changeDetector: ChangeDetectorRef,\n        protected dataService: DataService,\n        private notificationService: NotificationService,\n        private modalService: ModalService,\n        private orderTransitionService: OrderTransitionService,\n    ) {\n        super(route, router, serverConfigService, dataService);\n    }\n\n    ngOnInit() {\n        this.init();\n        this.entity$.pipe(take(1)).subscribe(order => {\n            if (order.state === 'Modifying') {\n                this.router.navigate(['./', 'modify'], { relativeTo: this.route });\n            }\n        });\n        this.customFields = this.getCustomFieldConfig('Order');\n        this.orderLineCustomFields = this.getCustomFieldConfig('OrderLine');\n        this.history$ = this.fetchHistory.pipe(\n            startWith(null),\n            switchMap(() => {\n                return this.dataService.order\n                    .getOrderHistory(this.id, {\n                        sort: {\n                            createdAt: SortOrder.DESC,\n                        },\n                    })\n                    .mapStream(data => data.order?.history.items);\n            }),\n        );\n        this.nextStates$ = this.entity$.pipe(\n            map(order => {\n                const isInCustomState = !this.defaultStates.includes(order.state);\n                return isInCustomState\n                    ? order.nextStates\n                    : order.nextStates.filter(s => !this.defaultStates.includes(s));\n            }),\n        );\n    }\n\n    ngOnDestroy() {\n        this.destroy();\n    }\n\n    openStateDiagram() {\n        this.entity$\n            .pipe(\n                take(1),\n                switchMap(order =>\n                    this.modalService.fromComponent(OrderProcessGraphDialogComponent, {\n                        closable: true,\n                        locals: {\n                            activeState: order.state,\n                        },\n                    }),\n                ),\n            )\n            .subscribe();\n    }\n\n    transitionToState(state: string) {\n        this.dataService.order.transitionToState(this.id, state).subscribe(({ transitionOrderToState }) => {\n            switch (transitionOrderToState?.__typename) {\n                case 'Order':\n                    this.notificationService.success(_('order.transitioned-to-state-success'), { state });\n                    this.fetchHistory.next();\n                    break;\n                case 'OrderStateTransitionError':\n                    this.notificationService.error(transitionOrderToState.transitionError);\n            }\n        });\n    }\n\n    manuallyTransitionToState(order: OrderDetailFragment) {\n        this.orderTransitionService\n            .manuallyTransitionToState({\n                orderId: order.id,\n                nextStates: order.nextStates,\n                cancellable: true,\n                message: _('order.manually-transition-to-state-message'),\n                retry: 0,\n            })\n            .subscribe();\n    }\n\n    transitionToModifying() {\n        this.dataService.order\n            .transitionToState(this.id, 'Modifying')\n            .subscribe(({ transitionOrderToState }) => {\n                switch (transitionOrderToState?.__typename) {\n                    case 'Order':\n                        this.router.navigate(['./modify'], { relativeTo: this.route });\n                        break;\n                    case 'OrderStateTransitionError':\n                        this.notificationService.error(transitionOrderToState.transitionError);\n                }\n            });\n    }\n\n    updateCustomFields(customFieldsValue: any) {\n        this.dataService.order\n            .updateOrderCustomFields({\n                id: this.id,\n                customFields: customFieldsValue,\n            })\n            .subscribe(() => {\n                this.notificationService.success(_('common.notify-update-success'), { entity: 'Order' });\n            });\n    }\n\n    getOrderAddressLines(orderAddress?: { [key: string]: string }): string[] {\n        if (!orderAddress) {\n            return [];\n        }\n        return Object.values(orderAddress)\n            .filter(val => val !== 'OrderAddress')\n            .filter(line => !!line);\n    }\n\n    settlePayment(payment: OrderDetail.Payments) {\n        this.dataService.order.settlePayment(payment.id).subscribe(({ settlePayment }) => {\n            switch (settlePayment.__typename) {\n                case 'Payment':\n                    if (settlePayment.state === 'Settled') {\n                        this.notificationService.success(_('order.settle-payment-success'));\n                    } else {\n                        this.notificationService.error(_('order.settle-payment-error'));\n                    }\n                    this.dataService.order.getOrder(this.id).single$.subscribe();\n                    this.fetchHistory.next();\n                    break;\n                case 'OrderStateTransitionError':\n                case 'PaymentStateTransitionError':\n                case 'SettlePaymentError':\n                    this.notificationService.error(settlePayment.message);\n            }\n        });\n    }\n\n    transitionPaymentState({ payment, state }: { payment: OrderDetail.Payments; state: string }) {\n        if (state === 'Cancelled') {\n            this.dataService.order.cancelPayment(payment.id).subscribe(({ cancelPayment }) => {\n                switch (cancelPayment.__typename) {\n                    case 'Payment':\n                        this.notificationService.success(_('order.transitioned-payment-to-state-success'), {\n                            state,\n                        });\n                        this.dataService.order.getOrder(this.id).single$.subscribe();\n                        this.fetchHistory.next();\n                        break;\n                    case 'PaymentStateTransitionError':\n                        this.notificationService.error(cancelPayment.transitionError);\n                        break;\n                    case 'CancelPaymentError':\n                        this.notificationService.error(cancelPayment.paymentErrorMessage);\n                        break;\n                }\n            });\n        } else {\n            this.dataService.order\n                .transitionPaymentToState(payment.id, state)\n                .subscribe(({ transitionPaymentToState }) => {\n                    switch (transitionPaymentToState.__typename) {\n                        case 'Payment':\n                            this.notificationService.success(\n                                _('order.transitioned-payment-to-state-success'),\n                                {\n                                    state,\n                                },\n                            );\n                            this.dataService.order.getOrder(this.id).single$.subscribe();\n                            this.fetchHistory.next();\n                            break;\n                        case 'PaymentStateTransitionError':\n                            this.notificationService.error(transitionPaymentToState.message);\n                            break;\n                    }\n                });\n        }\n    }\n\n    canAddFulfillment(order: OrderDetail.Fragment): boolean {\n        const allFulfillmentSummaryRows: FulfillmentFragment['summary'] = (order.fulfillments ?? []).reduce(\n            (all, fulfillment) => [...all, ...fulfillment.summary],\n            [] as FulfillmentFragment['summary'],\n        );\n        let allItemsFulfilled = true;\n        for (const line of order.lines) {\n            const totalFulfilledCount = allFulfillmentSummaryRows\n                .filter(row => row.orderLine.id === line.id)\n                .reduce((sum, row) => sum + row.quantity, 0);\n            if (totalFulfilledCount < line.quantity) {\n                allItemsFulfilled = false;\n            }\n        }\n        return (\n            !allItemsFulfilled &&\n            !this.hasUnsettledModifications(order) &&\n            this.outstandingPaymentAmount(order) === 0 &&\n            (order.nextStates.includes('Shipped') ||\n                order.nextStates.includes('PartiallyShipped') ||\n                order.nextStates.includes('Delivered'))\n        );\n    }\n\n    hasUnsettledModifications(order: OrderDetailFragment): boolean {\n        return 0 < order.modifications.filter(m => !m.isSettled).length;\n    }\n\n    getOutstandingModificationAmount(order: OrderDetailFragment): number {\n        return summate(\n            order.modifications.filter(m => !m.isSettled),\n            'priceChange',\n        );\n    }\n\n    outstandingPaymentAmount(order: OrderDetailFragment): number {\n        const paymentIsValid = (p: OrderDetail.Payments): boolean =>\n            p.state !== 'Cancelled' && p.state !== 'Declined' && p.state !== 'Error';\n\n        let amountCovered = 0;\n        for (const payment of order.payments?.filter(paymentIsValid) ?? []) {\n            const refunds = payment.refunds.filter(r => r.state !== 'Failed') ?? [];\n            const refundsTotal = summate(refunds as Array<Required<Refund>>, 'total');\n            amountCovered += payment.amount - refundsTotal;\n        }\n        return order.totalWithTax - amountCovered;\n    }\n\n    addManualPayment(order: OrderDetailFragment) {\n        const priorState = order.state;\n        this.modalService\n            .fromComponent(AddManualPaymentDialogComponent, {\n                closable: true,\n                locals: {\n                    outstandingAmount: this.outstandingPaymentAmount(order),\n                    currencyCode: order.currencyCode,\n                },\n            })\n            .pipe(\n                switchMap(result => {\n                    if (result) {\n                        return this.dataService.order.addManualPaymentToOrder({\n                            orderId: this.id,\n                            transactionId: result.transactionId,\n                            method: result.method,\n                            metadata: result.metadata || {},\n                        });\n                    } else {\n                        return EMPTY;\n                    }\n                }),\n                switchMap(({ addManualPaymentToOrder }) => {\n                    switch (addManualPaymentToOrder.__typename) {\n                        case 'Order':\n                            this.notificationService.success(_('order.add-payment-to-order-success'));\n                            if (priorState === 'ArrangingAdditionalPayment') {\n                                return this.orderTransitionService.transitionToPreModifyingState(\n                                    order.id,\n                                    order.nextStates,\n                                );\n                            } else {\n                                return this.dataService.order\n                                    .transitionToState(this.id, 'PaymentSettled')\n                                    .pipe(mapTo('PaymentSettled'));\n                            }\n                        case 'ManualPaymentStateError':\n                            this.notificationService.error(addManualPaymentToOrder.message);\n                            return EMPTY;\n                        default:\n                            return EMPTY;\n                    }\n                }),\n            )\n            .subscribe(result => {\n                if (result) {\n                    this.refetchOrder({ result });\n                }\n            });\n    }\n\n    fulfillOrder() {\n        this.entity$\n            .pipe(\n                take(1),\n                switchMap(order => {\n                    return this.modalService.fromComponent(FulfillOrderDialogComponent, {\n                        size: 'xl',\n                        locals: {\n                            order,\n                        },\n                    });\n                }),\n                switchMap(input => {\n                    if (input) {\n                        return this.dataService.order.createFulfillment(input);\n                    } else {\n                        return of(undefined);\n                    }\n                }),\n                switchMap(result => this.refetchOrder(result).pipe(mapTo(result))),\n            )\n            .subscribe(result => {\n                if (result) {\n                    const { addFulfillmentToOrder } = result;\n                    switch (addFulfillmentToOrder.__typename) {\n                        case 'Fulfillment':\n                            this.notificationService.success(_('order.create-fulfillment-success'));\n                            break;\n                        case 'EmptyOrderLineSelectionError':\n                        case 'InsufficientStockOnHandError':\n                        case 'ItemsAlreadyFulfilledError':\n                        case 'InvalidFulfillmentHandlerError':\n                            this.notificationService.error(addFulfillmentToOrder.message);\n                            break;\n                        case 'FulfillmentStateTransitionError':\n                            this.notificationService.error(addFulfillmentToOrder.transitionError);\n                            break;\n                        case 'CreateFulfillmentError':\n                            this.notificationService.error(addFulfillmentToOrder.fulfillmentHandlerError);\n                            break;\n                        case undefined:\n                            this.notificationService.error(JSON.stringify(addFulfillmentToOrder));\n                            break;\n                        default:\n                            assertNever(addFulfillmentToOrder);\n                    }\n                }\n            });\n    }\n\n    transitionFulfillment(id: string, state: string) {\n        this.dataService.order\n            .transitionFulfillmentToState(id, state)\n            .pipe(switchMap(result => this.refetchOrder(result)))\n            .subscribe(() => {\n                this.notificationService.success(_('order.successfully-updated-fulfillment'));\n            });\n    }\n\n    cancelOrRefund(order: OrderDetail.Fragment) {\n        const isRefundable = this.orderHasSettledPayments(order);\n        if (order.state === 'PaymentAuthorized' || order.active === true || !isRefundable) {\n            this.cancelOrder(order);\n        } else {\n            this.refundOrder(order);\n        }\n    }\n\n    settleRefund(refund: OrderDetail.Refunds) {\n        this.modalService\n            .fromComponent(SettleRefundDialogComponent, {\n                size: 'md',\n                locals: {\n                    refund,\n                },\n            })\n            .pipe(\n                switchMap(transactionId => {\n                    if (transactionId) {\n                        return this.dataService.order.settleRefund(\n                            {\n                                transactionId,\n                                id: refund.id,\n                            },\n                            this.id,\n                        );\n                    } else {\n                        return of(undefined);\n                    }\n                }),\n                // switchMap(result => this.refetchOrder(result)),\n            )\n            .subscribe(result => {\n                if (result) {\n                    this.notificationService.success(_('order.settle-refund-success'));\n                }\n            });\n    }\n\n    addNote(event: { note: string; isPublic: boolean }) {\n        const { note, isPublic } = event;\n        this.dataService.order\n            .addNoteToOrder({\n                id: this.id,\n                note,\n                isPublic,\n            })\n            .pipe(switchMap(result => this.refetchOrder(result)))\n            .subscribe(result => {\n                this.notificationService.success(_('common.notify-create-success'), {\n                    entity: 'Note',\n                });\n            });\n    }\n\n    updateNote(entry: HistoryEntry) {\n        this.modalService\n            .fromComponent(EditNoteDialogComponent, {\n                closable: true,\n                locals: {\n                    displayPrivacyControls: true,\n                    note: entry.data.note,\n                    noteIsPrivate: !entry.isPublic,\n                },\n            })\n            .pipe(\n                switchMap(result => {\n                    if (result) {\n                        return this.dataService.order.updateOrderNote({\n                            noteId: entry.id,\n                            isPublic: !result.isPrivate,\n                            note: result.note,\n                        });\n                    } else {\n                        return EMPTY;\n                    }\n                }),\n            )\n            .subscribe(result => {\n                this.fetchHistory.next();\n                this.notificationService.success(_('common.notify-update-success'), {\n                    entity: 'Note',\n                });\n            });\n    }\n\n    deleteNote(entry: HistoryEntry) {\n        return this.modalService\n            .dialog({\n                title: _('common.confirm-delete-note'),\n                body: entry.data.note,\n                buttons: [\n                    { type: 'secondary', label: _('common.cancel') },\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\n                ],\n            })\n            .pipe(switchMap(res => (res ? this.dataService.order.deleteOrderNote(entry.id) : EMPTY)))\n            .subscribe(() => {\n                this.fetchHistory.next();\n                this.notificationService.success(_('common.notify-delete-success'), {\n                    entity: 'Note',\n                });\n            });\n    }\n\n    orderHasSettledPayments(order: OrderDetail.Fragment): boolean {\n        return !!order.payments?.find(p => p.state === 'Settled');\n    }\n\n    private cancelOrder(order: OrderDetail.Fragment) {\n        this.modalService\n            .fromComponent(CancelOrderDialogComponent, {\n                size: 'xl',\n                locals: {\n                    order,\n                },\n            })\n            .pipe(\n                switchMap(input => {\n                    if (input) {\n                        return this.dataService.order.cancelOrder(input);\n                    } else {\n                        return of(undefined);\n                    }\n                }),\n                switchMap(result => this.refetchOrder(result)),\n            )\n            .subscribe(result => {\n                if (result) {\n                    this.notificationService.success(_('order.cancelled-order-success'));\n                }\n            });\n    }\n\n    private refundOrder(order: OrderDetail.Fragment) {\n        this.modalService\n            .fromComponent(RefundOrderDialogComponent, {\n                size: 'xl',\n                locals: {\n                    order,\n                },\n            })\n            .pipe(\n                switchMap(input => {\n                    if (!input) {\n                        return of(undefined);\n                    }\n\n                    if (input.cancel.lines?.length) {\n                        return this.dataService.order.cancelOrder(input.cancel).pipe(\n                            map(res => {\n                                const result = res.cancelOrder;\n                                switch (result.__typename) {\n                                    case 'Order':\n                                        this.refetchOrder(result).subscribe();\n                                        this.notificationService.success(_('order.cancelled-order-success'));\n                                        return input;\n                                    case 'CancelActiveOrderError':\n                                    case 'QuantityTooGreatError':\n                                    case 'MultipleOrderError':\n                                    case 'OrderStateTransitionError':\n                                    case 'EmptyOrderLineSelectionError':\n                                        this.notificationService.error(result.message);\n                                        return undefined;\n                                }\n                            }),\n                        );\n                    } else {\n                        return [input];\n                    }\n                }),\n                switchMap(input => {\n                    if (!input) {\n                        return of(undefined);\n                    }\n                    if (input.refund.lines.length) {\n                        return this.dataService.order\n                            .refundOrder(input.refund)\n                            .pipe(map(res => res.refundOrder));\n                    } else {\n                        return [undefined];\n                    }\n                }),\n            )\n            .subscribe(result => {\n                if (result) {\n                    switch (result.__typename) {\n                        case 'Refund':\n                            this.refetchOrder(result).subscribe();\n                            if (result.state === 'Failed') {\n                                this.notificationService.error(_('order.refund-order-failed'));\n                            } else {\n                                this.notificationService.success(_('order.refund-order-success'));\n                            }\n                            break;\n                        case 'AlreadyRefundedError':\n                        case 'NothingToRefundError':\n                        case 'PaymentOrderMismatchError':\n                        case 'RefundOrderStateError':\n                        case 'RefundStateTransitionError':\n                            this.notificationService.error(result.message);\n                            break;\n                    }\n                }\n            });\n    }\n\n    private refetchOrder(result: object | undefined): Observable<GetOrderQuery | undefined> {\n        this.fetchHistory.next();\n        if (result) {\n            return this.dataService.order.getOrder(this.id).single$;\n        } else {\n            return of(undefined);\n        }\n    }\n\n    protected setFormValues(entity: Order.Fragment): void {\n        // empty\n    }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { CustomFieldConfig, Dialog, ModifyOrderInput, OrderDetail } from '@vendure/admin-ui/core';\n\nexport enum OrderEditResultType {\n    Refund,\n    Payment,\n    PriceUnchanged,\n    Cancel,\n}\n\ninterface OrderEditsRefundResult {\n    result: OrderEditResultType.Refund;\n    refundPaymentId: string;\n    refundNote?: string;\n}\ninterface OrderEditsPaymentResult {\n    result: OrderEditResultType.Payment;\n}\ninterface OrderEditsPriceUnchangedResult {\n    result: OrderEditResultType.PriceUnchanged;\n}\ninterface OrderEditsCancelResult {\n    result: OrderEditResultType.Cancel;\n}\ntype OrderEditResult =\n    | OrderEditsRefundResult\n    | OrderEditsPaymentResult\n    | OrderEditsPriceUnchangedResult\n    | OrderEditsCancelResult;\n\n@Component({\n    selector: 'vdr-order-edits-preview-dialog',\n    templateUrl: './order-edits-preview-dialog.component.html',\n    styleUrls: ['./order-edits-preview-dialog.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderEditsPreviewDialogComponent implements OnInit, Dialog<OrderEditResult> {\n    // Passed in via the modalService\n    order: OrderDetail.Fragment;\n    originalTotalWithTax: number;\n    orderLineCustomFields: CustomFieldConfig[];\n    modifyOrderInput: ModifyOrderInput;\n\n    selectedPayment?: OrderDetail.Payments;\n    refundNote: string;\n    resolveWith: (result?: OrderEditResult) => void;\n\n    get priceDifference(): number {\n        return this.order.totalWithTax - this.originalTotalWithTax;\n    }\n\n    ngOnInit() {\n        this.refundNote = this.modifyOrderInput.note || '';\n    }\n\n    cancel() {\n        this.resolveWith({\n            result: OrderEditResultType.Cancel,\n        });\n    }\n\n    submit() {\n        if (0 < this.priceDifference) {\n            this.resolveWith({\n                result: OrderEditResultType.Payment,\n            });\n        } else if (this.priceDifference < 0) {\n            this.resolveWith({\n                result: OrderEditResultType.Refund,\n                // tslint:disable-next-line:no-non-null-assertion\n                refundPaymentId: this.selectedPayment!.id,\n                refundNote: this.refundNote,\n            });\n        } else {\n            this.resolveWith({\n                result: OrderEditResultType.PriceUnchanged,\n            });\n        }\n    }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n    AddItemInput,\n    AdjustOrderLineInput,\n    BaseDetailComponent,\n    CustomFieldConfig,\n    DataService,\n    ErrorResult,\n    GetAvailableCountries,\n    HistoryEntryType,\n    LanguageCode,\n    ModalService,\n    ModifyOrderInput,\n    NotificationService,\n    OrderAddressFragment,\n    OrderDetail,\n    ProductSelectorSearch,\n    ServerConfigService,\n    SortOrder,\n    SurchargeInput,\n    transformRelationCustomFieldInputs,\n} from '@vendure/admin-ui/core';\nimport { assertNever, notNullOrUndefined } from '@vendure/common/lib/shared-utils';\nimport { simpleDeepClone } from '@vendure/common/lib/simple-deep-clone';\nimport { concat, EMPTY, Observable, of, Subject } from 'rxjs';\nimport {\n    distinctUntilChanged,\n    map,\n    mapTo,\n    shareReplay,\n    startWith,\n    switchMap,\n    takeUntil,\n} from 'rxjs/operators';\n\nimport { OrderTransitionService } from '../../providers/order-transition.service';\nimport {\n    OrderEditResultType,\n    OrderEditsPreviewDialogComponent,\n} from '../order-edits-preview-dialog/order-edits-preview-dialog.component';\n\ninterface AddedLine {\n    productVariantId: string;\n    productAsset?: ProductSelectorSearch.ProductAsset | null;\n    productVariantName: string;\n    sku: string;\n    priceWithTax: number;\n    price: number;\n    quantity: number;\n}\n\ntype ModifyOrderData = Omit<ModifyOrderInput, 'addItems' | 'adjustOrderLines'> & {\n    addItems: Array<AddItemInput & { customFields?: any }>;\n    adjustOrderLines: Array<AdjustOrderLineInput & { customFields?: any }>;\n};\n\n@Component({\n    selector: 'vdr-order-editor',\n    templateUrl: './order-editor.component.html',\n    styleUrls: ['./order-editor.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderEditorComponent\n    extends BaseDetailComponent<OrderDetail.Fragment>\n    implements OnInit, OnDestroy\n{\n    availableCountries$: Observable<GetAvailableCountries.Items[]>;\n    addressCustomFields: CustomFieldConfig[];\n    detailForm = new FormGroup({});\n    couponCodesControl = new FormControl();\n    orderLineCustomFieldsFormArray: FormArray;\n    addItemCustomFieldsFormArray: FormArray;\n    addItemCustomFieldsForm: FormGroup;\n    addItemSelectedVariant: ProductSelectorSearch.Items | undefined;\n    orderLineCustomFields: CustomFieldConfig[];\n    modifyOrderInput: ModifyOrderData = {\n        dryRun: true,\n        orderId: '',\n        addItems: [],\n        adjustOrderLines: [],\n        surcharges: [],\n        note: '',\n        updateShippingAddress: {},\n        updateBillingAddress: {},\n    };\n    surchargeForm: FormGroup;\n    shippingAddressForm: FormGroup;\n    billingAddressForm: FormGroup;\n    note = '';\n    recalculateShipping = true;\n    previousState: string;\n    private addedVariants = new Map<string, ProductSelectorSearch.Items>();\n\n    constructor(\n        router: Router,\n        route: ActivatedRoute,\n        serverConfigService: ServerConfigService,\n        private changeDetector: ChangeDetectorRef,\n        protected dataService: DataService,\n        private notificationService: NotificationService,\n        private modalService: ModalService,\n        private orderTransitionService: OrderTransitionService,\n    ) {\n        super(route, router, serverConfigService, dataService);\n    }\n\n    get addedLines(): AddedLine[] {\n        const getSinglePriceValue = (price: ProductSelectorSearch.Price) =>\n            price.__typename === 'SinglePrice' ? price.value : 0;\n        return (this.modifyOrderInput.addItems || [])\n            .map(row => {\n                const variantInfo = this.addedVariants.get(row.productVariantId);\n                if (variantInfo) {\n                    return {\n                        ...variantInfo,\n                        price: getSinglePriceValue(variantInfo.price),\n                        priceWithTax: getSinglePriceValue(variantInfo.priceWithTax),\n                        quantity: row.quantity,\n                    };\n                }\n            })\n            .filter(notNullOrUndefined);\n    }\n\n    ngOnInit(): void {\n        this.init();\n        this.dataService.promotion.getPromotions();\n        this.addressCustomFields = this.getCustomFieldConfig('Address');\n        this.modifyOrderInput.orderId = this.route.snapshot.paramMap.get('id') as string;\n        this.orderLineCustomFields = this.getCustomFieldConfig('OrderLine');\n        this.entity$.pipe(takeUntil(this.destroy$)).subscribe(order => {\n            if (order.couponCodes.length) {\n                this.couponCodesControl.setValue(order.couponCodes);\n            }\n            this.surchargeForm = new FormGroup({\n                description: new FormControl('', Validators.required),\n                sku: new FormControl(''),\n                price: new FormControl(0, Validators.required),\n                priceIncludesTax: new FormControl(true),\n                taxRate: new FormControl(0),\n                taxDescription: new FormControl(''),\n            });\n            if (!this.shippingAddressForm) {\n                this.shippingAddressForm = new FormGroup({\n                    fullName: new FormControl(order.shippingAddress?.fullName),\n                    company: new FormControl(order.shippingAddress?.company),\n                    streetLine1: new FormControl(order.shippingAddress?.streetLine1),\n                    streetLine2: new FormControl(order.shippingAddress?.streetLine2),\n                    city: new FormControl(order.shippingAddress?.city),\n                    province: new FormControl(order.shippingAddress?.province),\n                    postalCode: new FormControl(order.shippingAddress?.postalCode),\n                    countryCode: new FormControl(order.shippingAddress?.countryCode),\n                    phoneNumber: new FormControl(order.shippingAddress?.phoneNumber),\n                });\n                this.addAddressCustomFieldsFormGroup(this.shippingAddressForm, order.shippingAddress);\n            }\n            if (!this.billingAddressForm) {\n                this.billingAddressForm = new FormGroup({\n                    fullName: new FormControl(order.billingAddress?.fullName),\n                    company: new FormControl(order.billingAddress?.company),\n                    streetLine1: new FormControl(order.billingAddress?.streetLine1),\n                    streetLine2: new FormControl(order.billingAddress?.streetLine2),\n                    city: new FormControl(order.billingAddress?.city),\n                    province: new FormControl(order.billingAddress?.province),\n                    postalCode: new FormControl(order.billingAddress?.postalCode),\n                    countryCode: new FormControl(order.billingAddress?.countryCode),\n                    phoneNumber: new FormControl(order.billingAddress?.phoneNumber),\n                });\n                this.addAddressCustomFieldsFormGroup(this.billingAddressForm, order.billingAddress);\n            }\n            this.orderLineCustomFieldsFormArray = new FormArray([]);\n            for (const line of order.lines) {\n                const formGroup = new FormGroup({});\n                for (const { name } of this.orderLineCustomFields) {\n                    formGroup.addControl(name, new FormControl((line as any).customFields[name]));\n                }\n                formGroup.valueChanges.pipe(takeUntil(this.destroy$)).subscribe(value => {\n                    let modifyRow = this.modifyOrderInput.adjustOrderLines.find(\n                        l => l.orderLineId === line.id,\n                    );\n                    if (!modifyRow) {\n                        modifyRow = {\n                            orderLineId: line.id,\n                            quantity: line.quantity,\n                        };\n                        this.modifyOrderInput.adjustOrderLines.push(modifyRow);\n                    }\n                    if (this.orderLineCustomFields.length) {\n                        modifyRow.customFields = value;\n                    }\n                });\n                this.orderLineCustomFieldsFormArray.push(formGroup);\n            }\n        });\n\n        this.addItemCustomFieldsFormArray = new FormArray([]);\n        this.addItemCustomFieldsForm = new FormGroup({});\n        for (const customField of this.orderLineCustomFields) {\n            this.addItemCustomFieldsForm.addControl(customField.name, new FormControl());\n        }\n        this.availableCountries$ = this.dataService.settings\n            .getAvailableCountries()\n            .mapSingle(result => result.countries.items)\n            .pipe(shareReplay(1));\n        this.dataService.order\n            .getOrderHistory(this.id, {\n                take: 1,\n                sort: {\n                    createdAt: SortOrder.DESC,\n                },\n                filter: { type: { eq: HistoryEntryType.ORDER_STATE_TRANSITION } },\n            })\n            .single$.subscribe(({ order }) => {\n                this.previousState = order?.history.items[0].data.from;\n            });\n    }\n\n    ngOnDestroy(): void {\n        this.destroy();\n    }\n\n    transitionToPriorState(order: OrderDetail.Fragment) {\n        this.orderTransitionService\n            .transitionToPreModifyingState(order.id, order.nextStates)\n            .subscribe(result => {\n                this.router.navigate(['..'], { relativeTo: this.route });\n            });\n    }\n\n    canPreviewChanges(): boolean {\n        const { addItems, adjustOrderLines, surcharges } = this.modifyOrderInput;\n        return (\n            !!addItems?.length ||\n            !!surcharges?.length ||\n            !!adjustOrderLines?.length ||\n            (this.shippingAddressForm.dirty && this.shippingAddressForm.valid) ||\n            (this.billingAddressForm.dirty && this.billingAddressForm.valid) ||\n            this.couponCodesControl.dirty\n        );\n    }\n\n    isLineModified(line: OrderDetail.Lines): boolean {\n        return !!this.modifyOrderInput.adjustOrderLines?.find(\n            l => l.orderLineId === line.id && l.quantity !== line.quantity,\n        );\n    }\n\n    updateLineQuantity(line: OrderDetail.Lines, quantity: string) {\n        const { adjustOrderLines } = this.modifyOrderInput;\n        let row = adjustOrderLines?.find(l => l.orderLineId === line.id);\n        if (row && +quantity === line.quantity) {\n            // Remove the modification if the quantity is the same as\n            // the original order\n            adjustOrderLines?.splice(adjustOrderLines?.indexOf(row), 1);\n        }\n        if (!row) {\n            row = { orderLineId: line.id, quantity: +quantity };\n            adjustOrderLines?.push(row);\n        }\n        row.quantity = +quantity;\n    }\n\n    updateAddedItemQuantity(item: AddedLine, quantity: string) {\n        const row = this.modifyOrderInput.addItems?.find(l => l.productVariantId === item.productVariantId);\n        if (row) {\n            row.quantity = +quantity;\n        }\n    }\n\n    trackByProductVariantId(index: number, item: AddedLine) {\n        return item.productVariantId;\n    }\n\n    getSelectedItemPrice(result: ProductSelectorSearch.Items | undefined): number {\n        switch (result?.priceWithTax.__typename) {\n            case 'SinglePrice':\n                return result.priceWithTax.value;\n            default:\n                return 0;\n        }\n    }\n\n    addItemToOrder(result: ProductSelectorSearch.Items | undefined) {\n        if (!result) {\n            return;\n        }\n        const customFields = this.orderLineCustomFields.length\n            ? this.addItemCustomFieldsForm.value\n            : undefined;\n        let row = this.modifyOrderInput.addItems?.find(l =>\n            this.isMatchingAddItemRow(l, result, customFields),\n        );\n        if (!row) {\n            row = { productVariantId: result.productVariantId, quantity: 1 };\n            if (customFields) {\n                row.customFields = customFields;\n            }\n            this.modifyOrderInput.addItems?.push(row);\n        } else {\n            row.quantity++;\n        }\n        if (customFields) {\n            const formGroup = new FormGroup({});\n            for (const [key, value] of Object.entries(customFields)) {\n                formGroup.addControl(key, new FormControl(value));\n            }\n            this.addItemCustomFieldsFormArray.push(formGroup);\n            formGroup.valueChanges.pipe(takeUntil(this.destroy$)).subscribe(value => {\n                if (row) {\n                    row.customFields = value;\n                }\n            });\n        }\n        this.addItemCustomFieldsForm.reset({});\n        this.addItemSelectedVariant = undefined;\n        this.addedVariants.set(result.productVariantId, result);\n    }\n\n    private isMatchingAddItemRow(\n        row: ModifyOrderData['addItems'][number],\n        result: ProductSelectorSearch.Items,\n        customFields: any,\n    ): boolean {\n        return (\n            row.productVariantId === result.productVariantId &&\n            JSON.stringify(row.customFields) === JSON.stringify(customFields)\n        );\n    }\n\n    removeAddedItem(index: number) {\n        this.modifyOrderInput.addItems.splice(index, 1);\n        if (-1 < index) {\n            this.addItemCustomFieldsFormArray.removeAt(index);\n        }\n    }\n\n    getSurchargePrices(surcharge: SurchargeInput) {\n        const priceWithTax = surcharge.priceIncludesTax\n            ? surcharge.price\n            : Math.round(surcharge.price * ((100 + (surcharge.taxRate || 0)) / 100));\n        const price = surcharge.priceIncludesTax\n            ? Math.round(surcharge.price / ((100 + (surcharge.taxRate || 0)) / 100))\n            : surcharge.price;\n        return {\n            price,\n            priceWithTax,\n        };\n    }\n\n    addSurcharge(value: any) {\n        this.modifyOrderInput.surcharges?.push(value);\n        this.surchargeForm.reset({\n            price: 0,\n            priceIncludesTax: true,\n            taxRate: 0,\n        });\n    }\n\n    removeSurcharge(index: number) {\n        this.modifyOrderInput.surcharges?.splice(index, 1);\n    }\n\n    previewAndModify(order: OrderDetail.Fragment) {\n        const modifyOrderInput: ModifyOrderData = {\n            ...this.modifyOrderInput,\n            adjustOrderLines: this.modifyOrderInput.adjustOrderLines.map(line => {\n                return transformRelationCustomFieldInputs(simpleDeepClone(line), this.orderLineCustomFields);\n            }),\n        };\n        const input: ModifyOrderInput = {\n            ...modifyOrderInput,\n            ...(this.billingAddressForm.dirty ? { updateBillingAddress: this.billingAddressForm.value } : {}),\n            ...(this.shippingAddressForm.dirty\n                ? { updateShippingAddress: this.shippingAddressForm.value }\n                : {}),\n            dryRun: true,\n            couponCodes: this.couponCodesControl.dirty ? this.couponCodesControl.value : undefined,\n            note: this.note ?? '',\n            options: {\n                recalculateShipping: this.recalculateShipping,\n            },\n        };\n        const originalTotalWithTax = order.totalWithTax;\n        this.dataService.order\n            .modifyOrder(input)\n            .pipe(\n                switchMap(({ modifyOrder }) => {\n                    switch (modifyOrder.__typename) {\n                        case 'Order':\n                            return this.modalService.fromComponent(OrderEditsPreviewDialogComponent, {\n                                size: 'xl',\n                                closable: false,\n                                locals: {\n                                    originalTotalWithTax,\n                                    order: modifyOrder,\n                                    orderLineCustomFields: this.orderLineCustomFields,\n                                    modifyOrderInput: input,\n                                },\n                            });\n                        case 'InsufficientStockError':\n                        case 'NegativeQuantityError':\n                        case 'NoChangesSpecifiedError':\n                        case 'OrderLimitError':\n                        case 'OrderModificationStateError':\n                        case 'PaymentMethodMissingError':\n                        case 'RefundPaymentIdMissingError':\n                        case 'CouponCodeLimitError':\n                        case 'CouponCodeExpiredError':\n                        case 'CouponCodeInvalidError': {\n                            this.notificationService.error(modifyOrder.message);\n                            return of(false as const);\n                        }\n                        case null:\n                        case undefined:\n                            return of(false as const);\n                        default:\n                            assertNever(modifyOrder);\n                    }\n                }),\n                switchMap(result => {\n                    if (!result || result.result === OrderEditResultType.Cancel) {\n                        // re-fetch so that the preview values get overwritten in the cache.\n                        return this.dataService.order.getOrder(this.id).mapSingle(() => false);\n                    } else {\n                        // Do the modification\n                        const wetRunInput = {\n                            ...input,\n                            dryRun: false,\n                        };\n                        if (result.result === OrderEditResultType.Refund) {\n                            wetRunInput.refund = {\n                                paymentId: result.refundPaymentId,\n                                reason: result.refundNote,\n                            };\n                        }\n                        return this.dataService.order.modifyOrder(wetRunInput).pipe(\n                            switchMap(({ modifyOrder }) => {\n                                if (modifyOrder.__typename === 'Order') {\n                                    const priceDelta = modifyOrder.totalWithTax - originalTotalWithTax;\n                                    const nextState =\n                                        0 < priceDelta ? 'ArrangingAdditionalPayment' : this.previousState;\n\n                                    return this.dataService.order\n                                        .transitionToState(order.id, nextState)\n                                        .pipe(mapTo(true));\n                                } else {\n                                    this.notificationService.error((modifyOrder as ErrorResult).message);\n                                    return EMPTY;\n                                }\n                            }),\n                        );\n                    }\n                }),\n            )\n            .subscribe(result => {\n                if (result) {\n                    this.router.navigate(['../'], { relativeTo: this.route });\n                }\n            });\n    }\n\n    private addAddressCustomFieldsFormGroup(\n        parentFormGroup: FormGroup,\n        address?: OrderAddressFragment | null,\n    ) {\n        if (address && this.addressCustomFields.length) {\n            const addressCustomFieldsFormGroup = new FormGroup({});\n            for (const customFieldDef of this.addressCustomFields) {\n                const name = customFieldDef.name;\n                const value = (address as any).customFields?.[name];\n                addressCustomFieldsFormGroup.addControl(name, new FormControl(value));\n            }\n            parentFormGroup.addControl('customFields', addressCustomFieldsFormGroup);\n        }\n    }\n\n    protected setFormValues(entity: OrderDetail.Fragment, languageCode: LanguageCode): void {\n        /* not used */\n    }\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport {\n    GetOrderHistory,\n    HistoryEntry,\n    HistoryEntryType,\n    OrderDetail,\n    OrderDetailFragment,\n    TimelineDisplayType,\n} from '@vendure/admin-ui/core';\n\n@Component({\n    selector: 'vdr-order-history',\n    templateUrl: './order-history.component.html',\n    styleUrls: ['./order-history.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderHistoryComponent {\n    @Input() order: OrderDetailFragment;\n    @Input() history: GetOrderHistory.Items[];\n    @Output() addNote = new EventEmitter<{ note: string; isPublic: boolean }>();\n    @Output() updateNote = new EventEmitter<HistoryEntry>();\n    @Output() deleteNote = new EventEmitter<HistoryEntry>();\n    note = '';\n    noteIsPrivate = true;\n    expanded = false;\n    readonly type = HistoryEntryType;\n\n    getDisplayType(entry: GetOrderHistory.Items): TimelineDisplayType {\n        if (entry.type === HistoryEntryType.ORDER_STATE_TRANSITION) {\n            if (entry.data.to === 'Delivered') {\n                return 'success';\n            }\n            if (entry.data.to === 'Cancelled') {\n                return 'error';\n            }\n        }\n        if (entry.type === HistoryEntryType.ORDER_FULFILLMENT_TRANSITION) {\n            if (entry.data.to === 'Delivered') {\n                return 'success';\n            }\n        }\n        if (entry.type === HistoryEntryType.ORDER_PAYMENT_TRANSITION) {\n            if (entry.data.to === 'Declined' || entry.data.to === 'Cancelled') {\n                return 'error';\n            }\n        }\n        if (entry.type === HistoryEntryType.ORDER_CANCELLATION) {\n            return 'error';\n        }\n        if (entry.type === HistoryEntryType.ORDER_REFUND_TRANSITION) {\n            return 'warning';\n        }\n        return 'default';\n    }\n\n    getTimelineIcon(entry: GetOrderHistory.Items) {\n        if (entry.type === HistoryEntryType.ORDER_STATE_TRANSITION) {\n            if (entry.data.to === 'Delivered') {\n                return ['success-standard', 'is-solid'];\n            }\n            if (entry.data.to === 'Cancelled') {\n                return 'ban';\n            }\n        }\n        if (entry.type === HistoryEntryType.ORDER_PAYMENT_TRANSITION) {\n            if (entry.data.to === 'Settled') {\n                return 'credit-card';\n            }\n        }\n        if (entry.type === HistoryEntryType.ORDER_NOTE) {\n            return 'note';\n        }\n        if (entry.type === HistoryEntryType.ORDER_MODIFIED) {\n            return 'pencil';\n        }\n        if (entry.type === HistoryEntryType.ORDER_FULFILLMENT_TRANSITION) {\n            if (entry.data.to === 'Shipped') {\n                return 'truck';\n            }\n            if (entry.data.to === 'Delivered') {\n                return 'truck';\n            }\n        }\n    }\n\n    isFeatured(entry: GetOrderHistory.Items): boolean {\n        switch (entry.type) {\n            case HistoryEntryType.ORDER_STATE_TRANSITION: {\n                return (\n                    entry.data.to === 'Delivered' ||\n                    entry.data.to === 'Cancelled' ||\n                    entry.data.to === 'Settled'\n                );\n            }\n            case HistoryEntryType.ORDER_PAYMENT_TRANSITION:\n                return entry.data.to === 'Settled' || entry.data.to === 'Cancelled';\n            case HistoryEntryType.ORDER_FULFILLMENT_TRANSITION:\n                return entry.data.to === 'Delivered' || entry.data.to === 'Shipped';\n            case HistoryEntryType.ORDER_NOTE:\n            case HistoryEntryType.ORDER_MODIFIED:\n                return true;\n            default:\n                return false;\n        }\n    }\n\n    getFulfillment(entry: GetOrderHistory.Items): OrderDetail.Fulfillments | undefined {\n        if (\n            (entry.type === HistoryEntryType.ORDER_FULFILLMENT ||\n                entry.type === HistoryEntryType.ORDER_FULFILLMENT_TRANSITION) &&\n            this.order.fulfillments\n        ) {\n            return this.order.fulfillments.find(f => f.id === entry.data.fulfillmentId);\n        }\n    }\n\n    getPayment(entry: GetOrderHistory.Items): OrderDetail.Payments | undefined {\n        if (entry.type === HistoryEntryType.ORDER_PAYMENT_TRANSITION && this.order.payments) {\n            return this.order.payments.find(p => p.id === entry.data.paymentId);\n        }\n    }\n\n    getCancelledItems(entry: GetOrderHistory.Items): Array<{ name: string; quantity: number }> {\n        const itemMap = new Map<string, number>();\n        const cancelledItemIds: string[] = entry.data.orderItemIds;\n        for (const line of this.order.lines) {\n            for (const item of line.items) {\n                if (cancelledItemIds.includes(item.id)) {\n                    const count = itemMap.get(line.productVariant.name);\n                    if (count != null) {\n                        itemMap.set(line.productVariant.name, count + 1);\n                    } else {\n                        itemMap.set(line.productVariant.name, 1);\n                    }\n                }\n            }\n        }\n        return Array.from(itemMap.entries()).map(([name, quantity]) => ({ name, quantity }));\n    }\n\n    getModification(id: string) {\n        return this.order.modifications.find(m => m.id === id);\n    }\n\n    getName(entry: GetOrderHistory.Items): string {\n        const { administrator } = entry;\n        if (administrator) {\n            return `${administrator.firstName} ${administrator.lastName}`;\n        } else {\n            const customer = this.order.customer;\n            if (customer) {\n                return `${customer.firstName} ${customer.lastName}`;\n            }\n        }\n        return '';\n    }\n\n    addNoteToOrder() {\n        this.addNote.emit({ note: this.note, isPublic: !this.noteIsPrivate });\n        this.note = '';\n        this.noteIsPrivate = true;\n    }\n}\n","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    BaseListComponent,\n    DataService,\n    GetOrderList,\n    LocalStorageService,\n    LogicalOperator,\n    ModalService,\n    NotificationService,\n    OrderDataService,\n    OrderItem,\n    OrderListOptions,\n    ServerConfigService,\n    SortOrder,\n} from '@vendure/admin-ui/core';\nimport { Order } from '@vendure/common/lib/generated-types';\nimport dayjs from 'dayjs';\nimport { EMPTY, merge, Observable } from 'rxjs';\nimport {\n    debounceTime,\n    distinctUntilChanged,\n    filter,\n    map,\n    pairwise,\n    startWith,\n    switchMap,\n    takeUntil,\n} from 'rxjs/operators';\n\ninterface OrderFilterConfig {\n    active?: boolean;\n    states?: string[];\n}\n\ninterface FilterPreset {\n    name: string;\n    label: string;\n    config: OrderFilterConfig;\n}\n\n@Component({\n    selector: 'vdr-order-list',\n    templateUrl: './order-list.component.html',\n    styleUrls: ['./order-list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderListComponent\n    extends BaseListComponent<GetOrderList.Query, GetOrderList.Items>\n    implements OnInit, OnDestroy\n{\n    itemList: GetOrderList.Items[] = [];\n    audioElem: HTMLAudioElement;\n    refreshInterval: any;\n    processingTime: number;\n    audioOn = false;\n    searchControl = new FormControl('');\n    searchOrderCodeControl = new FormControl('');\n    searchLastNameControl = new FormControl('');\n    customFilterForm: FormGroup;\n    orderStates = this.serverConfigService.getOrderProcessStates().map(item => item.name);\n    filterPresets: FilterPreset[] = [\n        {\n            name: 'open', // have this show everything\n            label: _('order.filter-preset-open'),\n            config: {\n                active: false,\n                states: this.orderStates.filter(s => s !== 'Completed' && s !== 'Cancelled' && s !== 'Draft'),\n            },\n        },\n\n        {\n            name: 'completed',\n            label: _('order.filter-preset-completed'),\n            config: {\n                states: ['Completed', 'Cancelled'],\n            },\n        },\n        {\n            name: 'active',\n            label: _('order.filter-preset-active'),\n            config: {\n                active: true,\n            },\n        },\n        {\n            name: 'draft',\n            label: _('order.filter-preset-draft'),\n            config: {\n                active: false,\n                states: ['Draft'],\n            },\n        },\n    ];\n    activePreset$: Observable<string>;\n    canCreateDraftOrder = false;\n\n    constructor(\n        private serverConfigService: ServerConfigService,\n        private dataService: DataService,\n        private localStorageService: LocalStorageService,\n        router: Router,\n        route: ActivatedRoute,\n        private modalService: ModalService,\n        private notificationService: NotificationService,\n    ) {\n        super(router, route);\n        super.setQueryFn(\n            // tslint:disable-next-line:no-shadowed-variable\n            (take, skip) => this.dataService.order.getOrders({ take, skip }).refetchOnChannelChange(),\n            data => data.orders,\n            // tslint:disable-next-line:no-shadowed-variable\n            (skip, take) =>\n                this.createQueryOptions(\n                    skip,\n                    take,\n                    this.searchControl.value,\n                    this.route.snapshot.queryParamMap.get('filter') || 'open',\n                ),\n        );\n        const lastFilters = this.localStorageService.get('orderListLastCustomFilters');\n        if (lastFilters) {\n            this.setQueryParam(lastFilters, { replaceUrl: true });\n        }\n        this.canCreateDraftOrder = !!this.serverConfigService\n            .getOrderProcessStates()\n            .find(state => state.name === 'Created')\n            ?.to.includes('Draft');\n        if (!this.canCreateDraftOrder) {\n            this.filterPresets = this.filterPresets.filter(p => p.name !== 'draft');\n        }\n    }\n\n    async ngOnInit() {\n        super.ngOnInit();\n        this.activePreset$ = this.route.queryParamMap.pipe(\n            map(qpm => qpm.get('filter') || 'open'),\n            distinctUntilChanged(),\n        );\n        this.dataService.settings.getActiveChannel().single$.subscribe(channel => {\n            this.processingTime = (channel.activeChannel as any)['customFields']['processingTime'];\n        });\n        const searchTerms$ = merge(this.searchControl.valueChanges).pipe(\n            filter(value => 2 < value.length || value.length === 0),\n            debounceTime(250),\n        );\n        merge(searchTerms$, this.route.queryParamMap)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(val => {\n                this.refresh();\n            });\n\n        const queryParamMap = this.route.snapshot.queryParamMap;\n        this.customFilterForm = new FormGroup({\n            states: new FormControl(queryParamMap.getAll('states') ?? []),\n            placedAtStart: new FormControl(queryParamMap.get('placedAtStart')),\n            placedAtEnd: new FormControl(queryParamMap.get('placedAtEnd')),\n        });\n        this.setItemsPerPage(50); // default to 50\n        this.refreshInterval = setInterval(() => {\n            // const currentList = await this.items$.toPromise();\n            this.refresh();\n            // const newList = await this.items$.toPromise();\n            // console.log(newList.length, currentList.length);\n        }, 15000);\n\n        this.audioElem = document.getElementById('audio_player') as HTMLAudioElement;\n        this.audioElem.muted = true;\n        this.audioElem.addEventListener(\n            'play',\n            () => {\n                this.audioOn = true;\n                this.audioElem!.addEventListener('ended', () => {\n                    this.audioOn = true;\n                    this.audioElem!.muted = false;\n                });\n            },\n            { once: true },\n        );\n\n        this.audioElem.play().then(() => {\n            this.audioOn = true;\n        });\n        this.items$.subscribe(value => {\n            if (this.itemList.length !== 0 && this.itemList.length < value.length) {\n                this.playAudio();\n            }\n            this.itemList = value;\n            // console.log(previousValue?.length, currentValue?.length);\n            /** Do something */\n        });\n        // await this.refreshInterval();\n    }\n    toggleAudio() {\n        if (!this.audioOn) {\n            this.audioElem.play();\n        } else {\n            this.audioOn = !this.audioOn;\n            this.audioElem!.muted = !this.audioOn;\n        }\n    }\n    playAudio() {\n        this.audioElem?.play();\n    }\n    formatTime(date: Date) {\n        return dayjs(date).format('hh:mm A');\n    }\n    formatDate(date: Date) {\n        return dayjs(date).format('DD/MMM');\n    }\n\n    getNextState(order: Order, buttonText: boolean = false) {\n        const authorizedCashPayment = order.payments?.filter(\n            p => p.state === 'Authorized' && p.method === 'cash',\n        )[0];\n        if (order.state === 'PaymentSettled' || order.state === 'PaymentAuthorized') {\n            return 'Processing';\n        }\n        if (order.state === 'Processing') {\n            return buttonText ? 'Ready For Pickup' : 'ReadyForPickup';\n        }\n        if (order.state === 'ReadyForPickup') {\n            if (order.shippingLines[0].shippingMethod.code === 'delivery') {\n                return 'Delivering';\n            }\n            if (authorizedCashPayment) {\n                return buttonText ? 'Collect Cash' : 'Completed';\n            } else {\n                return 'Completed';\n            }\n        }\n        if (order.state === 'Delivering') {\n            if (authorizedCashPayment) {\n                return buttonText ? 'Collect Cash' : 'Completed';\n            } else {\n                return 'Completed';\n            }\n        }\n\n        return 'Processing';\n    }\n\n    toNextState(order: Order) {\n        return this.modalService\n            .dialog({\n                title: `Proceed to ${this.getNextState(order, true)}?`,\n                body: `Are you sure you want to proceed to '${this.getNextState(order, true)}'?`,\n                buttons: [\n                    { type: 'secondary', label: _('common.cancel') },\n                    { type: 'primary', label: 'Confirm', returnValue: true },\n                ],\n            })\n            .pipe(\n                switchMap(async res => {\n                    if (res) {\n                        if (this.getNextState(order) === 'Completed') {\n                            const authorizedCashPayment = order.payments?.filter(\n                                p => p.state === 'Authorized' && p.method === 'cash',\n                            )[0];\n                            if (authorizedCashPayment) {\n                                const output = await this.dataService.order\n                                    .settlePayment(authorizedCashPayment?.id.toString())\n                                    .toPromise();\n                            }\n                        }\n                        await this.dataService.order\n                            .transitionToState(order.id.toString(), this.getNextState(order))\n                            .toPromise();\n                        return true;\n                    }\n                    return EMPTY;\n                }),\n            )\n            .subscribe(\n                () => {\n                    this.notificationService.success('Successfully Updated Order State');\n                    this.refresh();\n                },\n                err => {\n                    this.notificationService.error('Error Updating Order State');\n                },\n            );\n    }\n\n    selectFilterPreset(presetName: string) {\n        const lastCustomFilters = this.localStorageService.get('orderListLastCustomFilters') ?? {};\n        const emptyCustomFilters = { states: undefined, placedAtStart: undefined, placedAtEnd: undefined };\n        const filters = presetName === 'custom' ? lastCustomFilters : emptyCustomFilters;\n        this.setQueryParam(\n            {\n                filter: presetName,\n                page: 1,\n                ...filters,\n            },\n            { replaceUrl: true },\n        );\n    }\n\n    applyCustomFilters() {\n        const formValue = this.customFilterForm.value;\n        const customFilters = {\n            states: formValue.states,\n            placedAtStart: formValue.placedAtStart,\n            placedAtEnd: formValue.placedAtEnd,\n        };\n        this.setQueryParam({\n            filter: 'custom',\n            ...customFilters,\n        });\n        this.customFilterForm.markAsPristine();\n        this.localStorageService.set('orderListLastCustomFilters', customFilters);\n    }\n\n    private createQueryOptions(\n        // tslint:disable-next-line:no-shadowed-variable\n        skip: number,\n        take: number,\n        searchTerm: string,\n        activeFilterPreset?: string,\n    ): { options: OrderListOptions } {\n        const filterConfig = this.filterPresets.find(p => p.name === activeFilterPreset);\n        // tslint:disable-next-line:no-shadowed-variable\n        let filter: any = {};\n        let filterOperator: LogicalOperator = LogicalOperator.AND;\n        if (filterConfig) {\n            if (filterConfig.config.active != null) {\n                filter.active = {\n                    eq: filterConfig.config.active,\n                };\n            }\n            if (filterConfig.config.states) {\n                filter.state = {\n                    in: filterConfig.config.states,\n                };\n            }\n        } else if (activeFilterPreset === 'custom') {\n            const queryParams = this.route.snapshot.queryParamMap;\n            const states = queryParams.getAll('states') ?? [];\n            const placedAtStart = queryParams.get('placedAtStart');\n            const placedAtEnd = queryParams.get('placedAtEnd');\n            if (states.length) {\n                filter.state = {\n                    in: states,\n                };\n            }\n            if (placedAtStart && placedAtEnd) {\n                filter.orderPlacedAt = {\n                    between: {\n                        start: placedAtStart,\n                        end: placedAtEnd,\n                    },\n                };\n            } else if (placedAtStart) {\n                filter.orderPlacedAt = {\n                    after: placedAtStart,\n                };\n            } else if (placedAtEnd) {\n                filter.orderPlacedAt = {\n                    before: placedAtEnd,\n                };\n            }\n        }\n        if (searchTerm) {\n            filter = {\n                customerLastName: {\n                    contains: searchTerm,\n                },\n                transactionId: {\n                    contains: searchTerm,\n                },\n                code: {\n                    contains: searchTerm,\n                },\n            };\n            filterOperator = LogicalOperator.OR;\n        }\n        return {\n            options: {\n                skip,\n                take,\n                filter: {\n                    ...(filter ?? {}),\n                },\n                sort: {\n                    updatedAt: SortOrder.DESC,\n                },\n                filterOperator,\n            },\n        };\n    }\n\n    getShippingNames(order: Order) {\n        if (order.shippingLines.length) {\n            return order.shippingLines.map(shippingLine => shippingLine.shippingMethod.name).join(', ');\n        } else {\n            return '';\n        }\n    }\n\n    ngOnDestroy(): void {\n        if (this.refreshInterval) {\n            clearInterval(this.refreshInterval);\n        }\n    }\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { CurrencyCode } from '@vendure/admin-ui/core';\nimport { OrderDetail } from '@vendure/admin-ui/core';\n\n@Component({\n    selector: 'vdr-order-payment-card',\n    templateUrl: './order-payment-card.component.html',\n    styleUrls: ['./order-payment-card.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderPaymentCardComponent {\n    @Input() payment: OrderDetail.Payments;\n    @Input() currencyCode: CurrencyCode;\n    @Output() settlePayment = new EventEmitter<OrderDetail.Payments>();\n    @Output() transitionPaymentState = new EventEmitter<{ payment: OrderDetail.Payments; state: string }>();\n    @Output() settleRefund = new EventEmitter<OrderDetail.Refunds>();\n\n    refundHasMetadata(refund?: OrderDetail.Refunds): boolean {\n        return !!refund && Object.keys(refund.metadata).length > 0;\n    }\n\n    nextOtherStates(): string[] {\n        if (!this.payment) {\n            return [];\n        }\n        return this.payment.nextStates.filter(s => s !== 'Settled' && s !== 'Error');\n    }\n}\n","export const NODE_HEIGHT = 72;\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { OrderProcessNodeComponent } from './order-process-node.component';\n\n@Component({\n    selector: 'vdr-order-process-edge',\n    templateUrl: './order-process-edge.component.html',\n    styleUrls: ['./order-process-edge.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderProcessEdgeComponent implements OnInit {\n    @Input() from: OrderProcessNodeComponent;\n    @Input() to: OrderProcessNodeComponent;\n    @Input() index: number;\n    active$: Observable<boolean>;\n\n    ngOnInit() {\n        this.active$ = this.from.active$\n            .asObservable()\n            .pipe(tap((active) => this.to.activeTarget$.next(active)));\n    }\n\n    getStyle() {\n        const direction = this.from.index < this.to.index ? 'down' : 'up';\n        const startPos = this.from.getPos(direction === 'down' ? 'bottom' : 'top');\n        const endPos = this.to.getPos(direction === 'down' ? 'top' : 'bottom');\n        const dX = Math.abs(startPos.x - endPos.x);\n        const dY = Math.abs(startPos.y - endPos.y);\n        const length = Math.sqrt(dX ** 2 + dY ** 2);\n        return {\n            'top.px': startPos.y,\n            'left.px': startPos.x + (direction === 'down' ? 10 : 40) + this.index * 12,\n            'height.px': length,\n            'width.px': 1,\n            ...(direction === 'up'\n                ? {\n                      transform: 'rotateZ(180deg)',\n                      'transform-origin': 'top',\n                  }\n                : {}),\n        };\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    Input,\n    OnChanges,\n    SimpleChanges,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { NODE_HEIGHT } from './constants';\nimport { StateNode } from './types';\n\n@Component({\n    selector: 'vdr-order-process-node',\n    templateUrl: './order-process-node.component.html',\n    styleUrls: ['./order-process-node.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderProcessNodeComponent implements OnChanges {\n    @Input() node: StateNode;\n    @Input() index: number;\n    @Input() active: boolean;\n    active$ = new BehaviorSubject<boolean>(false);\n    activeTarget$ = new BehaviorSubject<boolean>(false);\n    isCancellable = false;\n    // We use a class field here to prevent the\n    // i18n extractor from extracting a \"Cancelled\" key\n    cancelledState = 'Cancelled';\n\n    constructor(private elementRef: ElementRef<HTMLDivElement>) {}\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.isCancellable = !!this.node.to.find((s) => s.name === 'Cancelled');\n        if (changes.active) {\n            this.active$.next(this.active);\n        }\n    }\n\n    getPos(origin: 'top' | 'bottom' = 'top'): { x: number; y: number } {\n        const rect = this.elementRef.nativeElement.getBoundingClientRect();\n        const nodeHeight =\n            this.elementRef.nativeElement.querySelector('.node')?.getBoundingClientRect().height ?? 0;\n        return {\n            x: 10,\n            y: this.index * NODE_HEIGHT + (origin === 'bottom' ? nodeHeight : 0),\n        };\n    }\n\n    getStyle() {\n        const pos = this.getPos();\n        return {\n            'top.px': pos.y,\n            'left.px': pos.x,\n        };\n    }\n}\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    HostBinding,\n    Input,\n    OnChanges,\n    OnInit,\n    QueryList,\n    SimpleChanges,\n    ViewChildren,\n} from '@angular/core';\nimport { OrderProcessState } from '@vendure/admin-ui/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { NODE_HEIGHT } from './constants';\nimport { OrderProcessNodeComponent } from './order-process-node.component';\nimport { StateNode } from './types';\n\n@Component({\n    selector: 'vdr-order-process-graph',\n    templateUrl: './order-process-graph.component.html',\n    styleUrls: ['./order-process-graph.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderProcessGraphComponent implements OnInit, OnChanges, AfterViewInit {\n    @Input() states: OrderProcessState[];\n    @Input() initialState?: string;\n    setActiveState$ = new BehaviorSubject<string | undefined>(undefined);\n    activeState$: Observable<string | undefined>;\n    nodes: StateNode[] = [];\n    edges: Array<{ from: OrderProcessNodeComponent; to: OrderProcessNodeComponent; index: number }> = [];\n\n    @ViewChildren(OrderProcessNodeComponent) nodeComponents: QueryList<OrderProcessNodeComponent>;\n\n    constructor(private changeDetector: ChangeDetectorRef) {}\n\n    @HostBinding('style.height.px')\n    get outerHeight(): number {\n        return this.nodes.length * NODE_HEIGHT;\n    }\n\n    ngOnInit() {\n        this.setActiveState$.next(this.initialState);\n        this.activeState$ = this.setActiveState$.pipe(debounceTime(150));\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        this.populateNodes();\n    }\n\n    ngAfterViewInit() {\n        setTimeout(() => this.populateEdges());\n    }\n\n    onMouseOver(stateName: string) {\n        this.setActiveState$.next(stateName);\n    }\n\n    onMouseOut() {\n        this.setActiveState$.next(this.initialState);\n    }\n\n    getNodeFor(state: string): OrderProcessNodeComponent | undefined {\n        if (this.nodeComponents) {\n            return this.nodeComponents.find((n) => n.node.name === state);\n        }\n    }\n\n    private populateNodes() {\n        const stateNodeMap = new Map<string, StateNode>();\n        for (const state of this.states) {\n            stateNodeMap.set(state.name, {\n                name: state.name,\n                to: [],\n            });\n        }\n\n        for (const [name, stateNode] of stateNodeMap.entries()) {\n            const targets = this.states.find((s) => s.name === name)?.to ?? [];\n            for (const target of targets) {\n                const targetNode = stateNodeMap.get(target);\n                if (targetNode) {\n                    stateNode.to.push(targetNode);\n                }\n            }\n        }\n        this.nodes = [...stateNodeMap.values()].filter((n) => n.name !== 'Cancelled');\n    }\n\n    private populateEdges() {\n        for (const node of this.nodes) {\n            const nodeCmp = this.getNodeFor(node.name);\n            let index = 0;\n            for (const to of node.to) {\n                const toCmp = this.getNodeFor(to.name);\n                if (nodeCmp && toCmp && nodeCmp !== toCmp) {\n                    this.edges.push({\n                        to: toCmp,\n                        from: nodeCmp,\n                        index,\n                    });\n                    index++;\n                }\n            }\n        }\n        this.edges = [...this.edges];\n        this.changeDetector.markForCheck();\n    }\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { AdjustmentType, CustomFieldConfig, OrderDetail, OrderDetailFragment } from '@vendure/admin-ui/core';\n\n@Component({\n    selector: 'vdr-order-table',\n    templateUrl: './order-table.component.html',\n    styleUrls: ['./order-table.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderTableComponent implements OnInit {\n    @Input() order: OrderDetail.Fragment;\n    @Input() orderLineCustomFields: CustomFieldConfig[];\n    @Input() isDraft = false;\n    @Output() adjust = new EventEmitter<{ lineId: string; quantity: number }>();\n    @Output() remove = new EventEmitter<{ lineId: string }>();\n    orderLineCustomFieldsVisible = false;\n    customFieldsForLine: {\n        [lineId: string]: Array<{ config: CustomFieldConfig; formGroup: FormGroup; value: any }>;\n    } = {};\n\n    get visibleOrderLineCustomFields(): CustomFieldConfig[] {\n        return this.orderLineCustomFieldsVisible ? this.orderLineCustomFields : [];\n    }\n\n    get showElided(): boolean {\n        return !this.orderLineCustomFieldsVisible && 0 < this.orderLineCustomFields.length;\n    }\n\n    ngOnInit(): void {\n        this.orderLineCustomFieldsVisible = this.orderLineCustomFields.length < 2;\n        this.getLineCustomFields();\n    }\n\n    draftInputBlur(line: OrderDetailFragment['lines'][number], quantity: number) {\n        if (line.quantity !== quantity) {\n            this.adjust.emit({ lineId: line.id, quantity });\n        }\n    }\n\n    toggleOrderLineCustomFields() {\n        this.orderLineCustomFieldsVisible = !this.orderLineCustomFieldsVisible;\n    }\n\n    getLineDiscounts(line: OrderDetail.Lines) {\n        return line.discounts.filter(a => a.type === AdjustmentType.PROMOTION);\n    }\n\n    private getLineCustomFields() {\n        for (const line of this.order.lines) {\n            const formGroup = new FormGroup({});\n            const result = this.orderLineCustomFields\n                .map(config => {\n                    const value = (line as any).customFields[config.name];\n                    formGroup.addControl(config.name, new FormControl(value));\n                    return {\n                        config,\n                        formGroup,\n                        value,\n                    };\n                })\n                .filter(field => {\n                    return this.orderLineCustomFieldsVisible ? true : field.value != null;\n                });\n            this.customFieldsForLine[line.id] = result;\n        }\n    }\n\n    getPromotionLink(promotion: OrderDetail.Discounts): any[] {\n        const id = promotion.adjustmentSource.split(':')[1];\n        return ['/marketing', 'promotions', id];\n    }\n\n    getCouponCodeForAdjustment(\n        order: OrderDetail.Fragment,\n        promotionAdjustment: OrderDetail.Discounts,\n    ): string | undefined {\n        const id = promotionAdjustment.adjustmentSource.split(':')[1];\n        const promotion = order.promotions.find(p => p.id === id);\n        if (promotion) {\n            return promotion.couponCode || undefined;\n        }\n    }\n\n    getShippingNames(order: OrderDetail.Fragment) {\n        if (order.shippingLines.length) {\n            return order.shippingLines.map(shippingLine => shippingLine.shippingMethod.name).join(', ');\n        } else {\n            return '';\n        }\n    }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\nimport { CurrencyCode, OrderDetail } from '@vendure/admin-ui/core';\n\n@Component({\n    selector: 'vdr-payment-detail',\n    templateUrl: './payment-detail.component.html',\n    styleUrls: ['./payment-detail.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaymentDetailComponent {\n    @Input() payment: OrderDetail.Payments;\n    @Input() currencyCode: CurrencyCode;\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'vdr-payment-state-label',\n    templateUrl: './payment-state-label.component.html',\n    styleUrls: ['./payment-state-label.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaymentStateLabelComponent {\n    @Input() state: string;\n\n    get chipColorType() {\n        switch (this.state) {\n            case 'Authorized':\n                return 'warning';\n            case 'Settled':\n                return 'success';\n            case 'Declined':\n            case 'Cancelled':\n                return 'error';\n        }\n    }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'vdr-refund-state-label',\n    templateUrl: './refund-state-label.component.html',\n    styleUrls: ['./refund-state-label.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RefundStateLabelComponent {\n    @Input() state: string;\n\n    get chipColorType() {\n        switch (this.state) {\n            case 'Pending':\n                return 'warning';\n            case 'Settled':\n                return 'success';\n            case 'Failed':\n                return 'error';\n        }\n    }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\n\n@Component({\n    selector: 'vdr-simple-item-list',\n    templateUrl: './simple-item-list.component.html',\n    styleUrls: ['./simple-item-list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SimpleItemListComponent {\n    @Input() items: Array<{ name: string; quantity: number }>;\n}\n","import { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    ActivationStart,\n    Resolve,\n    Router,\n    RouterStateSnapshot,\n} from '@angular/router';\nimport { DataService, OrderDetailFragment } from '@vendure/admin-ui/core';\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\nimport { EMPTY, Observable } from 'rxjs';\nimport { filter, map, shareReplay, switchMap, take, takeUntil } from 'rxjs/operators';\nimport { DraftOrderDetailComponent } from '../../components/draft-order-detail/draft-order-detail.component';\n\n/**\n * Resolves the id from the path into a Customer entity.\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrderResolver implements Resolve<Observable<OrderDetailFragment>> {\n    constructor(private router: Router, private dataService: DataService) {}\n\n    /** @internal */\n    resolve(\n        route: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot,\n    ): Observable<Observable<OrderDetailFragment>> {\n        const id = route.paramMap.get('id');\n\n        // Complete the entity stream upon navigating away\n        const navigateAway$ = this.router.events.pipe(filter(event => event instanceof ActivationStart));\n\n        const stream = this.dataService.order\n            .getOrder(id!)\n            .mapStream(data => data.order)\n            .pipe(\n                switchMap(order => {\n                    if (order?.state === 'Draft' && route.component !== DraftOrderDetailComponent) {\n                        // Make sure Draft orders only get displayed with the DraftOrderDetailComponent\n                        this.router.navigate(['/orders/draft', id]);\n                        return EMPTY;\n                    } else {\n                        return [order];\n                    }\n                }),\n                takeUntil(navigateAway$),\n                filter(notNullOrUndefined),\n                shareReplay(1),\n            );\n\n        return stream.pipe(\n            take(1),\n            map(() => stream),\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { DataService } from '@vendure/admin-ui/core';\nimport { EMPTY, Observable } from 'rxjs';\nimport { map, mergeMapTo, tap } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class OrderGuard implements CanActivate {\n    constructor(private dataService: DataService, private router: Router) {}\n\n    canActivate(\n        route: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot,\n    ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n        const isDraft = state.url.includes('orders/draft');\n        const id = route.paramMap.get('id');\n        if (isDraft) {\n            if (id === 'create') {\n                return this.dataService.order\n                    .createDraftOrder()\n                    .pipe(\n                        map(({ createDraftOrder }) =>\n                            this.router.parseUrl(`/orders/draft/${createDraftOrder.id}`),\n                        ),\n                    );\n            } else {\n                return true;\n            }\n        } else {\n            return true;\n        }\n    }\n}\n","import { Route } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    BreadcrumbLabelLinkPair,\n    CanDeactivateDetailGuard,\n    detailBreadcrumb,\n    OrderDetail,\n} from '@vendure/admin-ui/core';\nimport { map } from 'rxjs/operators';\n\nimport { DraftOrderDetailComponent } from './components/draft-order-detail/draft-order-detail.component';\nimport { OrderDetailComponent } from './components/order-detail/order-detail.component';\nimport { OrderEditorComponent } from './components/order-editor/order-editor.component';\nimport { OrderListComponent } from './components/order-list/order-list.component';\nimport { OrderResolver } from './providers/routing/order-resolver';\nimport { OrderGuard } from './providers/routing/order.guard';\n\nexport const orderRoutes: Route[] = [\n    {\n        path: '',\n        component: OrderListComponent,\n        data: {\n            breadcrumb: _('breadcrumb.orders'),\n        },\n    },\n    {\n        path: 'draft/:id',\n        component: DraftOrderDetailComponent,\n        resolve: {\n            entity: OrderResolver,\n        },\n        canActivate: [OrderGuard],\n        canDeactivate: [CanDeactivateDetailGuard],\n        data: {\n            breadcrumb: orderBreadcrumb,\n        },\n    },\n    {\n        path: ':id',\n        component: OrderDetailComponent,\n        resolve: {\n            entity: OrderResolver,\n        },\n        canActivate: [OrderGuard],\n        canDeactivate: [CanDeactivateDetailGuard],\n        data: {\n            breadcrumb: orderBreadcrumb,\n        },\n    },\n    {\n        path: ':id/modify',\n        component: OrderEditorComponent,\n        resolve: {\n            entity: OrderResolver,\n        },\n        // canDeactivate: [CanDeactivateDetailGuard],\n        data: {\n            breadcrumb: modifyingOrderBreadcrumb,\n        },\n    },\n];\n\nexport function orderBreadcrumb(data: any, params: any) {\n    return detailBreadcrumb<OrderDetail.Fragment>({\n        entity: data.entity,\n        id: params.id,\n        breadcrumbKey: 'breadcrumb.orders',\n        getName: order => order.code,\n        route: '',\n    });\n}\n\nexport function modifyingOrderBreadcrumb(data: any, params: any) {\n    return orderBreadcrumb(data, params).pipe(\n        map((breadcrumbs: BreadcrumbLabelLinkPair[]) => {\n            const modifiedBreadcrumbs = breadcrumbs.slice();\n            modifiedBreadcrumbs[0].link[0] = '../';\n            modifiedBreadcrumbs[1].link[0] = '../orders';\n            return modifiedBreadcrumbs.concat({ label: _('breadcrumb.modifying'), link: [''] });\n        }) as any,\n    );\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '@vendure/admin-ui/core';\n\nimport { AddManualPaymentDialogComponent } from './components/add-manual-payment-dialog/add-manual-payment-dialog.component';\nimport { CancelOrderDialogComponent } from './components/cancel-order-dialog/cancel-order-dialog.component';\nimport { DraftOrderDetailComponent } from './components/draft-order-detail/draft-order-detail.component';\nimport { DraftOrderVariantSelectorComponent } from './components/draft-order-variant-selector/draft-order-variant-selector.component';\nimport { FulfillOrderDialogComponent } from './components/fulfill-order-dialog/fulfill-order-dialog.component';\nimport { FulfillmentCardComponent } from './components/fulfillment-card/fulfillment-card.component';\nimport { FulfillmentDetailComponent } from './components/fulfillment-detail/fulfillment-detail.component';\nimport { FulfillmentStateLabelComponent } from './components/fulfillment-state-label/fulfillment-state-label.component';\nimport { LineFulfillmentComponent } from './components/line-fulfillment/line-fulfillment.component';\nimport { LineRefundsComponent } from './components/line-refunds/line-refunds.component';\nimport { ModificationDetailComponent } from './components/modification-detail/modification-detail.component';\nimport { OrderCustomFieldsCardComponent } from './components/order-custom-fields-card/order-custom-fields-card.component';\nimport { OrderDetailComponent } from './components/order-detail/order-detail.component';\nimport { OrderEditorComponent } from './components/order-editor/order-editor.component';\nimport { OrderEditsPreviewDialogComponent } from './components/order-edits-preview-dialog/order-edits-preview-dialog.component';\nimport { OrderHistoryComponent } from './components/order-history/order-history.component';\nimport { OrderListComponent } from './components/order-list/order-list.component';\nimport { OrderPaymentCardComponent } from './components/order-payment-card/order-payment-card.component';\nimport { OrderProcessGraphDialogComponent } from './components/order-process-graph-dialog/order-process-graph-dialog.component';\nimport { OrderProcessEdgeComponent } from './components/order-process-graph/order-process-edge.component';\nimport { OrderProcessGraphComponent } from './components/order-process-graph/order-process-graph.component';\nimport { OrderProcessNodeComponent } from './components/order-process-graph/order-process-node.component';\nimport { OrderStateSelectDialogComponent } from './components/order-state-select-dialog/order-state-select-dialog.component';\nimport { OrderTableComponent } from './components/order-table/order-table.component';\nimport { PaymentDetailComponent } from './components/payment-detail/payment-detail.component';\nimport { PaymentStateLabelComponent } from './components/payment-state-label/payment-state-label.component';\nimport { RefundOrderDialogComponent } from './components/refund-order-dialog/refund-order-dialog.component';\nimport { RefundStateLabelComponent } from './components/refund-state-label/refund-state-label.component';\nimport { SelectCustomerDialogComponent } from './components/select-customer-dialog/select-customer-dialog.component';\nimport { SettleRefundDialogComponent } from './components/settle-refund-dialog/settle-refund-dialog.component';\nimport { SimpleItemListComponent } from './components/simple-item-list/simple-item-list.component';\nimport { orderRoutes } from './order.routes';\nimport { SelectAddressDialogComponent } from './components/select-address-dialog/select-address-dialog.component';\nimport { CouponCodeSelectorComponent } from './components/coupon-code-selector/coupon-code-selector.component';\nimport { SelectShippingMethodDialogComponent } from './components/select-shipping-method-dialog/select-shipping-method-dialog.component';\n\n@NgModule({\n    imports: [SharedModule, RouterModule.forChild(orderRoutes)],\n    declarations: [\n        OrderListComponent,\n        OrderDetailComponent,\n        FulfillOrderDialogComponent,\n        LineFulfillmentComponent,\n        RefundOrderDialogComponent,\n        CancelOrderDialogComponent,\n        PaymentStateLabelComponent,\n        LineRefundsComponent,\n        OrderPaymentCardComponent,\n        RefundStateLabelComponent,\n        SettleRefundDialogComponent,\n        OrderHistoryComponent,\n        FulfillmentDetailComponent,\n        PaymentDetailComponent,\n        SimpleItemListComponent,\n        OrderCustomFieldsCardComponent,\n        OrderProcessGraphComponent,\n        OrderProcessNodeComponent,\n        OrderProcessEdgeComponent,\n        OrderProcessGraphDialogComponent,\n        FulfillmentStateLabelComponent,\n        FulfillmentCardComponent,\n        OrderEditorComponent,\n        OrderTableComponent,\n        OrderEditsPreviewDialogComponent,\n        ModificationDetailComponent,\n        AddManualPaymentDialogComponent,\n        OrderStateSelectDialogComponent,\n        DraftOrderDetailComponent,\n        DraftOrderVariantSelectorComponent,\n        SelectCustomerDialogComponent,\n        SelectAddressDialogComponent,\n        CouponCodeSelectorComponent,\n        SelectShippingMethodDialogComponent,\n    ],\n})\nexport class OrderModule {}\n","// This file was generated by the build-public-api.ts script\nexport * from './components/add-manual-payment-dialog/add-manual-payment-dialog.component';\nexport * from './components/cancel-order-dialog/cancel-order-dialog.component';\nexport * from './components/coupon-code-selector/coupon-code-selector.component';\nexport * from './components/draft-order-detail/draft-order-detail.component';\nexport * from './components/draft-order-variant-selector/draft-order-variant-selector.component';\nexport * from './components/fulfill-order-dialog/fulfill-order-dialog.component';\nexport * from './components/fulfillment-card/fulfillment-card.component';\nexport * from './components/fulfillment-detail/fulfillment-detail.component';\nexport * from './components/fulfillment-state-label/fulfillment-state-label.component';\nexport * from './components/line-fulfillment/line-fulfillment.component';\nexport * from './components/line-refunds/line-refunds.component';\nexport * from './components/modification-detail/modification-detail.component';\nexport * from './components/order-custom-fields-card/order-custom-fields-card.component';\nexport * from './components/order-detail/order-detail.component';\nexport * from './components/order-editor/order-editor.component';\nexport * from './components/order-edits-preview-dialog/order-edits-preview-dialog.component';\nexport * from './components/order-history/order-history.component';\nexport * from './components/order-list/order-list.component';\nexport * from './components/order-payment-card/order-payment-card.component';\nexport * from './components/order-process-graph/constants';\nexport * from './components/order-process-graph/order-process-edge.component';\nexport * from './components/order-process-graph/order-process-graph.component';\nexport * from './components/order-process-graph/order-process-node.component';\nexport * from './components/order-process-graph/types';\nexport * from './components/order-process-graph-dialog/order-process-graph-dialog.component';\nexport * from './components/order-state-select-dialog/order-state-select-dialog.component';\nexport * from './components/order-table/order-table.component';\nexport * from './components/payment-detail/payment-detail.component';\nexport * from './components/payment-state-label/payment-state-label.component';\nexport * from './components/refund-order-dialog/refund-order-dialog.component';\nexport * from './components/refund-state-label/refund-state-label.component';\nexport * from './components/select-address-dialog/select-address-dialog.component';\nexport * from './components/select-address-dialog/select-address-dialog.graphql';\nexport * from './components/select-customer-dialog/select-customer-dialog.component';\nexport * from './components/select-shipping-method-dialog/select-shipping-method-dialog.component';\nexport * from './components/settle-refund-dialog/settle-refund-dialog.component';\nexport * from './components/simple-item-list/simple-item-list.component';\nexport * from './order.module';\nexport * from './order.routes';\nexport * from './providers/order-transition.service';\nexport * from './providers/routing/order-resolver';\nexport * from './providers/routing/order.guard';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["_"],"mappings":"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"}