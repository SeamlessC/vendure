{"version":3,"file":"vendure-admin-ui-catalog.js","sources":["../../src/lib/catalog/src/components/asset-detail/asset-detail.component.ts","../../src/lib/catalog/src/components/asset-list/asset-list.component.ts","../../src/lib/catalog/src/components/collection-detail/collection-detail.component.ts","../../src/lib/catalog/src/components/collection-list/collection-list.component.ts","../../src/lib/catalog/src/components/facet-detail/facet-detail.component.ts","../../src/lib/catalog/src/components/facet-list/facet-list.component.ts","../../src/lib/catalog/src/providers/product-detail/replace-last.ts","../../src/lib/catalog/src/providers/product-detail/product-detail.service.ts","../../src/lib/catalog/src/components/apply-facet-dialog/apply-facet-dialog.component.ts","../../src/lib/catalog/src/components/assign-products-to-channel-dialog/assign-products-to-channel-dialog.component.ts","../../src/lib/catalog/src/components/product-detail/product-detail.component.ts","../../src/lib/catalog/src/components/product-list/product-list.component.ts","../../src/lib/catalog/src/components/product-options-editor/product-options-editor.component.ts","../../src/lib/catalog/src/components/confirm-variant-deletion-dialog/confirm-variant-deletion-dialog.component.ts","../../src/lib/catalog/src/components/product-variants-editor/product-variants-editor.component.ts","../../src/lib/catalog/src/providers/routing/asset-resolver.ts","../../src/lib/catalog/src/providers/routing/collection-resolver.ts","../../src/lib/catalog/src/providers/routing/facet-resolver.ts","../../src/lib/catalog/src/providers/routing/product-resolver.ts","../../src/lib/catalog/src/providers/routing/product-variants-resolver.ts","../../src/lib/catalog/src/catalog.routes.ts","../../src/lib/catalog/src/components/assets/assets.component.ts","../../src/lib/catalog/src/components/assign-to-channel-dialog/assign-to-channel-dialog.component.ts","../../src/lib/catalog/src/components/bulk-add-facet-values-dialog/bulk-add-facet-values-dialog.graphql.ts","../../src/lib/catalog/src/components/bulk-add-facet-values-dialog/bulk-add-facet-values-dialog.component.ts","../../src/lib/catalog/src/components/collection-contents/collection-contents.component.ts","../../src/lib/catalog/src/components/collection-list/collection-list-bulk-actions.ts","../../src/lib/catalog/src/components/collection-tree/array-to-tree.ts","../../src/lib/catalog/src/components/collection-tree/collection-tree.component.ts","../../src/lib/catalog/src/components/collection-tree/collection-tree-node.component.ts","../../src/lib/catalog/src/components/facet-list/facet-list-bulk-actions.ts","../../src/lib/catalog/src/components/generate-product-variants/generate-product-variants.component.ts","../../src/lib/catalog/src/components/option-value-input/option-value-input.component.ts","../../src/lib/catalog/src/components/product-list/product-list-bulk-actions.ts","../../src/lib/catalog/src/components/update-product-option-dialog/update-product-option-dialog.component.ts","../../src/lib/catalog/src/components/product-variants-list/product-variants-list.component.ts","../../src/lib/catalog/src/components/product-variants-table/product-variants-table.component.ts","../../src/lib/catalog/src/components/variant-price-detail/variant-price-detail.component.ts","../../src/lib/catalog/src/catalog.module.ts","../../src/lib/catalog/src/public_api.ts","../../src/lib/catalog/src/vendure-admin-ui-catalog.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    Asset,\n    BaseDetailComponent,\n    CustomFieldConfig,\n    GetAsset,\n    LanguageCode,\n} from '@vendure/admin-ui/core';\nimport { DataService, NotificationService, ServerConfigService } from '@vendure/admin-ui/core';\n\n@Component({\n    selector: 'vdr-asset-detail',\n    templateUrl: './asset-detail.component.html',\n    styleUrls: ['./asset-detail.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AssetDetailComponent extends BaseDetailComponent<GetAsset.Asset> implements OnInit, OnDestroy {\n    detailForm = new FormGroup({});\n    customFields: CustomFieldConfig[];\n\n    constructor(\n        router: Router,\n        route: ActivatedRoute,\n        serverConfigService: ServerConfigService,\n        private notificationService: NotificationService,\n        protected dataService: DataService,\n        private formBuilder: FormBuilder,\n    ) {\n        super(route, router, serverConfigService, dataService);\n        this.customFields = this.getCustomFieldConfig('Asset');\n    }\n\n    ngOnInit() {\n        this.detailForm = new FormGroup({\n            name: new FormControl(''),\n            tags: new FormControl([]),\n            customFields: this.formBuilder.group(\n                this.customFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}),\n            ),\n        });\n        this.init();\n    }\n\n    ngOnDestroy() {\n        this.destroy();\n    }\n\n    onAssetChange(event: { id: string; name: string; tags: string[] }) {\n        this.detailForm.get('name')?.setValue(event.name);\n        this.detailForm.get('tags')?.setValue(event.tags);\n        this.detailForm.markAsDirty();\n    }\n\n    save() {\n        this.dataService.product\n            .updateAsset({\n                id: this.id,\n                name: this.detailForm.value.name,\n                tags: this.detailForm.value.tags,\n                customFields: this.detailForm.value.customFields,\n            })\n            .subscribe(\n                () => {\n                    this.notificationService.success(_('common.notify-update-success'), { entity: 'Asset' });\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-update-error'), {\n                        entity: 'Asset',\n                    });\n                },\n            );\n    }\n\n    protected setFormValues(entity: GetAsset.Asset, languageCode: LanguageCode): void {\n        this.detailForm.get('name')?.setValue(entity.name);\n        this.detailForm.get('tags')?.setValue(entity.tags);\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['customFields']), entity);\n        }\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    Asset,\n    BaseListComponent,\n    DataService,\n    DeletionResult,\n    GetAssetList,\n    LogicalOperator,\n    ModalService,\n    NotificationService,\n    SortOrder,\n    TagFragment,\n} from '@vendure/admin-ui/core';\nimport { PaginationInstance } from 'ngx-pagination';\nimport { BehaviorSubject, combineLatest, EMPTY, Observable } from 'rxjs';\nimport { debounceTime, finalize, map, switchMap, takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'vdr-asset-list',\n    templateUrl: './asset-list.component.html',\n    styleUrls: ['./asset-list.component.scss'],\n})\nexport class AssetListComponent\n    extends BaseListComponent<GetAssetList.Query, GetAssetList.Items, GetAssetList.Variables>\n    implements OnInit {\n    searchTerm$ = new BehaviorSubject<string | undefined>(undefined);\n    filterByTags$ = new BehaviorSubject<TagFragment[] | undefined>(undefined);\n    uploading = false;\n    allTags$: Observable<TagFragment[]>;\n    paginationConfig$: Observable<PaginationInstance>;\n\n    constructor(\n        private notificationService: NotificationService,\n        private modalService: ModalService,\n        private dataService: DataService,\n        router: Router,\n        route: ActivatedRoute,\n    ) {\n        super(router, route);\n        super.setQueryFn(\n            (...args: any[]) => this.dataService.product.getAssetList(...args),\n            data => data.assets,\n            (skip, take) => {\n                const searchTerm = this.searchTerm$.value;\n                const tags = this.filterByTags$.value?.map(t => t.value);\n                return {\n                    options: {\n                        skip,\n                        take,\n                        ...(searchTerm\n                            ? {\n                                  filter: {\n                                      name: { contains: searchTerm },\n                                  },\n                              }\n                            : {}),\n                        sort: {\n                            createdAt: SortOrder.DESC,\n                        },\n                        tags,\n                        tagsOperator: LogicalOperator.AND,\n                    },\n                };\n            },\n            { take: 25, skip: 0 },\n        );\n    }\n\n    ngOnInit() {\n        super.ngOnInit();\n        this.paginationConfig$ = combineLatest(this.itemsPerPage$, this.currentPage$, this.totalItems$).pipe(\n            map(([itemsPerPage, currentPage, totalItems]) => ({ itemsPerPage, currentPage, totalItems })),\n        );\n        this.searchTerm$.pipe(debounceTime(250), takeUntil(this.destroy$)).subscribe(() => this.refresh());\n\n        this.filterByTags$.pipe(takeUntil(this.destroy$)).subscribe(() => this.refresh());\n        this.allTags$ = this.dataService.product.getTagList().mapStream(data => data.tags.items);\n    }\n\n    filesSelected(files: File[]) {\n        if (files.length) {\n            this.uploading = true;\n            this.dataService.product\n                .createAssets(files)\n                .pipe(finalize(() => (this.uploading = false)))\n                .subscribe(({ createAssets }) => {\n                    let successCount = 0;\n                    for (const result of createAssets) {\n                        switch (result.__typename) {\n                            case 'Asset':\n                                successCount++;\n                                break;\n                            case 'MimeTypeError':\n                                this.notificationService.error(result.message);\n                                break;\n                        }\n                    }\n                    if (0 < successCount) {\n                        super.refresh();\n                        this.notificationService.success(_('asset.notify-create-assets-success'), {\n                            count: successCount,\n                        });\n                    }\n                });\n        }\n    }\n\n    deleteAssets(assets: Asset[]) {\n        this.showModalAndDelete(assets.map(a => a.id))\n            .pipe(\n                switchMap(response => {\n                    if (response.result === DeletionResult.DELETED) {\n                        return [true];\n                    } else {\n                        return this.showModalAndDelete(\n                            assets.map(a => a.id),\n                            response.message || '',\n                        ).pipe(map(r => r.result === DeletionResult.DELETED));\n                    }\n                }),\n            )\n            .subscribe(\n                () => {\n                    this.notificationService.success(_('common.notify-delete-success'), {\n                        entity: 'Assets',\n                    });\n                    this.refresh();\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-delete-error'), {\n                        entity: 'Assets',\n                    });\n                },\n            );\n    }\n\n    private showModalAndDelete(assetIds: string[], message?: string) {\n        return this.modalService\n            .dialog({\n                title: _('catalog.confirm-delete-assets'),\n                translationVars: {\n                    count: assetIds.length,\n                },\n                body: message,\n                buttons: [\n                    { type: 'secondary', label: _('common.cancel') },\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\n                ],\n            })\n            .pipe(\n                switchMap(res => (res ? this.dataService.product.deleteAssets(assetIds, !!message) : EMPTY)),\n                map(res => res.deleteAssets),\n            );\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    Asset,\n    BaseDetailComponent,\n    Collection,\n    ConfigurableOperation,\n    ConfigurableOperationDefinition,\n    ConfigurableOperationInput,\n    CreateCollectionInput,\n    createUpdatedTranslatable,\n    CustomFieldConfig,\n    DataService,\n    encodeConfigArgValue,\n    findTranslation,\n    getConfigArgValue,\n    LanguageCode,\n    LocalStorageService,\n    ModalService,\n    NotificationService,\n    Permission,\n    ServerConfigService,\n    unicodePatternValidator,\n    UpdateCollectionInput,\n} from '@vendure/admin-ui/core';\nimport { normalizeString } from '@vendure/common/lib/normalize-string';\nimport { combineLatest, merge, Observable, of, Subject } from 'rxjs';\nimport { debounceTime, filter, map, mergeMap, switchMap, take } from 'rxjs/operators';\n\nimport { CollectionContentsComponent } from '../collection-contents/collection-contents.component';\n\n@Component({\n    selector: 'vdr-collection-detail',\n    templateUrl: './collection-detail.component.html',\n    styleUrls: ['./collection-detail.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CollectionDetailComponent\n    extends BaseDetailComponent<Collection.Fragment>\n    implements OnInit, OnDestroy\n{\n    customFields: CustomFieldConfig[];\n    detailForm: FormGroup;\n    assetChanges: { assets?: Asset[]; featuredAsset?: Asset } = {};\n    filters: ConfigurableOperation[] = [];\n    allFilters: ConfigurableOperationDefinition[] = [];\n    updatedFilters$: Observable<ConfigurableOperationInput[]>;\n    livePreview = false;\n    parentId$: Observable<string | undefined>;\n    readonly updatePermission = [Permission.UpdateCatalog, Permission.UpdateCollection];\n    private filterRemoved$ = new Subject<void>();\n    @ViewChild('collectionContents') contentsComponent: CollectionContentsComponent;\n\n    constructor(\n        router: Router,\n        route: ActivatedRoute,\n        serverConfigService: ServerConfigService,\n        private changeDetector: ChangeDetectorRef,\n        protected dataService: DataService,\n        private formBuilder: FormBuilder,\n        private notificationService: NotificationService,\n        private modalService: ModalService,\n        private localStorageService: LocalStorageService,\n    ) {\n        super(route, router, serverConfigService, dataService);\n        this.customFields = this.getCustomFieldConfig('Collection');\n        this.detailForm = this.formBuilder.group({\n            name: ['', Validators.required],\n            slug: ['', unicodePatternValidator(/^[\\p{Letter}0-9_-]+$/)],\n            description: '',\n            visible: false,\n            filters: this.formBuilder.array([]),\n            customFields: this.formBuilder.group(\n                this.customFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}),\n            ),\n        });\n        this.livePreview = this.localStorageService.get('livePreviewCollectionContents') ?? false;\n    }\n\n    ngOnInit() {\n        this.init();\n        this.dataService.collection.getCollectionFilters().single$.subscribe(res => {\n            this.allFilters = res.collectionFilters;\n        });\n        const filtersFormArray = this.detailForm.get('filters') as FormArray;\n        this.updatedFilters$ = merge(filtersFormArray.statusChanges, this.filterRemoved$).pipe(\n            debounceTime(200),\n            filter(() => filtersFormArray.touched),\n            map(() =>\n                this.mapOperationsToInputs(this.filters, filtersFormArray.value).filter(_filter => {\n                    // ensure all the arguments have valid values. E.g. a newly-added\n                    // filter will not yet have valid values\n                    for (const arg of _filter.arguments) {\n                        if (arg.value === '') {\n                            return false;\n                        }\n                    }\n                    return true;\n                }),\n            ),\n        );\n        this.parentId$ = this.route.paramMap.pipe(\n            map(pm => pm.get('parentId') || undefined),\n            switchMap(parentId => {\n                if (parentId) {\n                    return of(parentId);\n                } else {\n                    return this.entity$.pipe(map(collection => collection.parent?.id));\n                }\n            }),\n        );\n    }\n\n    ngOnDestroy() {\n        this.destroy();\n    }\n\n    getFilterDefinition(_filter: ConfigurableOperation): ConfigurableOperationDefinition | undefined {\n        return this.allFilters.find(f => f.code === _filter.code);\n    }\n\n    assetsChanged(): boolean {\n        return !!Object.values(this.assetChanges).length;\n    }\n\n    /**\n     * If creating a new Collection, automatically generate the slug based on the collection name.\n     */\n    updateSlug(nameValue: string) {\n        combineLatest(this.entity$, this.languageCode$)\n            .pipe(take(1))\n            .subscribe(([entity, languageCode]) => {\n                const slugControl = this.detailForm.get(['slug']);\n                const currentTranslation = findTranslation(entity, languageCode);\n                const currentSlugIsEmpty = !currentTranslation || !currentTranslation.slug;\n                if (slugControl && slugControl.pristine && currentSlugIsEmpty) {\n                    slugControl.setValue(normalizeString(`${nameValue}`, '-'));\n                }\n            });\n    }\n\n    addFilter(collectionFilter: ConfigurableOperation) {\n        const filtersArray = this.detailForm.get('filters') as FormArray;\n        const argsHash = collectionFilter.args.reduce(\n            (output, arg) => ({\n                ...output,\n                [arg.name]: getConfigArgValue(arg.value),\n            }),\n            {},\n        );\n        filtersArray.push(\n            this.formBuilder.control({\n                code: collectionFilter.code,\n                args: argsHash,\n            }),\n        );\n        this.filters.push({\n            code: collectionFilter.code,\n            args: collectionFilter.args.map(a => ({ name: a.name, value: getConfigArgValue(a.value) })),\n        });\n    }\n\n    removeFilter(index: number) {\n        const filtersArray = this.detailForm.get('filters') as FormArray;\n        if (index !== -1) {\n            filtersArray.removeAt(index);\n            filtersArray.markAsDirty();\n            filtersArray.markAsTouched();\n            this.filters.splice(index, 1);\n            this.filterRemoved$.next();\n        }\n    }\n\n    create() {\n        if (!this.detailForm.dirty) {\n            return;\n        }\n        combineLatest(this.entity$, this.languageCode$)\n            .pipe(\n                take(1),\n                mergeMap(([category, languageCode]) => {\n                    const input = this.getUpdatedCollection(\n                        category,\n                        this.detailForm,\n                        languageCode,\n                    ) as CreateCollectionInput;\n                    const parentId = this.route.snapshot.paramMap.get('parentId');\n                    if (parentId) {\n                        input.parentId = parentId;\n                    }\n                    return this.dataService.collection.createCollection(input);\n                }),\n            )\n            .subscribe(\n                data => {\n                    this.notificationService.success(_('common.notify-create-success'), {\n                        entity: 'Collection',\n                    });\n                    this.assetChanges = {};\n                    this.detailForm.markAsPristine();\n                    this.changeDetector.markForCheck();\n                    this.router.navigate(['../', data.createCollection.id], { relativeTo: this.route });\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-create-error'), {\n                        entity: 'Collection',\n                    });\n                },\n            );\n    }\n\n    save() {\n        combineLatest(this.entity$, this.languageCode$)\n            .pipe(\n                take(1),\n                mergeMap(([category, languageCode]) => {\n                    const input = this.getUpdatedCollection(\n                        category,\n                        this.detailForm,\n                        languageCode,\n                    ) as UpdateCollectionInput;\n                    return this.dataService.collection.updateCollection(input);\n                }),\n            )\n            .subscribe(\n                () => {\n                    this.assetChanges = {};\n                    this.detailForm.markAsPristine();\n                    this.changeDetector.markForCheck();\n                    this.notificationService.success(_('common.notify-update-success'), {\n                        entity: 'Collection',\n                    });\n                    this.contentsComponent.refresh();\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-update-error'), {\n                        entity: 'Collection',\n                    });\n                },\n            );\n    }\n\n    canDeactivate(): boolean {\n        return super.canDeactivate() && !this.assetChanges.assets && !this.assetChanges.featuredAsset;\n    }\n\n    toggleLivePreview() {\n        this.livePreview = !this.livePreview;\n        this.localStorageService.set('livePreviewCollectionContents', this.livePreview);\n    }\n\n    trackByFn(index: number, item: ConfigurableOperation) {\n        return JSON.stringify(item);\n    }\n\n    /**\n     * Sets the values of the form on changes to the category or current language.\n     */\n    protected setFormValues(entity: Collection.Fragment, languageCode: LanguageCode) {\n        const currentTranslation = findTranslation(entity, languageCode);\n\n        this.detailForm.patchValue({\n            name: currentTranslation ? currentTranslation.name : '',\n            slug: currentTranslation ? currentTranslation.slug : '',\n            description: currentTranslation ? currentTranslation.description : '',\n            visible: !entity.isPrivate,\n        });\n\n        const formArray = this.detailForm.get('filters') as FormArray;\n        if (formArray.length !== entity.filters.length) {\n            formArray.clear();\n            this.filters = [];\n            entity.filters.forEach(f => this.addFilter(f));\n        }\n\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(\n                this.customFields,\n                this.detailForm.get(['customFields']),\n                entity,\n                currentTranslation,\n            );\n        }\n    }\n\n    /**\n     * Given a category and the value of the form, this method creates an updated copy of the category which\n     * can then be persisted to the API.\n     */\n    private getUpdatedCollection(\n        category: Collection.Fragment,\n        form: FormGroup,\n        languageCode: LanguageCode,\n    ): CreateCollectionInput | UpdateCollectionInput {\n        const updatedCategory = createUpdatedTranslatable({\n            translatable: category,\n            updatedFields: form.value,\n            customFieldConfig: this.customFields,\n            languageCode,\n            defaultTranslation: {\n                languageCode,\n                name: category.name || '',\n                slug: category.slug || '',\n                description: category.description || '',\n            },\n        });\n        return {\n            ...updatedCategory,\n            assetIds: this.assetChanges.assets?.map(a => a.id),\n            featuredAssetId: this.assetChanges.featuredAsset?.id,\n            isPrivate: !form.value.visible,\n            filters: this.mapOperationsToInputs(this.filters, this.detailForm.value.filters),\n        };\n    }\n\n    /**\n     * Maps an array of conditions or actions to the input format expected by the GraphQL API.\n     */\n    private mapOperationsToInputs(\n        operations: ConfigurableOperation[],\n        formValueOperations: any,\n    ): ConfigurableOperationInput[] {\n        return operations.map((o, i) => {\n            return {\n                code: o.code,\n                arguments: Object.entries(formValueOperations[i].args).map(([name, value], j) => {\n                    return {\n                        name,\n                        value: encodeConfigArgValue(value),\n                    };\n                }),\n            };\n        });\n    }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    DataService,\n    GetCollectionList,\n    LanguageCode,\n    ModalService,\n    NotificationService,\n    QueryResult,\n    SelectionManager,\n    ServerConfigService,\n} from '@vendure/admin-ui/core';\nimport { combineLatest, EMPTY, Observable, Subject } from 'rxjs';\nimport {\n    debounceTime,\n    distinctUntilChanged,\n    map,\n    shareReplay,\n    switchMap,\n    take,\n    takeUntil,\n    tap,\n} from 'rxjs/operators';\n\nimport { CollectionPartial, RearrangeEvent } from '../collection-tree/collection-tree.component';\n\n@Component({\n    selector: 'vdr-collection-list',\n    templateUrl: './collection-list.component.html',\n    styleUrls: ['./collection-list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CollectionListComponent implements OnInit, OnDestroy {\n    filterTermControl = new FormControl('');\n    activeCollectionId$: Observable<string | null>;\n    activeCollectionTitle$: Observable<string>;\n    items$: Observable<GetCollectionList.Items[]>;\n    availableLanguages$: Observable<LanguageCode[]>;\n    contentLanguage$: Observable<LanguageCode>;\n    expandAll = false;\n    expandedIds: string[] = [];\n    selectionManager: SelectionManager<CollectionPartial>;\n    private queryResult: QueryResult<any>;\n    private destroy$ = new Subject<void>();\n\n    constructor(\n        private dataService: DataService,\n        private notificationService: NotificationService,\n        private modalService: ModalService,\n        private router: Router,\n        private route: ActivatedRoute,\n        private serverConfigService: ServerConfigService,\n        private changeDetectorRef: ChangeDetectorRef,\n    ) {\n        this.selectionManager = new SelectionManager({\n            additiveMode: true,\n            multiSelect: true,\n            itemsAreEqual: (a, b) => a.id === b.id,\n        });\n    }\n\n    ngOnInit() {\n        this.queryResult = this.dataService.collection.getCollections(1000, 0).refetchOnChannelChange();\n        this.items$ = this.queryResult\n            .mapStream(data => data.collections.items)\n            .pipe(\n                tap(items => this.selectionManager.setCurrentItems(items)),\n                shareReplay(1),\n            );\n        this.activeCollectionId$ = this.route.paramMap.pipe(\n            map(pm => pm.get('contents')),\n            distinctUntilChanged(),\n        );\n        this.expandedIds = this.route.snapshot.queryParamMap.get('expanded')?.split(',') ?? [];\n        this.expandAll = this.route.snapshot.queryParamMap.get('expanded') === 'all';\n\n        this.activeCollectionTitle$ = combineLatest(this.activeCollectionId$, this.items$).pipe(\n            map(([id, collections]) => {\n                if (id) {\n                    const match = collections.find(c => c.id === id);\n                    return match ? match.name : '';\n                }\n                return '';\n            }),\n        );\n        this.availableLanguages$ = this.serverConfigService.getAvailableLanguages();\n        this.contentLanguage$ = this.dataService.client\n            .uiState()\n            .mapStream(({ uiState }) => uiState.contentLanguage)\n            .pipe(tap(() => this.refresh()));\n\n        this.filterTermControl.valueChanges\n            .pipe(debounceTime(250), takeUntil(this.destroy$))\n            .subscribe(term => {\n                this.router.navigate(['./'], {\n                    queryParams: {\n                        q: term || undefined,\n                    },\n                    queryParamsHandling: 'merge',\n                    relativeTo: this.route,\n                });\n            });\n\n        this.route.queryParamMap\n            .pipe(\n                map(qpm => qpm.get('q')),\n                distinctUntilChanged(),\n                takeUntil(this.destroy$),\n            )\n            .subscribe(() => this.refresh());\n        this.filterTermControl.patchValue(this.route.snapshot.queryParamMap.get('q'));\n    }\n\n    ngOnDestroy() {\n        this.queryResult.completed$.next();\n        this.destroy$.next(undefined);\n        this.destroy$.complete();\n    }\n\n    toggleExpandAll() {\n        this.router.navigate(['./'], {\n            queryParams: {\n                expanded: this.expandAll ? 'all' : undefined,\n            },\n            queryParamsHandling: 'merge',\n            relativeTo: this.route,\n        });\n    }\n\n    onRearrange(event: RearrangeEvent) {\n        this.dataService.collection.moveCollection([event]).subscribe({\n            next: () => {\n                this.notificationService.success(_('common.notify-saved-changes'));\n                this.refresh();\n            },\n            error: err => {\n                this.notificationService.error(_('common.notify-save-changes-error'));\n            },\n        });\n    }\n\n    deleteCollection(id: string) {\n        this.items$\n            .pipe(\n                take(1),\n                map(items => -1 < items.findIndex(i => i.parent && i.parent.id === id)),\n                switchMap(hasChildren => {\n                    return this.modalService.dialog({\n                        title: _('catalog.confirm-delete-collection'),\n                        body: hasChildren\n                            ? _('catalog.confirm-delete-collection-and-children-body')\n                            : undefined,\n                        buttons: [\n                            { type: 'secondary', label: _('common.cancel') },\n                            { type: 'danger', label: _('common.delete'), returnValue: true },\n                        ],\n                    });\n                }),\n                switchMap(response => (response ? this.dataService.collection.deleteCollection(id) : EMPTY)),\n            )\n            .subscribe(\n                () => {\n                    this.notificationService.success(_('common.notify-delete-success'), {\n                        entity: 'Collection',\n                    });\n                    this.refresh();\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-delete-error'), {\n                        entity: 'Collection',\n                    });\n                },\n            );\n    }\n\n    closeContents() {\n        const params = { ...this.route.snapshot.params };\n        delete params.contents;\n        this.router.navigate(['./', params], { relativeTo: this.route, queryParamsHandling: 'preserve' });\n    }\n\n    setLanguage(code: LanguageCode) {\n        this.dataService.client.setContentLanguage(code).subscribe();\n    }\n\n    refresh() {\n        const filterTerm = this.route.snapshot.queryParamMap.get('q');\n        this.queryResult.ref.refetch({\n            options: {\n                skip: 0,\n                take: 1000,\n                ...(filterTerm\n                    ? {\n                          filter: {\n                              name: {\n                                  contains: filterTerm,\n                              },\n                          },\n                      }\n                    : {}),\n            },\n        });\n    }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    BaseDetailComponent,\n    CreateFacetInput,\n    CreateFacetValueInput,\n    createUpdatedTranslatable,\n    CustomFieldConfig,\n    DataService,\n    DeletionResult,\n    FacetWithValues,\n    findTranslation,\n    LanguageCode,\n    ModalService,\n    NotificationService,\n    Permission,\n    ServerConfigService,\n    UpdateFacetInput,\n    UpdateFacetValueInput,\n} from '@vendure/admin-ui/core';\nimport { normalizeString } from '@vendure/common/lib/normalize-string';\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\nimport { combineLatest, EMPTY, forkJoin, Observable } from 'rxjs';\nimport { map, mapTo, mergeMap, switchMap, take } from 'rxjs/operators';\n\n@Component({\n    selector: 'vdr-facet-detail',\n    templateUrl: './facet-detail.component.html',\n    styleUrls: ['./facet-detail.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FacetDetailComponent\n    extends BaseDetailComponent<FacetWithValues.Fragment>\n    implements OnInit, OnDestroy\n{\n    customFields: CustomFieldConfig[];\n    customValueFields: CustomFieldConfig[];\n    detailForm: FormGroup;\n    values: Array<FacetWithValues.Values | { name: string; code: string }>;\n    readonly updatePermission = [Permission.UpdateCatalog, Permission.UpdateFacet];\n\n    constructor(\n        router: Router,\n        route: ActivatedRoute,\n        serverConfigService: ServerConfigService,\n        private changeDetector: ChangeDetectorRef,\n        protected dataService: DataService,\n        private formBuilder: FormBuilder,\n        private notificationService: NotificationService,\n        private modalService: ModalService,\n    ) {\n        super(route, router, serverConfigService, dataService);\n        this.customFields = this.getCustomFieldConfig('Facet');\n        this.customValueFields = this.getCustomFieldConfig('FacetValue');\n        this.detailForm = this.formBuilder.group({\n            facet: this.formBuilder.group({\n                code: ['', Validators.required],\n                name: '',\n                visible: true,\n                customFields: this.formBuilder.group(\n                    this.customFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}),\n                ),\n            }),\n            values: this.formBuilder.array([]),\n        });\n    }\n\n    ngOnInit() {\n        this.init();\n    }\n\n    ngOnDestroy() {\n        this.destroy();\n    }\n\n    updateCode(currentCode: string, nameValue: string) {\n        if (!currentCode) {\n            const codeControl = this.detailForm.get(['facet', 'code']);\n            if (codeControl && codeControl.pristine) {\n                codeControl.setValue(normalizeString(nameValue, '-'));\n            }\n        }\n    }\n\n    updateValueCode(currentCode: string, nameValue: string, index: number) {\n        if (!currentCode) {\n            const codeControl = this.detailForm.get(['values', index, 'code']);\n            if (codeControl && codeControl.pristine) {\n                codeControl.setValue(normalizeString(nameValue, '-'));\n            }\n        }\n    }\n\n    customValueFieldIsSet(index: number, name: string): boolean {\n        return !!this.detailForm.get(['values', index, 'customFields', name]);\n    }\n\n    getValuesFormArray(): FormArray {\n        return this.detailForm.get('values') as FormArray;\n    }\n\n    addFacetValue() {\n        const valuesFormArray = this.detailForm.get('values') as FormArray | null;\n        if (valuesFormArray) {\n            const valueGroup = this.formBuilder.group({\n                id: '',\n                name: ['', Validators.required],\n                code: '',\n            });\n            const newValue: any = { name: '', code: '' };\n            if (this.customValueFields.length) {\n                const customValueFieldsGroup = new FormGroup({});\n                newValue.customFields = {};\n\n                for (const fieldDef of this.customValueFields) {\n                    const key = fieldDef.name;\n                    customValueFieldsGroup.addControl(key, new FormControl());\n                }\n\n                valueGroup.addControl('customFields', customValueFieldsGroup);\n            }\n            valuesFormArray.insert(valuesFormArray.length, valueGroup);\n            this.values.push(newValue);\n        }\n    }\n\n    create() {\n        const facetForm = this.detailForm.get('facet');\n        if (!facetForm || !facetForm.dirty) {\n            return;\n        }\n        combineLatest(this.entity$, this.languageCode$)\n            .pipe(\n                take(1),\n                mergeMap(([facet, languageCode]) => {\n                    const newFacet = this.getUpdatedFacet(\n                        facet,\n                        facetForm as FormGroup,\n                        languageCode,\n                    ) as CreateFacetInput;\n                    return this.dataService.facet.createFacet(newFacet);\n                }),\n                switchMap(data => this.dataService.facet.getAllFacets().single$.pipe(mapTo(data))),\n            )\n            .subscribe(\n                data => {\n                    this.notificationService.success(_('common.notify-create-success'), { entity: 'Facet' });\n                    this.detailForm.markAsPristine();\n                    this.changeDetector.markForCheck();\n                    this.router.navigate(['../', data.createFacet.id], { relativeTo: this.route });\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-create-error'), {\n                        entity: 'Facet',\n                    });\n                },\n            );\n    }\n\n    save() {\n        combineLatest(this.entity$, this.languageCode$)\n            .pipe(\n                take(1),\n                mergeMap(([facet, languageCode]) => {\n                    const facetGroup = this.detailForm.get('facet');\n                    const updateOperations: Array<Observable<any>> = [];\n\n                    if (facetGroup && facetGroup.dirty) {\n                        const newFacet = this.getUpdatedFacet(\n                            facet,\n                            facetGroup as FormGroup,\n                            languageCode,\n                        ) as UpdateFacetInput;\n                        if (newFacet) {\n                            updateOperations.push(this.dataService.facet.updateFacet(newFacet));\n                        }\n                    }\n                    const valuesArray = this.detailForm.get('values');\n                    if (valuesArray && valuesArray.dirty) {\n                        const createdValues = this.getCreatedFacetValues(\n                            facet,\n                            valuesArray as FormArray,\n                            languageCode,\n                        );\n                        if (createdValues.length) {\n                            updateOperations.push(\n                                this.dataService.facet\n                                    .createFacetValues(createdValues)\n                                    .pipe(switchMap(() => this.dataService.facet.getFacet(this.id).single$)),\n                            );\n                        }\n                        const updatedValues = this.getUpdatedFacetValues(\n                            facet,\n                            valuesArray as FormArray,\n                            languageCode,\n                        );\n                        if (updatedValues.length) {\n                            updateOperations.push(this.dataService.facet.updateFacetValues(updatedValues));\n                        }\n                    }\n\n                    return forkJoin(updateOperations);\n                }),\n                switchMap(() => this.dataService.facet.getAllFacets().single$),\n            )\n            .subscribe(\n                () => {\n                    this.detailForm.markAsPristine();\n                    this.changeDetector.markForCheck();\n                    this.notificationService.success(_('common.notify-update-success'), { entity: 'Facet' });\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-update-error'), {\n                        entity: 'Facet',\n                    });\n                },\n            );\n    }\n\n    deleteFacetValue(facetValueId: string | undefined, index: number) {\n        if (!facetValueId) {\n            // deleting a newly-added (not persisted) FacetValue\n            const valuesFormArray = this.detailForm.get('values') as FormArray | null;\n            if (valuesFormArray) {\n                valuesFormArray.removeAt(index);\n            }\n            this.values.splice(index, 1);\n            return;\n        }\n        this.showModalAndDelete(facetValueId)\n            .pipe(\n                switchMap(response => {\n                    if (response.result === DeletionResult.DELETED) {\n                        return [true];\n                    } else {\n                        return this.showModalAndDelete(facetValueId, response.message || '').pipe(\n                            map(r => r.result === DeletionResult.DELETED),\n                        );\n                    }\n                }),\n                switchMap(deleted => (deleted ? this.dataService.facet.getFacet(this.id).single$ : [])),\n            )\n            .subscribe(\n                () => {\n                    this.notificationService.success(_('common.notify-delete-success'), {\n                        entity: 'FacetValue',\n                    });\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-delete-error'), {\n                        entity: 'FacetValue',\n                    });\n                },\n            );\n    }\n\n    private showModalAndDelete(facetValueId: string, message?: string) {\n        return this.modalService\n            .dialog({\n                title: _('catalog.confirm-delete-facet-value'),\n                body: message,\n                buttons: [\n                    { type: 'secondary', label: _('common.cancel') },\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\n                ],\n            })\n            .pipe(\n                switchMap(result =>\n                    result ? this.dataService.facet.deleteFacetValues([facetValueId], !!message) : EMPTY,\n                ),\n                map(result => result.deleteFacetValues[0]),\n            );\n    }\n\n    /**\n     * Sets the values of the form on changes to the facet or current language.\n     */\n    protected setFormValues(facet: FacetWithValues.Fragment, languageCode: LanguageCode) {\n        const currentTranslation = findTranslation(facet, languageCode);\n\n        this.detailForm.patchValue({\n            facet: {\n                code: facet.code,\n                visible: !facet.isPrivate,\n                name: currentTranslation?.name ?? '',\n            },\n        });\n\n        if (this.customFields.length) {\n            const customFieldsGroup = this.detailForm.get(['facet', 'customFields']) as FormGroup;\n            this.setCustomFieldFormValues(\n                this.customFields,\n                this.detailForm.get(['facet', 'customFields']),\n                facet,\n                currentTranslation,\n            );\n        }\n\n        const currentValuesFormArray = this.detailForm.get('values') as FormArray;\n        this.values = [...facet.values];\n        facet.values.forEach((value, i) => {\n            const valueTranslation = findTranslation(value, languageCode);\n            const group = {\n                id: value.id,\n                code: value.code,\n                name: valueTranslation ? valueTranslation.name : '',\n            };\n            const valueControl = currentValuesFormArray.at(i);\n            if (valueControl) {\n                valueControl.get('id')?.setValue(group.id);\n                valueControl.get('code')?.setValue(group.code);\n                valueControl.get('name')?.setValue(group.name);\n            } else {\n                currentValuesFormArray.insert(i, this.formBuilder.group(group));\n            }\n            if (this.customValueFields.length) {\n                let customValueFieldsGroup = this.detailForm.get(['values', i, 'customFields']) as FormGroup;\n                if (!customValueFieldsGroup) {\n                    customValueFieldsGroup = new FormGroup({});\n                    (this.detailForm.get(['values', i]) as FormGroup).addControl(\n                        'customFields',\n                        customValueFieldsGroup,\n                    );\n                }\n\n                if (customValueFieldsGroup) {\n                    for (const fieldDef of this.customValueFields) {\n                        const key = fieldDef.name;\n                        const fieldValue =\n                            fieldDef.type === 'localeString'\n                                ? (valueTranslation as any | undefined)?.customFields?.[key]\n                                : (value as any).customFields[key];\n                        const control = customValueFieldsGroup.get(key);\n                        if (control) {\n                            control.setValue(fieldValue);\n                        } else {\n                            customValueFieldsGroup.addControl(key, new FormControl(fieldValue));\n                        }\n                    }\n                }\n            }\n        });\n    }\n\n    /**\n     * Given a facet and the value of the detailForm, this method creates an updated copy of the facet which\n     * can then be persisted to the API.\n     */\n    private getUpdatedFacet(\n        facet: FacetWithValues.Fragment,\n        facetFormGroup: FormGroup,\n        languageCode: LanguageCode,\n    ): CreateFacetInput | UpdateFacetInput {\n        const input = createUpdatedTranslatable({\n            translatable: facet,\n            updatedFields: facetFormGroup.value,\n            customFieldConfig: this.customFields,\n            languageCode,\n            defaultTranslation: {\n                languageCode,\n                name: facet.name || '',\n            },\n        });\n        input.isPrivate = !facetFormGroup.value.visible;\n        return input;\n    }\n\n    /**\n     * Given an array of facet values and the values from the detailForm, this method creates a new array\n     * which can be persisted to the API via a createFacetValues mutation.\n     */\n    private getCreatedFacetValues(\n        facet: FacetWithValues.Fragment,\n        valuesFormArray: FormArray,\n        languageCode: LanguageCode,\n    ): CreateFacetValueInput[] {\n        return valuesFormArray.controls\n            .filter(c => !c.value.id)\n            .map(c => c.value)\n            .map(value =>\n                createUpdatedTranslatable({\n                    translatable: { ...value, translations: [] as any },\n                    updatedFields: value,\n                    customFieldConfig: this.customValueFields,\n                    languageCode,\n                    defaultTranslation: {\n                        languageCode,\n                        name: '',\n                    },\n                }),\n            )\n            .map(input => ({\n                facetId: facet.id,\n                ...input,\n            }));\n    }\n\n    /**\n     * Given an array of facet values and the values from the detailForm, this method creates a new array\n     * which can be persisted to the API via an updateFacetValues mutation.\n     */\n    private getUpdatedFacetValues(\n        facet: FacetWithValues.Fragment,\n        valuesFormArray: FormArray,\n        languageCode: LanguageCode,\n    ): UpdateFacetValueInput[] {\n        const dirtyValues = facet.values.filter((v, i) => {\n            const formRow = valuesFormArray.get(i.toString());\n            return formRow && formRow.dirty && formRow.value.id;\n        });\n        const dirtyValueValues = valuesFormArray.controls\n            .filter(c => c.dirty && c.value.id)\n            .map(c => c.value);\n\n        if (dirtyValues.length !== dirtyValueValues.length) {\n            throw new Error(_(`error.facet-value-form-values-do-not-match`));\n        }\n        return dirtyValues\n            .map((value, i) => {\n                return createUpdatedTranslatable({\n                    translatable: value,\n                    updatedFields: dirtyValueValues[i],\n                    customFieldConfig: this.customValueFields,\n                    languageCode,\n                    defaultTranslation: {\n                        languageCode,\n                        name: '',\n                    },\n                });\n            })\n            .filter(notNullOrUndefined);\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    BaseListComponent,\n    DataService,\n    DeletionResult,\n    GetFacetList,\n    LanguageCode,\n    ModalService,\n    NotificationService,\n    SelectionManager,\n    ServerConfigService,\n} from '@vendure/admin-ui/core';\nimport { SortOrder } from '@vendure/common/lib/generated-shop-types';\nimport { EMPTY, Observable } from 'rxjs';\nimport { debounceTime, filter, map, switchMap, takeUntil, tap } from 'rxjs/operators';\n\n@Component({\n    selector: 'vdr-facet-list',\n    templateUrl: './facet-list.component.html',\n    styleUrls: ['./facet-list.component.scss'],\n})\nexport class FacetListComponent\n    extends BaseListComponent<GetFacetList.Query, GetFacetList.Items>\n    implements OnInit\n{\n    filterTermControl = new FormControl('');\n    availableLanguages$: Observable<LanguageCode[]>;\n    contentLanguage$: Observable<LanguageCode>;\n    readonly initialLimit = 3;\n    displayLimit: { [id: string]: number } = {};\n    selectionManager: SelectionManager<GetFacetList.Items>;\n\n    constructor(\n        private dataService: DataService,\n        private modalService: ModalService,\n        private notificationService: NotificationService,\n        private serverConfigService: ServerConfigService,\n        router: Router,\n        route: ActivatedRoute,\n    ) {\n        super(router, route);\n        super.setQueryFn(\n            (...args: any[]) => this.dataService.facet.getFacets(...args).refetchOnChannelChange(),\n            data => data.facets,\n            (skip, take) => ({\n                options: {\n                    skip,\n                    take,\n                    filter: {\n                        name: {\n                            contains: this.filterTermControl.value,\n                        },\n                    },\n                    sort: {\n                        createdAt: SortOrder.DESC,\n                    },\n                },\n            }),\n        );\n        this.selectionManager = new SelectionManager<GetFacetList.Items>({\n            multiSelect: true,\n            itemsAreEqual: (a, b) => a.id === b.id,\n            additiveMode: true,\n        });\n    }\n\n    ngOnInit() {\n        super.ngOnInit();\n        this.availableLanguages$ = this.serverConfigService.getAvailableLanguages();\n        this.contentLanguage$ = this.dataService.client\n            .uiState()\n            .mapStream(({ uiState }) => uiState.contentLanguage)\n            .pipe(tap(() => this.refresh()));\n        this.filterTermControl.valueChanges\n            .pipe(\n                filter(value => 2 <= value.length || value.length === 0),\n                debounceTime(250),\n                takeUntil(this.destroy$),\n            )\n            .subscribe(() => this.refresh());\n    }\n\n    toggleDisplayLimit(facet: GetFacetList.Items) {\n        if (this.displayLimit[facet.id] === facet.values.length) {\n            this.displayLimit[facet.id] = this.initialLimit;\n        } else {\n            this.displayLimit[facet.id] = facet.values.length;\n        }\n    }\n\n    deleteFacet(facetValueId: string) {\n        this.showModalAndDelete(facetValueId)\n            .pipe(\n                switchMap(response => {\n                    if (response.result === DeletionResult.DELETED) {\n                        return [true];\n                    } else {\n                        return this.showModalAndDelete(facetValueId, response.message || '').pipe(\n                            map(r => r.result === DeletionResult.DELETED),\n                        );\n                    }\n                }),\n                // Refresh the cached facets to reflect the changes\n                switchMap(() => this.dataService.facet.getAllFacets().single$),\n            )\n            .subscribe(\n                () => {\n                    this.notificationService.success(_('common.notify-delete-success'), {\n                        entity: 'FacetValue',\n                    });\n                    this.refresh();\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-delete-error'), {\n                        entity: 'FacetValue',\n                    });\n                },\n            );\n    }\n\n    setLanguage(code: LanguageCode) {\n        this.dataService.client.setContentLanguage(code).subscribe();\n    }\n\n    private showModalAndDelete(facetId: string, message?: string) {\n        return this.modalService\n            .dialog({\n                title: _('catalog.confirm-delete-facet'),\n                body: message,\n                buttons: [\n                    { type: 'secondary', label: _('common.cancel') },\n                    {\n                        type: 'danger',\n                        label: message ? _('common.force-delete') : _('common.delete'),\n                        returnValue: true,\n                    },\n                ],\n            })\n            .pipe(\n                switchMap(res => (res ? this.dataService.facet.deleteFacet(facetId, !!message) : EMPTY)),\n                map(res => res.deleteFacet),\n            );\n    }\n}\n","/**\n * @description\n * Like String.prototype.replace(), but replaces the last instance\n * rather than the first.\n */\nexport function replaceLast(target: string | undefined | null, search: string, replace: string): string {\n    if (!target) {\n        return '';\n    }\n    const lastIndex = target.lastIndexOf(search);\n    if (lastIndex === -1) {\n        return target;\n    }\n    const head = target.substr(0, lastIndex);\n    const tail = target.substr(lastIndex).replace(search, replace);\n    return head + tail;\n}\n","import { Injectable } from '@angular/core';\nimport {\n    CreateProductInput,\n    CreateProductVariantInput,\n    DataService,\n    DeletionResult,\n    FacetWithValues,\n    findTranslation,\n    GetProductWithVariants,\n    LanguageCode,\n    UpdateProductInput,\n    UpdateProductMutation,\n    UpdateProductOptionInput,\n    UpdateProductVariantInput,\n    UpdateProductVariantsMutation,\n} from '@vendure/admin-ui/core';\nimport { normalizeString } from '@vendure/common/lib/normalize-string';\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\nimport { forkJoin, Observable, of, throwError } from 'rxjs';\nimport { map, mergeMap, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { CreateProductVariantsConfig } from '../../components/generate-product-variants/generate-product-variants.component';\n\nimport { replaceLast } from './replace-last';\n\n/**\n * Handles the logic for making the API calls to perform CRUD operations on a Product and its related\n * entities. This logic was extracted out of the component because it became too large and hard to follow.\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class ProductDetailService {\n    constructor(private dataService: DataService) {}\n\n    getFacets(): Observable<FacetWithValues.Fragment[]> {\n        return this.dataService.facet.getAllFacets().mapSingle(data => data.facets.items);\n    }\n\n    getTaxCategories() {\n        return this.dataService.settings\n            .getTaxCategories()\n            .mapSingle(data => data.taxCategories)\n            .pipe(shareReplay(1));\n    }\n\n    createProductWithVariants(\n        input: CreateProductInput,\n        createVariantsConfig: CreateProductVariantsConfig,\n        languageCode: LanguageCode,\n    ) {\n        const createProduct$ = this.dataService.product.createProduct(input);\n        const nonEmptyOptionGroups = createVariantsConfig.groups.filter(g => 0 < g.values.length);\n        const createOptionGroups$ = this.createProductOptionGroups(nonEmptyOptionGroups, languageCode);\n\n        return forkJoin(createProduct$, createOptionGroups$).pipe(\n            mergeMap(([{ createProduct }, optionGroups]) => {\n                const addOptionsToProduct$ = optionGroups.length\n                    ? forkJoin(\n                          optionGroups.map(optionGroup => {\n                              return this.dataService.product.addOptionGroupToProduct({\n                                  productId: createProduct.id,\n                                  optionGroupId: optionGroup.id,\n                              });\n                          }),\n                      )\n                    : of([]);\n                return addOptionsToProduct$.pipe(\n                    map(() => {\n                        return { createProduct, optionGroups };\n                    }),\n                );\n            }),\n            mergeMap(({ createProduct, optionGroups }) => {\n                const variants = createVariantsConfig.variants.map(v => {\n                    const optionIds = optionGroups.length\n                        ? v.optionValues.map((optionName, index) => {\n                              const option = optionGroups[index].options.find(o => o.name === optionName);\n                              if (!option) {\n                                  throw new Error(\n                                      `Could not find a matching ProductOption \"${optionName}\" when creating variant`,\n                                  );\n                              }\n                              return option.id;\n                          })\n                        : [];\n                    return {\n                        ...v,\n                        optionIds,\n                    };\n                });\n                const options = optionGroups.map(og => og.options).reduce((flat, o) => [...flat, ...o], []);\n                return this.createProductVariants(createProduct, variants, options, languageCode);\n            }),\n        );\n    }\n\n    createProductOptionGroups(groups: Array<{ name: string; values: string[] }>, languageCode: LanguageCode) {\n        return groups.length\n            ? forkJoin(\n                  groups.map(c => {\n                      return this.dataService.product\n                          .createProductOptionGroups({\n                              code: normalizeString(c.name, '-'),\n                              translations: [{ languageCode, name: c.name }],\n                              options: c.values.map(v => ({\n                                  code: normalizeString(v, '-'),\n                                  translations: [{ languageCode, name: v }],\n                              })),\n                          })\n                          .pipe(map(data => data.createProductOptionGroup));\n                  }),\n              )\n            : of([]);\n    }\n\n    createProductVariants(\n        product: { name: string; id: string },\n        variantData: Array<{ price: number; sku: string; stock: number; optionIds: string[] }>,\n        options: Array<{ id: string; name: string }>,\n        languageCode: LanguageCode,\n    ) {\n        const variants: CreateProductVariantInput[] = variantData.map(v => {\n            const name = options.length\n                ? `${product.name} ${v.optionIds\n                      .map(id => options.find(o => o.id === id))\n                      .filter(notNullOrUndefined)\n                      .map(o => o.name)\n                      .join(' ')}`\n                : product.name;\n            return {\n                productId: product.id,\n                price: v.price,\n                sku: v.sku,\n                stockOnHand: v.stock,\n                translations: [\n                    {\n                        languageCode,\n                        name,\n                    },\n                ],\n                optionIds: v.optionIds,\n            };\n        });\n        return this.dataService.product.createProductVariants(variants).pipe(\n            map(({ createProductVariants }) => ({\n                createProductVariants,\n                productId: product.id,\n            })),\n        );\n    }\n\n    updateProduct(updateOptions: {\n        product: GetProductWithVariants.Product;\n        languageCode: LanguageCode;\n        autoUpdate: boolean;\n        productInput?: UpdateProductInput;\n        variantsInput?: UpdateProductVariantInput[];\n    }) {\n        const { product, languageCode, autoUpdate, productInput, variantsInput } = updateOptions;\n        const updateOperations: Array<Observable<UpdateProductMutation | UpdateProductVariantsMutation>> = [];\n        const updateVariantsInput = variantsInput || [];\n\n        const variants$ = autoUpdate\n            ? this.dataService.product\n                  .getProductVariants({}, product.id)\n                  .mapSingle(({ productVariants }) => productVariants.items)\n            : of([]);\n\n        return variants$.pipe(\n            mergeMap(variants => {\n                if (productInput) {\n                    updateOperations.push(this.dataService.product.updateProduct(productInput));\n                    const productOldName = findTranslation(product, languageCode)?.name ?? '';\n                    const productNewName = findTranslation(productInput, languageCode)?.name;\n                    if (productNewName && productOldName !== productNewName && autoUpdate) {\n                        for (const variant of variants) {\n                            const currentVariantName = findTranslation(variant, languageCode)?.name || '';\n                            let variantInput: UpdateProductVariantInput;\n                            const existingVariantInput = updateVariantsInput.find(i => i.id === variant.id);\n                            if (existingVariantInput) {\n                                variantInput = existingVariantInput;\n                            } else {\n                                variantInput = {\n                                    id: variant.id,\n                                    translations: [{ languageCode, name: currentVariantName }],\n                                };\n                                updateVariantsInput.push(variantInput);\n                            }\n                            const variantTranslation = findTranslation(variantInput, languageCode);\n                            if (variantTranslation) {\n                                if (variantTranslation.name) {\n                                    variantTranslation.name = replaceLast(\n                                        variantTranslation.name,\n                                        productOldName,\n                                        productNewName,\n                                    );\n                                } else {\n                                    // The variant translation was falsy, which occurs\n                                    // when defining the product name for a new translation\n                                    // language that had not yet been defined.\n                                    variantTranslation.name = [\n                                        productNewName,\n                                        ...variant.options.map(o => o.name),\n                                    ].join(' ');\n                                }\n                            }\n                        }\n                    }\n                }\n                if (updateVariantsInput.length) {\n                    updateOperations.push(\n                        this.dataService.product.updateProductVariants(updateVariantsInput),\n                    );\n                }\n                return forkJoin(updateOperations);\n            }),\n        );\n    }\n\n    updateProductOption(\n        input: UpdateProductOptionInput & { autoUpdate: boolean },\n        product: GetProductWithVariants.Product,\n        languageCode: LanguageCode,\n    ) {\n        const variants$ = input.autoUpdate\n            ? this.dataService.product\n                  .getProductVariants({}, product.id)\n                  .mapSingle(({ productVariants }) => productVariants.items)\n            : of([]);\n\n        return variants$.pipe(\n            mergeMap(variants => {\n                let updateProductVariantNames$: Observable<any> = of([]);\n                if (input.autoUpdate) {\n                    // Update any ProductVariants' names which include the option name\n                    let oldOptionName: string | undefined;\n                    const newOptionName = findTranslation(input, languageCode)?.name;\n                    if (!newOptionName) {\n                        updateProductVariantNames$ = of([]);\n                    }\n                    const variantsToUpdate: UpdateProductVariantInput[] = [];\n                    for (const variant of variants) {\n                        if (variant.options.map(o => o.id).includes(input.id)) {\n                            if (!oldOptionName) {\n                                oldOptionName = findTranslation(\n                                    variant.options.find(o => o.id === input.id),\n                                    languageCode,\n                                )?.name;\n                            }\n                            const variantName = findTranslation(variant, languageCode)?.name || '';\n                            if (oldOptionName && newOptionName && variantName.includes(oldOptionName)) {\n                                variantsToUpdate.push({\n                                    id: variant.id,\n                                    translations: [\n                                        {\n                                            languageCode,\n                                            name: replaceLast(variantName, oldOptionName, newOptionName),\n                                        },\n                                    ],\n                                });\n                            }\n                        }\n                    }\n                    if (variantsToUpdate.length) {\n                        updateProductVariantNames$ =\n                            this.dataService.product.updateProductVariants(variantsToUpdate);\n                    }\n                }\n                return this.dataService.product\n                    .updateProductOption(input)\n                    .pipe(mergeMap(() => updateProductVariantNames$));\n            }),\n        );\n    }\n\n    deleteProductVariant(id: string, productId: string) {\n        return this.dataService.product.deleteProductVariant(id).pipe(\n            switchMap(result => {\n                if (result.deleteProductVariant.result === DeletionResult.DELETED) {\n                    return this.dataService.product.getProduct(productId).single$;\n                } else {\n                    return throwError(result.deleteProductVariant.message);\n                }\n            }),\n        );\n    }\n}\n","import {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ViewChild,\n} from '@angular/core';\nimport { Dialog, FacetValue, FacetValueSelectorComponent, FacetWithValues } from '@vendure/admin-ui/core';\n\n@Component({\n    selector: 'vdr-apply-facet-dialog',\n    templateUrl: './apply-facet-dialog.component.html',\n    styleUrls: ['./apply-facet-dialog.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ApplyFacetDialogComponent implements Dialog<FacetValue[]>, AfterViewInit {\n    @ViewChild(FacetValueSelectorComponent) private selector: FacetValueSelectorComponent;\n    resolveWith: (result?: FacetValue[]) => void;\n    selectedValues: FacetValue[] = [];\n    // Provided by caller\n    facets: FacetWithValues.Fragment[];\n\n    constructor(private changeDetector: ChangeDetectorRef) {}\n\n    ngAfterViewInit() {\n        setTimeout(() => this.selector.focus(), 0);\n    }\n\n    selectValues() {\n        this.resolveWith(this.selectedValues);\n    }\n\n    cancel() {\n        this.resolveWith();\n    }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport { GetChannels, ProductVariantFragment } from '@vendure/admin-ui/core';\nimport { NotificationService } from '@vendure/admin-ui/core';\nimport { DataService } from '@vendure/admin-ui/core';\nimport { Dialog } from '@vendure/admin-ui/core';\nimport { combineLatest, from, Observable } from 'rxjs';\nimport { map, startWith, switchMap } from 'rxjs/operators';\n\n@Component({\n    selector: 'vdr-assign-products-to-channel-dialog',\n    templateUrl: './assign-products-to-channel-dialog.component.html',\n    styleUrls: ['./assign-products-to-channel-dialog.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AssignProductsToChannelDialogComponent implements OnInit, Dialog<any> {\n    selectedChannel: GetChannels.Channels | null | undefined;\n    currentChannel: GetChannels.Channels;\n    availableChannels: GetChannels.Channels[];\n    resolveWith: (result?: any) => void;\n    variantsPreview$: Observable<Array<{ id: string; name: string; price: number; pricePreview: number }>>;\n    priceFactorControl = new FormControl(1);\n    selectedChannelIdControl = new FormControl();\n\n    // assigned by ModalService.fromComponent() call\n    productIds: string[];\n    productVariantIds: string[] | undefined;\n    currentChannelIds: string[];\n\n    get isProductVariantMode(): boolean {\n        return this.productVariantIds != null;\n    }\n\n    constructor(private dataService: DataService, private notificationService: NotificationService) {}\n\n    ngOnInit() {\n        const activeChannelId$ = this.dataService.client\n            .userStatus()\n            .mapSingle(({ userStatus }) => userStatus.activeChannelId);\n        const allChannels$ = this.dataService.settings.getChannels().mapSingle(data => data.channels);\n\n        combineLatest(activeChannelId$, allChannels$).subscribe(([activeChannelId, channels]) => {\n            // tslint:disable-next-line:no-non-null-assertion\n            this.currentChannel = channels.find(c => c.id === activeChannelId)!;\n            this.availableChannels = channels;\n        });\n\n        this.selectedChannelIdControl.valueChanges.subscribe(ids => {\n            this.selectChannel(ids);\n        });\n\n        this.variantsPreview$ = combineLatest(\n            from(this.getTopVariants(10)),\n            this.priceFactorControl.valueChanges.pipe(startWith(1)),\n        ).pipe(\n            map(([variants, factor]) => {\n                return variants.map(v => ({\n                    id: v.id,\n                    name: v.name,\n                    price: v.price,\n                    pricePreview: v.price * +factor,\n                }));\n            }),\n        );\n    }\n\n    selectChannel(channelIds: string[]) {\n        this.selectedChannel = this.availableChannels.find(c => c.id === channelIds[0]);\n    }\n\n    assign() {\n        const selectedChannel = this.selectedChannel;\n        if (selectedChannel) {\n            if (!this.isProductVariantMode) {\n                this.dataService.product\n                    .assignProductsToChannel({\n                        channelId: selectedChannel.id,\n                        productIds: this.productIds,\n                        priceFactor: +this.priceFactorControl.value,\n                    })\n                    .subscribe(() => {\n                        this.notificationService.success(_('catalog.assign-product-to-channel-success'), {\n                            channel: selectedChannel.code,\n                            count: this.productIds.length,\n                        });\n                        this.resolveWith(true);\n                    });\n            } else if (this.productVariantIds) {\n                this.dataService.product\n                    .assignVariantsToChannel({\n                        channelId: selectedChannel.id,\n                        productVariantIds: this.productVariantIds,\n                        priceFactor: +this.priceFactorControl.value,\n                    })\n                    .subscribe(() => {\n                        this.notificationService.success(_('catalog.assign-variant-to-channel-success'), {\n                            channel: selectedChannel.code,\n                            // tslint:disable-next-line:no-non-null-assertion\n                            count: this.productVariantIds!.length,\n                        });\n                        this.resolveWith(true);\n                    });\n            }\n        }\n    }\n\n    cancel() {\n        this.resolveWith();\n    }\n\n    private async getTopVariants(take: number): Promise<ProductVariantFragment[]> {\n        const variants: ProductVariantFragment[] = [];\n\n        for (let i = 0; i < this.productIds.length && variants.length < take; i++) {\n            const productVariants = await this.dataService.product\n                .getProduct(this.productIds[i], { take: this.isProductVariantMode ? undefined : take })\n                .mapSingle(({ product }) => {\n                    const _variants = product ? product.variantList.items : [];\n                    return _variants.filter(v =>\n                        this.isProductVariantMode ? this.productVariantIds?.includes(v.id) : true,\n                    );\n                })\n                .toPromise();\n            variants.push(...(productVariants || []));\n        }\n        return variants.slice(0, take);\n    }\n}\n","import { Location } from '@angular/common';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    Asset,\n    BaseDetailComponent,\n    CreateProductInput,\n    createUpdatedTranslatable,\n    CustomFieldConfig,\n    DataService,\n    FacetWithValues,\n    findTranslation,\n    flattenFacetValues,\n    getChannelCodeFromUserStatus,\n    GetProductWithVariants,\n    GlobalFlag,\n    LanguageCode,\n    LogicalOperator,\n    ModalService,\n    NotificationService,\n    Permission,\n    ProductDetail,\n    ProductVariant,\n    ServerConfigService,\n    TaxCategory,\n    unicodePatternValidator,\n    UpdateProductInput,\n    UpdateProductMutation,\n    UpdateProductOptionInput,\n    UpdateProductVariantInput,\n    UpdateProductVariantsMutation,\n} from '@vendure/admin-ui/core';\nimport { normalizeString } from '@vendure/common/lib/normalize-string';\nimport { DEFAULT_CHANNEL_CODE } from '@vendure/common/lib/shared-constants';\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\nimport { unique } from '@vendure/common/lib/unique';\nimport { BehaviorSubject, combineLatest, EMPTY, from, merge, Observable } from 'rxjs';\nimport {\n    debounceTime,\n    distinctUntilChanged,\n    map,\n    mergeMap,\n    shareReplay,\n    skip,\n    skipUntil,\n    startWith,\n    switchMap,\n    take,\n    takeUntil,\n    tap,\n    withLatestFrom,\n} from 'rxjs/operators';\n\nimport { ProductDetailService } from '../../providers/product-detail/product-detail.service';\nimport { ApplyFacetDialogComponent } from '../apply-facet-dialog/apply-facet-dialog.component';\nimport { AssignProductsToChannelDialogComponent } from '../assign-products-to-channel-dialog/assign-products-to-channel-dialog.component';\nimport { CreateProductVariantsConfig } from '../generate-product-variants/generate-product-variants.component';\nimport { VariantAssetChange } from '../product-variants-list/product-variants-list.component';\n\nexport type TabName = 'details' | 'variants';\n\nexport interface VariantFormValue {\n    id: string;\n    enabled: boolean;\n    sku: string;\n    name: string;\n    price: number;\n    priceWithTax: number;\n    taxCategoryId: string;\n    stockOnHand: number;\n    useGlobalOutOfStockThreshold: boolean;\n    outOfStockThreshold: number;\n    trackInventory: GlobalFlag;\n    facetValueIds: string[];\n    customFields?: any;\n}\n\nexport interface SelectedAssets {\n    assets?: Asset[];\n    featuredAsset?: Asset;\n}\n\nexport interface PaginationConfig {\n    totalItems: number;\n    currentPage: number;\n    itemsPerPage: number;\n}\n\n@Component({\n    selector: 'vdr-product-detail',\n    templateUrl: './product-detail.component.html',\n    styleUrls: ['./product-detail.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductDetailComponent\n    extends BaseDetailComponent<GetProductWithVariants.Product>\n    implements OnInit, OnDestroy\n{\n    activeTab$: Observable<TabName>;\n    product$: Observable<GetProductWithVariants.Product>;\n    variants$: Observable<ProductVariant.Fragment[]>;\n    taxCategories$: Observable<TaxCategory.Fragment[]>;\n    customFields: CustomFieldConfig[];\n    customVariantFields: CustomFieldConfig[];\n    customOptionGroupFields: CustomFieldConfig[];\n    customOptionFields: CustomFieldConfig[];\n    detailForm: FormGroup;\n    filterInput = new FormControl('');\n    assetChanges: SelectedAssets = {};\n    variantAssetChanges: { [variantId: string]: SelectedAssets } = {};\n    variantFacetValueChanges: { [variantId: string]: string[] } = {};\n    productChannels$: Observable<ProductDetail.Channels[]>;\n    facetValues$: Observable<ProductDetail.FacetValues[]>;\n    facets$: Observable<FacetWithValues.Fragment[]>;\n    totalItems$: Observable<number>;\n    currentPage$ = new BehaviorSubject(1);\n    itemsPerPage$ = new BehaviorSubject(10);\n    paginationConfig$: Observable<PaginationConfig>;\n    selectedVariantIds: string[] = [];\n    variantDisplayMode: 'card' | 'table' = 'card';\n    createVariantsConfig: CreateProductVariantsConfig = { groups: [], variants: [] };\n    channelPriceIncludesTax$: Observable<boolean>;\n    // Used to store all ProductVariants which have been loaded.\n    // It is needed when saving changes to variants.\n    private productVariantMap = new Map<string, ProductVariant.Fragment>();\n    public readonly updatePermissions = [Permission.UpdateCatalog, Permission.UpdateProduct];\n\n    constructor(\n        route: ActivatedRoute,\n        router: Router,\n        serverConfigService: ServerConfigService,\n        private productDetailService: ProductDetailService,\n        private formBuilder: FormBuilder,\n        private modalService: ModalService,\n        private notificationService: NotificationService,\n        protected dataService: DataService,\n        private location: Location,\n        private changeDetector: ChangeDetectorRef,\n    ) {\n        super(route, router, serverConfigService, dataService);\n        this.customFields = this.getCustomFieldConfig('Product');\n        this.customVariantFields = this.getCustomFieldConfig('ProductVariant');\n        this.customOptionGroupFields = this.getCustomFieldConfig('ProductOptionGroup');\n        this.customOptionFields = this.getCustomFieldConfig('ProductOption');\n        this.detailForm = this.formBuilder.group({\n            product: this.formBuilder.group({\n                enabled: true,\n                name: ['', Validators.required],\n                autoUpdateVariantNames: true,\n                slug: ['', unicodePatternValidator(/^[\\p{Letter}0-9_-]+$/)],\n                description: '',\n                facetValueIds: [[]],\n                customFields: this.formBuilder.group(\n                    this.customFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}),\n                ),\n            }),\n            variants: this.formBuilder.array([]),\n        });\n    }\n\n    ngOnInit() {\n        this.init();\n        this.product$ = this.entity$;\n        this.totalItems$ = this.product$.pipe(map(product => product.variantList.totalItems));\n        this.paginationConfig$ = combineLatest(this.totalItems$, this.itemsPerPage$, this.currentPage$).pipe(\n            map(([totalItems, itemsPerPage, currentPage]) => ({\n                totalItems,\n                itemsPerPage,\n                currentPage,\n            })),\n        );\n        const variants$ = this.product$.pipe(map(product => product.variantList.items));\n        const filterTerm$ = this.filterInput.valueChanges.pipe(\n            startWith(''),\n            debounceTime(200),\n            shareReplay(),\n        );\n        const initialVariants$ = this.product$.pipe(map(p => p.variantList.items));\n        const updatedVariants$ = combineLatest(filterTerm$, this.currentPage$, this.itemsPerPage$).pipe(\n            skipUntil(initialVariants$),\n            skip(1),\n            switchMap(([term, currentPage, itemsPerPage]) => {\n                return this.dataService.product\n                    .getProductVariants(\n                        {\n                            skip: (currentPage - 1) * itemsPerPage,\n                            take: itemsPerPage,\n                            ...(term\n                                ? { filter: { name: { contains: term }, sku: { contains: term } } }\n                                : {}),\n                            filterOperator: LogicalOperator.OR,\n                        },\n                        this.id,\n                    )\n                    .mapStream(({ productVariants }) => productVariants.items);\n            }),\n            shareReplay({ bufferSize: 1, refCount: true }),\n        );\n        this.variants$ = merge(initialVariants$, updatedVariants$).pipe(\n            tap(variants => {\n                for (const variant of variants) {\n                    this.productVariantMap.set(variant.id, variant);\n                }\n            }),\n        );\n        this.taxCategories$ = this.productDetailService.getTaxCategories().pipe(takeUntil(this.destroy$));\n        this.activeTab$ = this.route.paramMap.pipe(map(qpm => qpm.get('tab') as any));\n\n        combineLatest(updatedVariants$, this.languageCode$)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(([variants, languageCode]) => {\n                this.buildVariantFormArray(variants, languageCode);\n            });\n\n        // FacetValues are provided initially by the nested array of the\n        // Product entity, but once a fetch to get all Facets is made (as when\n        // opening the FacetValue selector modal), then these additional values\n        // are concatenated onto the initial array.\n        this.facets$ = this.productDetailService.getFacets();\n        const productFacetValues$ = this.product$.pipe(map(product => product.facetValues));\n        const allFacetValues$ = this.facets$.pipe(map(flattenFacetValues));\n        const productGroup = this.getProductFormGroup();\n\n        const formFacetValueIdChanges$ = productGroup.valueChanges.pipe(\n            map(val => val.facetValueIds as string[]),\n            distinctUntilChanged(),\n        );\n        const formChangeFacetValues$ = combineLatest(\n            formFacetValueIdChanges$,\n            productFacetValues$,\n            allFacetValues$,\n        ).pipe(\n            map(([ids, productFacetValues, allFacetValues]) => {\n                const combined = [...productFacetValues, ...allFacetValues];\n                return ids.map(id => combined.find(fv => fv.id === id)).filter(notNullOrUndefined);\n            }),\n        );\n\n        this.facetValues$ = merge(productFacetValues$, formChangeFacetValues$);\n        this.productChannels$ = this.product$.pipe(map(p => p.channels));\n        this.channelPriceIncludesTax$ = this.dataService.settings\n            .getActiveChannel('cache-first')\n            .refetchOnChannelChange()\n            .mapStream(data => data.activeChannel.pricesIncludeTax)\n            .pipe(shareReplay(1));\n    }\n\n    ngOnDestroy() {\n        this.destroy();\n    }\n\n    navigateToTab(tabName: TabName) {\n        this.location.replaceState(\n            this.router\n                .createUrlTree(['./', { ...this.route.snapshot.params, tab: tabName }], {\n                    queryParamsHandling: 'merge',\n                    relativeTo: this.route,\n                })\n                .toString(),\n        );\n    }\n\n    isDefaultChannel(channelCode: string): boolean {\n        return channelCode === DEFAULT_CHANNEL_CODE;\n    }\n\n    setPage(page: number) {\n        this.currentPage$.next(page);\n    }\n\n    setItemsPerPage(value: string) {\n        this.itemsPerPage$.next(+value);\n        this.currentPage$.next(1);\n    }\n\n    assignToChannel() {\n        this.productChannels$\n            .pipe(\n                take(1),\n                switchMap(channels => {\n                    return this.modalService.fromComponent(AssignProductsToChannelDialogComponent, {\n                        size: 'lg',\n                        locals: {\n                            productIds: [this.id],\n                            currentChannelIds: channels.map(c => c.id),\n                        },\n                    });\n                }),\n            )\n            .subscribe();\n    }\n\n    removeFromChannel(channelId: string) {\n        from(getChannelCodeFromUserStatus(this.dataService, channelId))\n            .pipe(\n                switchMap(({ channelCode }) => {\n                    return this.modalService.dialog({\n                        title: _('catalog.remove-product-from-channel'),\n                        buttons: [\n                            { type: 'secondary', label: _('common.cancel') },\n                            {\n                                type: 'danger',\n                                label: _('catalog.remove-from-channel'),\n                                translationVars: { channelCode },\n                                returnValue: true,\n                            },\n                        ],\n                    });\n                }),\n                switchMap(response =>\n                    response\n                        ? this.dataService.product.removeProductsFromChannel({\n                              channelId,\n                              productIds: [this.id],\n                          })\n                        : EMPTY,\n                ),\n            )\n            .subscribe(\n                () => {\n                    this.notificationService.success(_('catalog.notify-remove-product-from-channel-success'));\n                },\n                err => {\n                    this.notificationService.error(_('catalog.notify-remove-product-from-channel-error'));\n                },\n            );\n    }\n\n    assignVariantToChannel(variant: ProductVariant.Fragment) {\n        return this.modalService\n            .fromComponent(AssignProductsToChannelDialogComponent, {\n                size: 'lg',\n                locals: {\n                    productIds: [this.id],\n                    productVariantIds: [variant.id],\n                    currentChannelIds: variant.channels.map(c => c.id),\n                },\n            })\n            .subscribe();\n    }\n\n    removeVariantFromChannel({\n        channelId,\n        variant,\n    }: {\n        channelId: string;\n        variant: ProductVariant.Fragment;\n    }) {\n        from(getChannelCodeFromUserStatus(this.dataService, channelId))\n            .pipe(\n                switchMap(({ channelCode }) => {\n                    return this.modalService.dialog({\n                        title: _('catalog.remove-product-variant-from-channel'),\n                        buttons: [\n                            { type: 'secondary', label: _('common.cancel') },\n                            {\n                                type: 'danger',\n                                label: _('catalog.remove-from-channel'),\n                                translationVars: { channelCode },\n                                returnValue: true,\n                            },\n                        ],\n                    });\n                }),\n                switchMap(response =>\n                    response\n                        ? this.dataService.product.removeVariantsFromChannel({\n                              channelId,\n                              productVariantIds: [variant.id],\n                          })\n                        : EMPTY,\n                ),\n            )\n            .subscribe(\n                () => {\n                    this.notificationService.success(_('catalog.notify-remove-variant-from-channel-success'));\n                },\n                err => {\n                    this.notificationService.error(_('catalog.notify-remove-variant-from-channel-error'));\n                },\n            );\n    }\n\n    assetsChanged(): boolean {\n        return !!Object.values(this.assetChanges).length;\n    }\n\n    variantAssetsChanged(): boolean {\n        return !!Object.keys(this.variantAssetChanges).length;\n    }\n\n    variantAssetChange(event: VariantAssetChange) {\n        this.variantAssetChanges[event.variantId] = event;\n    }\n\n    /**\n     * If creating a new product, automatically generate the slug based on the product name.\n     */\n    updateSlug(nameValue: string) {\n        combineLatest(this.entity$, this.languageCode$)\n            .pipe(take(1))\n            .subscribe(([entity, languageCode]) => {\n                const slugControl = this.detailForm.get(['product', 'slug']);\n                const currentTranslation = findTranslation(entity, languageCode);\n                const currentSlugIsEmpty = !currentTranslation || !currentTranslation.slug;\n                if (slugControl && slugControl.pristine && currentSlugIsEmpty) {\n                    slugControl.setValue(normalizeString(`${nameValue}`, '-'));\n                }\n            });\n    }\n\n    selectProductFacetValue() {\n        this.displayFacetValueModal().subscribe(facetValueIds => {\n            if (facetValueIds) {\n                const productGroup = this.getProductFormGroup();\n                const currentFacetValueIds = productGroup.value.facetValueIds;\n                productGroup.patchValue({\n                    facetValueIds: unique([...currentFacetValueIds, ...facetValueIds]),\n                });\n                productGroup.markAsDirty();\n            }\n        });\n    }\n\n    updateProductOption(input: UpdateProductOptionInput & { autoUpdate: boolean }) {\n        combineLatest(this.product$, this.languageCode$)\n            .pipe(\n                take(1),\n                mergeMap(([product, languageCode]) =>\n                    this.productDetailService.updateProductOption(input, product, languageCode),\n                ),\n            )\n            .subscribe(\n                () => {\n                    this.notificationService.success(_('common.notify-update-success'), {\n                        entity: 'ProductOption',\n                    });\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-update-error'), {\n                        entity: 'ProductOption',\n                    });\n                },\n            );\n    }\n\n    removeProductFacetValue(facetValueId: string) {\n        const productGroup = this.getProductFormGroup();\n        const currentFacetValueIds = productGroup.value.facetValueIds;\n        productGroup.patchValue({\n            facetValueIds: currentFacetValueIds.filter(id => id !== facetValueId),\n        });\n        productGroup.markAsDirty();\n    }\n\n    /**\n     * Opens a dialog to select FacetValues to apply to the select ProductVariants.\n     */\n    selectVariantFacetValue(selectedVariantIds: string[]) {\n        this.displayFacetValueModal()\n            .pipe(withLatestFrom(this.variants$))\n            .subscribe(([facetValueIds, variants]) => {\n                if (facetValueIds) {\n                    for (const variantId of selectedVariantIds) {\n                        const index = variants.findIndex(v => v.id === variantId);\n                        const variant = variants[index];\n                        const existingFacetValueIds = variant ? variant.facetValues.map(fv => fv.id) : [];\n                        const variantFormGroup = (this.detailForm.get('variants') as FormArray).controls.find(\n                            c => c.value.id === variantId,\n                        );\n                        if (variantFormGroup) {\n                            const uniqueFacetValueIds = unique([...existingFacetValueIds, ...facetValueIds]);\n                            variantFormGroup.patchValue({\n                                facetValueIds: uniqueFacetValueIds,\n                            });\n                            variantFormGroup.markAsDirty();\n                            this.variantFacetValueChanges[variantId] = uniqueFacetValueIds;\n                        }\n                    }\n                    this.changeDetector.markForCheck();\n                }\n            });\n    }\n\n    variantsToCreateAreValid(): boolean {\n        return (\n            0 < this.createVariantsConfig.variants.length &&\n            this.createVariantsConfig.variants.every(v => {\n                return v.sku !== '';\n            })\n        );\n    }\n\n    private displayFacetValueModal(): Observable<string[] | undefined> {\n        return this.productDetailService.getFacets().pipe(\n            mergeMap(facets =>\n                this.modalService.fromComponent(ApplyFacetDialogComponent, {\n                    size: 'md',\n                    closable: true,\n                    locals: { facets },\n                }),\n            ),\n            map(facetValues => facetValues && facetValues.map(v => v.id)),\n        );\n    }\n\n    create() {\n        const productGroup = this.getProductFormGroup();\n        if (!productGroup.dirty) {\n            return;\n        }\n        combineLatest(this.product$, this.languageCode$)\n            .pipe(\n                take(1),\n                mergeMap(([product, languageCode]) => {\n                    const newProduct = this.getUpdatedProduct(\n                        product,\n                        productGroup as FormGroup,\n                        languageCode,\n                    ) as CreateProductInput;\n                    return this.productDetailService.createProductWithVariants(\n                        newProduct,\n                        this.createVariantsConfig,\n                        languageCode,\n                    );\n                }),\n            )\n            .subscribe(\n                ({ createProductVariants, productId }) => {\n                    this.notificationService.success(_('common.notify-create-success'), {\n                        entity: 'Product',\n                    });\n                    this.assetChanges = {};\n                    this.variantAssetChanges = {};\n                    this.detailForm.markAsPristine();\n                    this.router.navigate(['../', productId], { relativeTo: this.route });\n                },\n                err => {\n                    // tslint:disable-next-line:no-console\n                    console.error(err);\n                    this.notificationService.error(_('common.notify-create-error'), {\n                        entity: 'Product',\n                    });\n                },\n            );\n    }\n\n    save() {\n        combineLatest(this.product$, this.languageCode$, this.channelPriceIncludesTax$)\n            .pipe(\n                take(1),\n                mergeMap(([product, languageCode, priceIncludesTax]) => {\n                    const productGroup = this.getProductFormGroup();\n                    let productInput: UpdateProductInput | undefined;\n                    let variantsInput: UpdateProductVariantInput[] | undefined;\n\n                    if (productGroup.dirty || this.assetsChanged()) {\n                        productInput = this.getUpdatedProduct(\n                            product,\n                            productGroup as FormGroup,\n                            languageCode,\n                        ) as UpdateProductInput;\n                    }\n                    const variantsArray = this.detailForm.get('variants');\n                    if ((variantsArray && variantsArray.dirty) || this.variantAssetsChanged()) {\n                        variantsInput = this.getUpdatedProductVariants(\n                            product,\n                            variantsArray as FormArray,\n                            languageCode,\n                            priceIncludesTax,\n                        );\n                    }\n\n                    return this.productDetailService.updateProduct({\n                        product,\n                        languageCode,\n                        autoUpdate:\n                            this.detailForm.get(['product', 'autoUpdateVariantNames'])?.value ?? false,\n                        productInput,\n                        variantsInput,\n                    });\n                }),\n            )\n            .subscribe(\n                result => {\n                    this.updateSlugAfterSave(result);\n                    this.detailForm.markAsPristine();\n                    this.assetChanges = {};\n                    this.variantAssetChanges = {};\n                    this.notificationService.success(_('common.notify-update-success'), {\n                        entity: 'Product',\n                    });\n                    this.changeDetector.markForCheck();\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-update-error'), {\n                        entity: 'Product',\n                    });\n                },\n            );\n    }\n\n    canDeactivate(): boolean {\n        return super.canDeactivate() && !this.assetChanges.assets && !this.assetChanges.featuredAsset;\n    }\n\n    /**\n     * Sets the values of the form on changes to the product or current language.\n     */\n    protected setFormValues(product: GetProductWithVariants.Product, languageCode: LanguageCode) {\n        const currentTranslation = findTranslation(product, languageCode);\n        this.detailForm.patchValue({\n            product: {\n                enabled: product.enabled,\n                name: currentTranslation ? currentTranslation.name : '',\n                slug: currentTranslation ? currentTranslation.slug : '',\n                description: currentTranslation ? currentTranslation.description : '',\n                facetValueIds: product.facetValues.map(fv => fv.id),\n            },\n        });\n\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(\n                this.customFields,\n                this.detailForm.get(['product', 'customFields']),\n                product,\n                currentTranslation,\n            );\n        }\n        this.buildVariantFormArray(product.variantList.items, languageCode);\n    }\n\n    private buildVariantFormArray(variants: ProductVariant.Fragment[], languageCode: LanguageCode) {\n        const variantsFormArray = this.detailForm.get('variants') as FormArray;\n        variants.forEach((variant, i) => {\n            const variantTranslation = findTranslation(variant, languageCode);\n            const pendingFacetValueChanges = this.variantFacetValueChanges[variant.id];\n            const facetValueIds = pendingFacetValueChanges\n                ? pendingFacetValueChanges\n                : variant.facetValues.map(fv => fv.id);\n            const group: VariantFormValue = {\n                id: variant.id,\n                enabled: variant.enabled,\n                sku: variant.sku,\n                name: variantTranslation ? variantTranslation.name : '',\n                price: variant.price,\n                priceWithTax: variant.priceWithTax,\n                taxCategoryId: variant.taxCategory.id,\n                stockOnHand: variant.stockOnHand,\n                useGlobalOutOfStockThreshold: variant.useGlobalOutOfStockThreshold,\n                outOfStockThreshold: variant.outOfStockThreshold,\n                trackInventory: variant.trackInventory,\n                facetValueIds,\n            };\n\n            let variantFormGroup = variantsFormArray.controls.find(c => c.value.id === variant.id) as\n                | FormGroup\n                | undefined;\n            if (variantFormGroup) {\n                if (variantFormGroup.pristine) {\n                    variantFormGroup.patchValue(group);\n                }\n            } else {\n                variantFormGroup = this.formBuilder.group({\n                    ...group,\n                    facetValueIds: this.formBuilder.control(facetValueIds),\n                });\n                variantsFormArray.insert(i, variantFormGroup);\n            }\n            if (this.customVariantFields.length) {\n                let customFieldsGroup = variantFormGroup.get(['customFields']) as FormGroup | undefined;\n\n                if (!customFieldsGroup) {\n                    customFieldsGroup = this.formBuilder.group(\n                        this.customVariantFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}),\n                    );\n                    variantFormGroup.addControl('customFields', customFieldsGroup);\n                }\n                this.setCustomFieldFormValues(\n                    this.customVariantFields,\n                    customFieldsGroup,\n                    variant,\n                    variantTranslation,\n                );\n            }\n        });\n    }\n\n    /**\n     * Given a product and the value of the detailForm, this method creates an updated copy of the product which\n     * can then be persisted to the API.\n     */\n    private getUpdatedProduct(\n        product: GetProductWithVariants.Product,\n        productFormGroup: FormGroup,\n        languageCode: LanguageCode,\n    ): UpdateProductInput | CreateProductInput {\n        const updatedProduct = createUpdatedTranslatable({\n            translatable: product,\n            updatedFields: productFormGroup.value,\n            customFieldConfig: this.customFields,\n            languageCode,\n            defaultTranslation: {\n                languageCode,\n                name: product.name || '',\n                slug: product.slug || '',\n                description: product.description || '',\n            },\n        });\n        return {\n            ...updatedProduct,\n            assetIds: this.assetChanges.assets?.map(a => a.id),\n            featuredAssetId: this.assetChanges.featuredAsset?.id,\n            facetValueIds: productFormGroup.value.facetValueIds,\n        } as UpdateProductInput | CreateProductInput;\n    }\n\n    /**\n     * Given an array of product variants and the values from the detailForm, this method creates an new array\n     * which can be persisted to the API.\n     */\n    private getUpdatedProductVariants(\n        product: GetProductWithVariants.Product,\n        variantsFormArray: FormArray,\n        languageCode: LanguageCode,\n        priceIncludesTax: boolean,\n    ): UpdateProductVariantInput[] {\n        const dirtyFormControls = variantsFormArray.controls.filter(c => c.dirty);\n        const dirtyVariants = dirtyFormControls\n            .map(c => this.productVariantMap.get(c.value.id))\n            .filter(notNullOrUndefined);\n        const dirtyVariantValues = dirtyFormControls.map(c => c.value);\n\n        if (dirtyVariants.length !== dirtyVariantValues.length) {\n            throw new Error(_(`error.product-variant-form-values-do-not-match`));\n        }\n        return dirtyVariants\n            .map((variant, i) => {\n                const formValue: VariantFormValue = dirtyVariantValues.find(value => value.id === variant.id);\n                const result: UpdateProductVariantInput = createUpdatedTranslatable({\n                    translatable: variant,\n                    updatedFields: formValue,\n                    customFieldConfig: this.customVariantFields,\n                    languageCode,\n                    defaultTranslation: {\n                        languageCode,\n                        name: '',\n                    },\n                });\n                result.taxCategoryId = formValue.taxCategoryId;\n                result.facetValueIds = formValue.facetValueIds;\n                result.price = priceIncludesTax ? formValue.priceWithTax : formValue.price;\n                const assetChanges = this.variantAssetChanges[variant.id];\n                if (assetChanges) {\n                    result.featuredAssetId = assetChanges.featuredAsset?.id;\n                    result.assetIds = assetChanges.assets?.map(a => a.id);\n                }\n                return result;\n            })\n            .filter(notNullOrUndefined);\n    }\n\n    private getProductFormGroup(): FormGroup {\n        return this.detailForm.get('product') as FormGroup;\n    }\n\n    /**\n     * The server may alter the slug value in order to normalize and ensure uniqueness upon saving.\n     */\n    private updateSlugAfterSave(results: Array<UpdateProductMutation | UpdateProductVariantsMutation>) {\n        const firstResult = results[0];\n        const slugControl = this.detailForm.get(['product', 'slug']);\n\n        function isUpdateMutation(input: any): input is UpdateProductMutation {\n            return input.hasOwnProperty('updateProduct');\n        }\n\n        if (slugControl && isUpdateMutation(firstResult)) {\n            slugControl.setValue(firstResult.updateProduct.slug, { emitEvent: false });\n        }\n    }\n}\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    BaseListComponent,\n    DataService,\n    JobQueueService,\n    JobState,\n    LanguageCode,\n    LogicalOperator,\n    ModalService,\n    NotificationService,\n    ProductSearchInputComponent,\n    SearchInput,\n    SearchProducts,\n    SelectionManager,\n    ServerConfigService,\n} from '@vendure/admin-ui/core';\nimport { EMPTY, Observable } from 'rxjs';\nimport { delay, map, switchMap, take, takeUntil, tap, withLatestFrom } from 'rxjs/operators';\n\n@Component({\n    selector: 'vdr-products-list',\n    templateUrl: './product-list.component.html',\n    styleUrls: ['./product-list.component.scss'],\n})\nexport class ProductListComponent\n    extends BaseListComponent<SearchProducts.Query, SearchProducts.Items, SearchProducts.Variables>\n    implements OnInit, AfterViewInit\n{\n    searchTerm = '';\n    facetValueIds: string[] = [];\n    groupByProduct = true;\n    selectedFacetValueIds$: Observable<string[]>;\n    facetValues$: Observable<SearchProducts.FacetValues[]>;\n    availableLanguages$: Observable<LanguageCode[]>;\n    contentLanguage$: Observable<LanguageCode>;\n    pendingSearchIndexUpdates = 0;\n    selectionManager: SelectionManager<SearchProducts.Items>;\n\n    @ViewChild('productSearchInputComponent', { static: true })\n    private productSearchInput: ProductSearchInputComponent;\n\n    constructor(\n        private dataService: DataService,\n        private modalService: ModalService,\n        private notificationService: NotificationService,\n        private jobQueueService: JobQueueService,\n        private serverConfigService: ServerConfigService,\n        router: Router,\n        route: ActivatedRoute,\n    ) {\n        super(router, route);\n        this.route.queryParamMap\n            .pipe(\n                map(qpm => qpm.get('q')),\n                takeUntil(this.destroy$),\n            )\n            .subscribe(term => {\n                this.searchTerm = term || '';\n                if (this.productSearchInput) {\n                    this.productSearchInput.setSearchTerm(term);\n                }\n            });\n        this.selectedFacetValueIds$ = this.route.queryParamMap.pipe(map(qpm => qpm.getAll('fvids')));\n\n        this.selectedFacetValueIds$.pipe(takeUntil(this.destroy$)).subscribe(ids => {\n            this.facetValueIds = ids;\n            if (this.productSearchInput) {\n                this.productSearchInput.setFacetValues(ids);\n            }\n        });\n        super.setQueryFn(\n            (...args: any[]) =>\n                this.dataService.product.searchProducts(this.searchTerm, ...args).refetchOnChannelChange(),\n            data => data.search,\n            // tslint:disable-next-line:no-shadowed-variable\n            (skip, take) => ({\n                input: {\n                    skip,\n                    take,\n                    term: this.searchTerm,\n                    facetValueIds: this.facetValueIds,\n                    facetValueOperator: LogicalOperator.AND,\n                    groupByProduct: this.groupByProduct,\n                } as SearchInput,\n            }),\n        );\n        this.selectionManager = new SelectionManager<SearchProducts.Items>({\n            multiSelect: true,\n            itemsAreEqual: (a, b) =>\n                this.groupByProduct ? a.productId === b.productId : a.productVariantId === b.productVariantId,\n            additiveMode: true,\n        });\n    }\n\n    ngOnInit() {\n        super.ngOnInit();\n\n        this.facetValues$ = this.result$.pipe(map(data => data.search.facetValues));\n\n        this.facetValues$\n            .pipe(take(1), delay(100), withLatestFrom(this.selectedFacetValueIds$))\n            .subscribe(([__, ids]) => {\n                this.productSearchInput.setFacetValues(ids);\n            });\n        this.availableLanguages$ = this.serverConfigService.getAvailableLanguages();\n        this.contentLanguage$ = this.dataService.client\n            .uiState()\n            .mapStream(({ uiState }) => uiState.contentLanguage)\n            .pipe(tap(() => this.refresh()));\n\n        this.dataService.product\n            .getPendingSearchIndexUpdates()\n            .mapSingle(({ pendingSearchIndexUpdates }) => pendingSearchIndexUpdates)\n            .subscribe(value => (this.pendingSearchIndexUpdates = value));\n    }\n\n    ngAfterViewInit() {\n        if (this.productSearchInput && this.searchTerm) {\n            setTimeout(() => this.productSearchInput.setSearchTerm(this.searchTerm));\n        }\n    }\n\n    setSearchTerm(term: string) {\n        this.searchTerm = term;\n        this.setQueryParam({ q: term || null, page: 1 });\n        this.refresh();\n    }\n\n    setFacetValueIds(ids: string[]) {\n        this.facetValueIds = ids;\n        this.setQueryParam({ fvids: ids, page: 1 });\n        this.refresh();\n    }\n\n    rebuildSearchIndex() {\n        this.dataService.product.reindex().subscribe(({ reindex }) => {\n            this.notificationService.info(_('catalog.reindexing'));\n            this.jobQueueService.addJob(reindex.id, job => {\n                if (job.state === JobState.COMPLETED) {\n                    const time = new Intl.NumberFormat().format(job.duration || 0);\n                    this.notificationService.success(_('catalog.reindex-successful'), {\n                        count: job.result.indexedItemCount,\n                        time,\n                    });\n                    this.refresh();\n                } else {\n                    this.notificationService.error(_('catalog.reindex-error'));\n                }\n            });\n        });\n    }\n\n    runPendingSearchIndexUpdates() {\n        this.dataService.product.runPendingSearchIndexUpdates().subscribe(value => {\n            this.notificationService.info(_('catalog.running-search-index-updates'), {\n                count: this.pendingSearchIndexUpdates,\n            });\n            this.pendingSearchIndexUpdates = 0;\n        });\n    }\n\n    deleteProduct(productId: string) {\n        this.modalService\n            .dialog({\n                title: _('catalog.confirm-delete-product'),\n                buttons: [\n                    { type: 'secondary', label: _('common.cancel') },\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\n                ],\n            })\n            .pipe(\n                switchMap(response => (response ? this.dataService.product.deleteProduct(productId) : EMPTY)),\n                // Short delay to allow the product to be removed from the search index before\n                // refreshing.\n                delay(500),\n            )\n            .subscribe(\n                () => {\n                    this.notificationService.success(_('common.notify-delete-success'), {\n                        entity: 'Product',\n                    });\n                    this.refresh();\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-delete-error'), {\n                        entity: 'Product',\n                    });\n                },\n            );\n    }\n\n    setLanguage(code: LanguageCode) {\n        this.dataService.client.setContentLanguage(code).subscribe();\n    }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    BaseDetailComponent,\n    CreateFacetInput,\n    createUpdatedTranslatable,\n    CustomFieldConfig,\n    DataService,\n    FacetWithValues,\n    findTranslation,\n    GetProductVariantOptions,\n    LanguageCode,\n    NotificationService,\n    Permission,\n    ProductOption,\n    ProductOptionGroup,\n    ServerConfigService,\n    UpdateFacetInput,\n    UpdateProductOptionGroupInput,\n    UpdateProductOptionInput,\n} from '@vendure/admin-ui/core';\nimport { combineLatest, forkJoin, Observable } from 'rxjs';\nimport { map, mergeMap, take } from 'rxjs/operators';\n\nimport { ProductDetailService } from '../../providers/product-detail/product-detail.service';\n\n@Component({\n    selector: 'vdr-product-options-editor',\n    templateUrl: './product-options-editor.component.html',\n    styleUrls: ['./product-options-editor.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductOptionsEditorComponent\n    extends BaseDetailComponent<GetProductVariantOptions.Product>\n    implements OnInit\n{\n    detailForm: FormGroup;\n    optionGroups$: Observable<GetProductVariantOptions.OptionGroups[]>;\n    languageCode$: Observable<LanguageCode>;\n    availableLanguages$: Observable<LanguageCode[]>;\n    optionGroupCustomFields: CustomFieldConfig[];\n    optionCustomFields: CustomFieldConfig[];\n    autoUpdateVariantNames = true;\n    readonly updatePermission = [Permission.UpdateCatalog, Permission.UpdateProduct];\n\n    constructor(\n        protected route: ActivatedRoute,\n        protected router: Router,\n        protected serverConfigService: ServerConfigService,\n        protected dataService: DataService,\n        private productDetailService: ProductDetailService,\n        private formBuilder: FormBuilder,\n        private changeDetector: ChangeDetectorRef,\n        private notificationService: NotificationService,\n    ) {\n        super(route, router, serverConfigService, dataService);\n        this.optionGroupCustomFields = this.getCustomFieldConfig('ProductOptionGroup');\n        this.optionCustomFields = this.getCustomFieldConfig('ProductOption');\n    }\n\n    ngOnInit(): void {\n        this.optionGroups$ = this.route.snapshot.data.entity.pipe(\n            map((product: GetProductVariantOptions.Product) => product.optionGroups),\n        );\n        this.detailForm = new FormGroup({\n            optionGroups: new FormArray([]),\n        });\n        super.init();\n    }\n\n    getOptionGroups(): FormGroup[] {\n        const optionGroups = this.detailForm.get('optionGroups');\n        return (optionGroups as FormArray).controls as FormGroup[];\n    }\n\n    getOptions(optionGroup: FormGroup): FormGroup[] {\n        const options = optionGroup.get('options');\n        return (options as FormArray).controls as FormGroup[];\n    }\n\n    save() {\n        if (this.detailForm.invalid || this.detailForm.pristine) {\n            return;\n        }\n        // tslint:disable-next-line:no-non-null-assertion\n        const $product = this.dataService.product.getProduct(this.id).mapSingle(data => data.product!);\n        combineLatest(this.entity$, this.languageCode$, $product)\n            .pipe(\n                take(1),\n                mergeMap(([{ optionGroups }, languageCode, product]) => {\n                    const updateOperations: Array<Observable<any>> = [];\n                    for (const optionGroupForm of this.getOptionGroups()) {\n                        if (optionGroupForm.get('name')?.dirty || optionGroupForm.get('code')?.dirty) {\n                            const optionGroupEntity = optionGroups.find(\n                                og => og.id === optionGroupForm.value.id,\n                            );\n                            if (optionGroupEntity) {\n                                const input = this.getUpdatedOptionGroup(\n                                    optionGroupEntity,\n                                    optionGroupForm,\n                                    languageCode,\n                                );\n                                updateOperations.push(\n                                    this.dataService.product.updateProductOptionGroup(input),\n                                );\n                            }\n                        }\n\n                        for (const optionForm of this.getOptions(optionGroupForm)) {\n                            if (optionForm.get('name')?.dirty || optionForm.get('code')?.dirty) {\n                                const optionGroup = optionGroups\n                                    .find(og => og.id === optionGroupForm.value.id)\n                                    ?.options.find(o => o.id === optionForm.value.id);\n                                if (optionGroup) {\n                                    const input = this.getUpdatedOption(\n                                        optionGroup,\n                                        optionForm,\n                                        languageCode,\n                                    );\n                                    updateOperations.push(\n                                        this.productDetailService.updateProductOption(\n                                            { ...input, autoUpdate: this.autoUpdateVariantNames },\n                                            product,\n                                            languageCode,\n                                        ),\n                                    );\n                                }\n                            }\n                        }\n                    }\n                    return forkJoin(updateOperations);\n                }),\n            )\n            .subscribe(\n                () => {\n                    this.detailForm.markAsPristine();\n                    this.changeDetector.markForCheck();\n                    this.notificationService.success(_('common.notify-update-success'), {\n                        entity: 'ProductOptionGroup',\n                    });\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-update-error'), {\n                        entity: 'ProductOptionGroup',\n                    });\n                },\n            );\n    }\n\n    private getUpdatedOptionGroup(\n        optionGroup: ProductOptionGroup.Fragment,\n        optionGroupFormGroup: FormGroup,\n        languageCode: LanguageCode,\n    ): UpdateProductOptionGroupInput {\n        const input = createUpdatedTranslatable({\n            translatable: optionGroup,\n            updatedFields: optionGroupFormGroup.value,\n            customFieldConfig: this.optionGroupCustomFields,\n            languageCode,\n            defaultTranslation: {\n                languageCode,\n                name: optionGroup.name || '',\n            },\n        });\n        return input;\n    }\n\n    private getUpdatedOption(\n        option: ProductOption.Fragment,\n        optionFormGroup: FormGroup,\n        languageCode: LanguageCode,\n    ): UpdateProductOptionInput {\n        const input = createUpdatedTranslatable({\n            translatable: option,\n            updatedFields: optionFormGroup.value,\n            customFieldConfig: this.optionGroupCustomFields,\n            languageCode,\n            defaultTranslation: {\n                languageCode,\n                name: option.name || '',\n            },\n        });\n        return input;\n    }\n\n    protected setFormValues(entity: GetProductVariantOptions.Product, languageCode: LanguageCode): void {\n        const groupsFormArray = new FormArray([]);\n        for (const optionGroup of entity.optionGroups) {\n            const groupTranslation = findTranslation(optionGroup, languageCode);\n            const group = {\n                id: optionGroup.id,\n                createdAt: optionGroup.createdAt,\n                updatedAt: optionGroup.updatedAt,\n                code: optionGroup.code,\n                name: groupTranslation ? groupTranslation.name : '',\n            };\n            const optionsFormArray = new FormArray([]);\n\n            for (const option of optionGroup.options) {\n                const optionTranslation = findTranslation(option, languageCode);\n                const optionControl = this.formBuilder.group({\n                    id: option.id,\n                    createdAt: option.createdAt,\n                    updatedAt: option.updatedAt,\n                    code: option.code,\n                    name: optionTranslation ? optionTranslation.name : '',\n                });\n                optionsFormArray.push(optionControl);\n            }\n\n            const groupControl = this.formBuilder.group(group);\n            groupControl.addControl('options', optionsFormArray);\n            groupsFormArray.push(groupControl);\n        }\n        this.detailForm.setControl('optionGroups', groupsFormArray);\n    }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Dialog, GetProductVariantOptions } from '@vendure/admin-ui/core';\n\n@Component({\n    selector: 'vdr-confirm-variant-deletion-dialog',\n    templateUrl: './confirm-variant-deletion-dialog.component.html',\n    styleUrls: ['./confirm-variant-deletion-dialog.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ConfirmVariantDeletionDialogComponent implements Dialog<boolean> {\n    resolveWith: (result?: boolean) => void;\n    variants: GetProductVariantOptions.Variants[] = [];\n\n    confirm() {\n        this.resolveWith(true);\n    }\n\n    cancel() {\n        this.resolveWith();\n    }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    CreateProductOptionGroup,\n    CreateProductOptionInput,\n    CurrencyCode,\n    DataService,\n    DeactivateAware,\n    DeletionResult,\n    getDefaultUiLanguage,\n    GetProductVariantOptions,\n    LanguageCode,\n    ModalService,\n    NotificationService,\n    ProductOptionGroupWithOptionsFragment,\n} from '@vendure/admin-ui/core';\nimport { normalizeString } from '@vendure/common/lib/normalize-string';\nimport { pick } from '@vendure/common/lib/pick';\nimport { generateAllCombinations, notNullOrUndefined } from '@vendure/common/lib/shared-utils';\nimport { unique } from '@vendure/common/lib/unique';\nimport { EMPTY, forkJoin, Observable, of } from 'rxjs';\nimport { defaultIfEmpty, filter, map, mergeMap, switchMap } from 'rxjs/operators';\n\nimport { ProductDetailService } from '../../providers/product-detail/product-detail.service';\nimport { ConfirmVariantDeletionDialogComponent } from '../confirm-variant-deletion-dialog/confirm-variant-deletion-dialog.component';\n\nexport class GeneratedVariant {\n    isDefault: boolean;\n    options: Array<{ name: string; id?: string }>;\n    productVariantId?: string;\n    enabled: boolean;\n    existing: boolean;\n    sku: string;\n    price: number;\n    stock: number;\n\n    constructor(config: Partial<GeneratedVariant>) {\n        for (const key of Object.keys(config)) {\n            this[key] = config[key];\n        }\n    }\n}\n\ninterface OptionGroupUiModel {\n    id?: string;\n    isNew: boolean;\n    name: string;\n    locked: boolean;\n    values: Array<{\n        id?: string;\n        name: string;\n        locked: boolean;\n    }>;\n}\n\n@Component({\n    selector: 'vdr-product-variants-editor',\n    templateUrl: './product-variants-editor.component.html',\n    styleUrls: ['./product-variants-editor.component.scss'],\n    changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class ProductVariantsEditorComponent implements OnInit, DeactivateAware {\n    formValueChanged = false;\n    optionsChanged = false;\n    generatedVariants: GeneratedVariant[] = [];\n    optionGroups: OptionGroupUiModel[];\n    product: GetProductVariantOptions.Product;\n    currencyCode: CurrencyCode;\n    private languageCode: LanguageCode;\n\n    constructor(\n        private route: ActivatedRoute,\n        private dataService: DataService,\n        private productDetailService: ProductDetailService,\n        private notificationService: NotificationService,\n        private modalService: ModalService,\n    ) {}\n\n    ngOnInit() {\n        this.initOptionsAndVariants();\n        this.languageCode =\n            (this.route.snapshot.paramMap.get('lang') as LanguageCode) || getDefaultUiLanguage();\n        this.dataService.settings.getActiveChannel().single$.subscribe(data => {\n            this.currencyCode = data.activeChannel.currencyCode;\n        });\n    }\n\n    onFormChanged(variantInfo: GeneratedVariant) {\n        this.formValueChanged = true;\n        variantInfo.enabled = true;\n    }\n\n    canDeactivate(): boolean {\n        return !this.formValueChanged;\n    }\n\n    getVariantsToAdd() {\n        return this.generatedVariants.filter(v => !v.existing && v.enabled);\n    }\n\n    getVariantName(variant: GeneratedVariant) {\n        return variant.options.length === 0\n            ? _('catalog.default-variant')\n            : variant.options.map(o => o.name).join(' ');\n    }\n\n    addOptionGroup() {\n        this.optionGroups.push({\n            isNew: true,\n            locked: false,\n            name: '',\n            values: [],\n        });\n        this.optionsChanged = true;\n    }\n\n    removeOptionGroup(optionGroup: OptionGroupUiModel) {\n        const id = optionGroup.id;\n        if (optionGroup.isNew) {\n            this.optionGroups = this.optionGroups.filter(og => og !== optionGroup);\n            this.generateVariants();\n            this.optionsChanged = true;\n        } else if (id) {\n            this.modalService\n                .dialog({\n                    title: _('catalog.confirm-delete-product-option-group'),\n                    translationVars: { name: optionGroup.name },\n                    buttons: [\n                        { type: 'secondary', label: _('common.cancel') },\n                        { type: 'danger', label: _('common.delete'), returnValue: true },\n                    ],\n                })\n                .pipe(\n                    switchMap(val => {\n                        if (val) {\n                            return this.dataService.product.removeOptionGroupFromProduct({\n                                optionGroupId: id,\n                                productId: this.product.id,\n                            });\n                        } else {\n                            return EMPTY;\n                        }\n                    }),\n                )\n                .subscribe(({ removeOptionGroupFromProduct }) => {\n                    if (removeOptionGroupFromProduct.__typename === 'Product') {\n                        this.notificationService.success(_('common.notify-delete-success'), {\n                            entity: 'ProductOptionGroup',\n                        });\n                        this.initOptionsAndVariants();\n                        this.optionsChanged = true;\n                    } else if (removeOptionGroupFromProduct.__typename === 'ProductOptionInUseError') {\n                        this.notificationService.error(removeOptionGroupFromProduct.message ?? '');\n                    }\n                });\n        }\n    }\n\n    addOption(index: number, optionName: string) {\n        const group = this.optionGroups[index];\n        if (group) {\n            group.values.push({ name: optionName, locked: false });\n            this.generateVariants();\n            this.optionsChanged = true;\n        }\n    }\n\n    removeOption(index: number, { id, name }: { id?: string; name: string }) {\n        const optionGroup = this.optionGroups[index];\n        if (optionGroup) {\n            if (!id) {\n                optionGroup.values = optionGroup.values.filter(v => v.name !== name);\n                this.generateVariants();\n            } else {\n                this.modalService\n                    .dialog({\n                        title: _('catalog.confirm-delete-product-option'),\n                        translationVars: { name },\n                        buttons: [\n                            { type: 'secondary', label: _('common.cancel') },\n                            { type: 'danger', label: _('common.delete'), returnValue: true },\n                        ],\n                    })\n                    .pipe(\n                        switchMap(val => {\n                            if (val) {\n                                return this.dataService.product.deleteProductOption(id);\n                            } else {\n                                return EMPTY;\n                            }\n                        }),\n                    )\n                    .subscribe(({ deleteProductOption }) => {\n                        if (deleteProductOption.result === DeletionResult.DELETED) {\n                            this.notificationService.success(_('common.notify-delete-success'), {\n                                entity: 'ProductOption',\n                            });\n                            optionGroup.values = optionGroup.values.filter(v => v.id !== id);\n                            this.generateVariants();\n                            this.optionsChanged = true;\n                        } else {\n                            this.notificationService.error(deleteProductOption.message ?? '');\n                        }\n                    });\n            }\n        }\n    }\n\n    generateVariants() {\n        const groups = this.optionGroups.map(g => g.values);\n        const previousVariants = this.generatedVariants;\n        const generatedVariantFactory = (\n            isDefault: boolean,\n            options: GeneratedVariant['options'],\n            existingVariant?: GetProductVariantOptions.Variants,\n            prototypeVariant?: GetProductVariantOptions.Variants,\n        ): GeneratedVariant => {\n            const prototype = this.getVariantPrototype(options, previousVariants);\n            return new GeneratedVariant({\n                enabled: true,\n                existing: !!existingVariant,\n                productVariantId: existingVariant?.id,\n                isDefault,\n                options,\n                price: existingVariant?.price ?? prototypeVariant?.price ?? prototype.price,\n                sku: existingVariant?.sku ?? prototypeVariant?.sku ?? prototype.sku,\n                stock: existingVariant?.stockOnHand ?? prototypeVariant?.stockOnHand ?? prototype.stock,\n            });\n        };\n        this.generatedVariants = groups.length\n            ? generateAllCombinations(groups).map(options => {\n                  const existingVariant = this.product.variants.find(v =>\n                      this.optionsAreEqual(v.options, options),\n                  );\n                  const prototypeVariant = this.product.variants.find(v =>\n                      this.optionsAreSubset(v.options, options),\n                  );\n                  return generatedVariantFactory(false, options, existingVariant, prototypeVariant);\n              })\n            : [generatedVariantFactory(true, [], this.product.variants[0])];\n    }\n\n    /**\n     * Returns one of the existing variants to base the newly-generated variant's\n     * details off.\n     */\n    private getVariantPrototype(\n        options: GeneratedVariant['options'],\n        previousVariants: GeneratedVariant[],\n    ): Pick<GeneratedVariant, 'sku' | 'price' | 'stock'> {\n        const variantsWithSimilarOptions = previousVariants.filter(v =>\n            options.map(o => o.name).filter(name => v.options.map(o => o.name).includes(name)),\n        );\n        if (variantsWithSimilarOptions.length) {\n            return pick(previousVariants[0], ['sku', 'price', 'stock']);\n        }\n        return {\n            sku: '',\n            price: 0,\n            stock: 0,\n        };\n    }\n\n    deleteVariant(id: string, options: GeneratedVariant['options']) {\n        this.modalService\n            .dialog({\n                title: _('catalog.confirm-delete-product-variant'),\n                translationVars: { name: options.map(o => o.name).join(' ') },\n                buttons: [\n                    { type: 'secondary', label: _('common.cancel') },\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\n                ],\n            })\n            .pipe(\n                switchMap(response =>\n                    response ? this.productDetailService.deleteProductVariant(id, this.product.id) : EMPTY,\n                ),\n                switchMap(() => this.reFetchProduct(null)),\n            )\n            .subscribe(\n                () => {\n                    this.notificationService.success(_('common.notify-delete-success'), {\n                        entity: 'ProductVariant',\n                    });\n                    this.initOptionsAndVariants();\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-delete-error'), {\n                        entity: 'ProductVariant',\n                    });\n                },\n            );\n    }\n\n    save() {\n        this.optionGroups = this.optionGroups.filter(g => g.values.length);\n        const newOptionGroups = this.optionGroups\n            .filter(og => og.isNew)\n            .map(og => ({\n                name: og.name,\n                values: [],\n            }));\n\n        this.checkUniqueSkus()\n            .pipe(\n                mergeMap(() => this.confirmDeletionOfObsoleteVariants()),\n                mergeMap(() =>\n                    this.productDetailService.createProductOptionGroups(newOptionGroups, this.languageCode),\n                ),\n                mergeMap(createdOptionGroups => this.addOptionGroupsToProduct(createdOptionGroups)),\n                mergeMap(createdOptionGroups => this.addNewOptionsToGroups(createdOptionGroups)),\n                mergeMap(groupsIds => this.fetchOptionGroups(groupsIds)),\n                mergeMap(groups => this.createNewProductVariants(groups)),\n                mergeMap(res => this.deleteObsoleteVariants(res.createProductVariants)),\n                mergeMap(variants => this.reFetchProduct(variants)),\n            )\n            .subscribe({\n                next: variants => {\n                    this.formValueChanged = false;\n                    this.notificationService.success(_('catalog.created-new-variants-success'), {\n                        count: variants.length,\n                    });\n                    this.initOptionsAndVariants();\n                    this.optionsChanged = false;\n                },\n            });\n    }\n\n    private checkUniqueSkus() {\n        const withDuplicateSkus = this.generatedVariants.filter((variant, index) => {\n            return (\n                variant.enabled &&\n                this.generatedVariants.find(gv => gv.sku.trim() === variant.sku.trim() && gv !== variant)\n            );\n        });\n        if (withDuplicateSkus.length) {\n            return this.modalService\n                .dialog({\n                    title: _('catalog.duplicate-sku-warning'),\n                    body: unique(withDuplicateSkus.map(v => `${v.sku}`)).join(', '),\n                    buttons: [{ label: _('common.close'), returnValue: false, type: 'primary' }],\n                })\n                .pipe(mergeMap(res => EMPTY));\n        } else {\n            return of(true);\n        }\n    }\n\n    private confirmDeletionOfObsoleteVariants(): Observable<boolean> {\n        const obsoleteVariants = this.getObsoleteVariants();\n        if (obsoleteVariants.length) {\n            return this.modalService\n                .fromComponent(ConfirmVariantDeletionDialogComponent, {\n                    locals: {\n                        variants: obsoleteVariants,\n                    },\n                })\n                .pipe(\n                    mergeMap(res => {\n                        return res === true ? of(true) : EMPTY;\n                    }),\n                );\n        } else {\n            return of(true);\n        }\n    }\n\n    private getObsoleteVariants() {\n        return this.product.variants.filter(\n            variant => !this.generatedVariants.find(gv => gv.productVariantId === variant.id),\n        );\n    }\n\n    private hasOnlyDefaultVariant(product: GetProductVariantOptions.Product): boolean {\n        return product.variants.length === 1 && product.optionGroups.length === 0;\n    }\n\n    private addOptionGroupsToProduct(\n        createdOptionGroups: CreateProductOptionGroup.CreateProductOptionGroup[],\n    ): Observable<CreateProductOptionGroup.CreateProductOptionGroup[]> {\n        if (createdOptionGroups.length) {\n            return forkJoin(\n                createdOptionGroups.map(optionGroup => {\n                    return this.dataService.product.addOptionGroupToProduct({\n                        productId: this.product.id,\n                        optionGroupId: optionGroup.id,\n                    });\n                }),\n            ).pipe(map(() => createdOptionGroups));\n        } else {\n            return of([]);\n        }\n    }\n\n    private addNewOptionsToGroups(\n        createdOptionGroups: CreateProductOptionGroup.CreateProductOptionGroup[],\n    ): Observable<string[]> {\n        const newOptions: CreateProductOptionInput[] = this.optionGroups\n            .map(og => {\n                const createdGroup = createdOptionGroups.find(cog => cog.name === og.name);\n                const productOptionGroupId = createdGroup ? createdGroup.id : og.id;\n                if (!productOptionGroupId) {\n                    throw new Error('Could not get a productOptionGroupId');\n                }\n                return og.values\n                    .filter(v => !v.locked)\n                    .map(v => ({\n                        productOptionGroupId,\n                        code: normalizeString(v.name, '-'),\n                        translations: [{ name: v.name, languageCode: this.languageCode }],\n                    }));\n            })\n            .reduce((flat, options) => [...flat, ...options], []);\n\n        const allGroupIds = [\n            ...createdOptionGroups.map(g => g.id),\n            ...this.optionGroups.map(g => g.id).filter(notNullOrUndefined),\n        ];\n\n        if (newOptions.length) {\n            return forkJoin(newOptions.map(input => this.dataService.product.addOptionToGroup(input))).pipe(\n                map(() => allGroupIds),\n            );\n        } else {\n            return of(allGroupIds);\n        }\n    }\n\n    private fetchOptionGroups(groupsIds: string[]): Observable<ProductOptionGroupWithOptionsFragment[]> {\n        return forkJoin(\n            groupsIds.map(id =>\n                this.dataService.product\n                    .getProductOptionGroup(id)\n                    .mapSingle(data => data.productOptionGroup)\n                    .pipe(filter(notNullOrUndefined)),\n            ),\n        ).pipe(defaultIfEmpty([] as ProductOptionGroupWithOptionsFragment[]));\n    }\n\n    private createNewProductVariants(groups: ProductOptionGroupWithOptionsFragment[]) {\n        const options = groups\n            .filter(notNullOrUndefined)\n            .map(og => og.options)\n            .reduce((flat, o) => [...flat, ...o], []);\n        const variants = this.generatedVariants\n            .filter(v => v.enabled && !v.existing)\n            .map(v => {\n                const optionIds = groups.map((group, index) => {\n                    const option = group.options.find(o => o.name === v.options[index].name);\n                    if (option) {\n                        return option.id;\n                    } else {\n                        throw new Error(`Could not find a matching option for group ${group.name}`);\n                    }\n                });\n                return {\n                    price: v.price,\n                    sku: v.sku,\n                    stock: v.stock,\n                    optionIds,\n                };\n            });\n        return this.productDetailService.createProductVariants(\n            this.product,\n            variants,\n            options,\n            this.languageCode,\n        );\n    }\n\n    private deleteObsoleteVariants<T>(input: T): Observable<T> {\n        const obsoleteVariants = this.getObsoleteVariants();\n        if (obsoleteVariants.length) {\n            const deleteOperations = obsoleteVariants.map(v =>\n                this.dataService.product.deleteProductVariant(v.id).pipe(map(() => input)),\n            );\n            return forkJoin(...deleteOperations);\n        } else {\n            return of(input);\n        }\n    }\n\n    private reFetchProduct<T>(input: T): Observable<T> {\n        // Re-fetch the Product to force an update to the view.\n        const id = this.route.snapshot.paramMap.get('id');\n        if (id) {\n            return this.dataService.product.getProduct(id).single$.pipe(map(() => input));\n        } else {\n            return of(input);\n        }\n    }\n\n    initOptionsAndVariants() {\n        this.dataService.product\n            // tslint:disable-next-line:no-non-null-assertion\n            .getProductVariantsOptions(this.route.snapshot.paramMap.get('id')!)\n            // tslint:disable-next-line:no-non-null-assertion\n            .mapSingle(({ product }) => product!)\n            .subscribe(p => {\n                this.product = p;\n                const allUsedOptionIds = p.variants.map(v => v.options.map(option => option.id)).flat();\n                const allUsedOptionGroupIds = p.variants\n                    .map(v => v.options.map(option => option.groupId))\n                    .flat();\n                this.optionGroups = p.optionGroups.map(og => {\n                    return {\n                        id: og.id,\n                        isNew: false,\n                        name: og.name,\n                        locked: allUsedOptionGroupIds.includes(og.id),\n                        values: og.options.map(o => ({\n                            id: o.id,\n                            name: o.name,\n                            locked: allUsedOptionIds.includes(o.id),\n                        })),\n                    };\n                });\n                this.generateVariants();\n            });\n    }\n\n    private optionsAreEqual(a: Array<{ name: string }>, b: Array<{ name: string }>): boolean {\n        return this.toOptionString(a) === this.toOptionString(b);\n    }\n\n    private optionsAreSubset(a: Array<{ name: string }>, b: Array<{ name: string }>): boolean {\n        return this.toOptionString(b).includes(this.toOptionString(a));\n    }\n\n    private toOptionString(o: Array<{ name: string }>): string {\n        return o\n            .map(x => x.name)\n            .sort()\n            .join('|');\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Asset, AssetType, BaseEntityResolver } from '@vendure/admin-ui/core';\nimport { DataService } from '@vendure/admin-ui/core';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AssetResolver extends BaseEntityResolver<Asset.Fragment> {\n    constructor(router: Router, dataService: DataService) {\n        super(\n            router,\n            {\n                __typename: 'Asset' as const,\n                id: '',\n                createdAt: '',\n                updatedAt: '',\n                name: '',\n                type: AssetType.IMAGE,\n                fileSize: 0,\n                mimeType: '',\n                width: 0,\n                height: 0,\n                source: '',\n                preview: '',\n                focalPoint: null,\n            },\n            id => dataService.product.getAsset(id).mapStream(data => data.asset),\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BaseEntityResolver, Collection, DataService, getDefaultUiLanguage } from '@vendure/admin-ui/core';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CollectionResolver extends BaseEntityResolver<Collection.Fragment> {\n    constructor(router: Router, dataService: DataService) {\n        super(\n            router,\n            {\n                __typename: 'Collection' as 'Collection',\n                id: '',\n                createdAt: '',\n                updatedAt: '',\n                languageCode: getDefaultUiLanguage(),\n                name: '',\n                slug: '',\n                isPrivate: false,\n                breadcrumbs: [],\n                description: '',\n                featuredAsset: null,\n                assets: [],\n                translations: [],\n                filters: [],\n                parent: {} as any,\n                children: null,\n            },\n            id => dataService.collection.getCollection(id).mapStream(data => data.collection),\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BaseEntityResolver } from '@vendure/admin-ui/core';\nimport { FacetWithValues } from '@vendure/admin-ui/core';\nimport { getDefaultUiLanguage } from '@vendure/admin-ui/core';\nimport { DataService } from '@vendure/admin-ui/core';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FacetResolver extends BaseEntityResolver<FacetWithValues.Fragment> {\n    constructor(router: Router, dataService: DataService) {\n        super(\n            router,\n            {\n                __typename: 'Facet' as 'Facet',\n                id: '',\n                createdAt: '',\n                updatedAt: '',\n                isPrivate: false,\n                languageCode: getDefaultUiLanguage(),\n                name: '',\n                code: '',\n                translations: [],\n                values: [],\n            },\n            (id) => dataService.facet.getFacet(id).mapStream((data) => data.facet),\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n    BaseEntityResolver,\n    DataService,\n    getDefaultUiLanguage,\n    GetProductWithVariants,\n} from '@vendure/admin-ui/core';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ProductResolver extends BaseEntityResolver<GetProductWithVariants.Product> {\n    constructor(dataService: DataService, router: Router) {\n        super(\n            router,\n            {\n                __typename: 'Product' as 'Product',\n                id: '',\n                createdAt: '',\n                updatedAt: '',\n                enabled: true,\n                languageCode: getDefaultUiLanguage(),\n                name: '',\n                slug: '',\n                featuredAsset: null,\n                assets: [],\n                description: '',\n                translations: [],\n                optionGroups: [],\n                facetValues: [],\n                variantList: { items: [], totalItems: 0 },\n                channels: [],\n            },\n            id =>\n                dataService.product\n                    .getProduct(id, { take: 10 })\n                    .refetchOnChannelChange()\n                    .mapStream(data => data.product),\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BaseEntityResolver } from '@vendure/admin-ui/core';\nimport { GetProductVariantOptions } from '@vendure/admin-ui/core';\nimport { DataService } from '@vendure/admin-ui/core';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ProductVariantsResolver extends BaseEntityResolver<GetProductVariantOptions.Product> {\n    constructor(router: Router, dataService: DataService) {\n        super(\n            router,\n            {\n                __typename: 'Product' as 'Product',\n                id: '',\n                createdAt: '',\n                updatedAt: '',\n                name: '',\n                optionGroups: [],\n                variants: [],\n            },\n            id => dataService.product.getProductVariantsOptions(id).mapStream(data => data.product),\n        );\n    }\n}\n","import { Route } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    Asset,\n    CanDeactivateDetailGuard,\n    Collection,\n    createResolveData,\n    detailBreadcrumb,\n    FacetWithValues,\n    GetProductWithVariants,\n} from '@vendure/admin-ui/core';\nimport { map } from 'rxjs/operators';\n\nimport { AssetDetailComponent } from './components/asset-detail/asset-detail.component';\nimport { AssetListComponent } from './components/asset-list/asset-list.component';\nimport { CollectionDetailComponent } from './components/collection-detail/collection-detail.component';\nimport { CollectionListComponent } from './components/collection-list/collection-list.component';\nimport { FacetDetailComponent } from './components/facet-detail/facet-detail.component';\nimport { FacetListComponent } from './components/facet-list/facet-list.component';\nimport { ProductDetailComponent } from './components/product-detail/product-detail.component';\nimport { ProductListComponent } from './components/product-list/product-list.component';\nimport { ProductOptionsEditorComponent } from './components/product-options-editor/product-options-editor.component';\nimport { ProductVariantsEditorComponent } from './components/product-variants-editor/product-variants-editor.component';\nimport { AssetResolver } from './providers/routing/asset-resolver';\nimport { CollectionResolver } from './providers/routing/collection-resolver';\nimport { FacetResolver } from './providers/routing/facet-resolver';\nimport { ProductResolver } from './providers/routing/product-resolver';\nimport { ProductVariantsResolver } from './providers/routing/product-variants-resolver';\n\nexport const catalogRoutes: Route[] = [\n    {\n        path: 'products',\n        component: ProductListComponent,\n        data: {\n            breadcrumb: _('breadcrumb.products'),\n        },\n    },\n    {\n        path: 'products/:id',\n        component: ProductDetailComponent,\n        resolve: createResolveData(ProductResolver),\n        canDeactivate: [CanDeactivateDetailGuard],\n        data: {\n            breadcrumb: productBreadcrumb,\n        },\n    },\n    {\n        path: 'products/:id/manage-variants',\n        component: ProductVariantsEditorComponent,\n        resolve: createResolveData(ProductVariantsResolver),\n        canDeactivate: [CanDeactivateDetailGuard],\n        data: {\n            breadcrumb: productVariantEditorBreadcrumb,\n        },\n    },\n    {\n        path: 'products/:id/options',\n        component: ProductOptionsEditorComponent,\n        resolve: createResolveData(ProductVariantsResolver),\n        canDeactivate: [CanDeactivateDetailGuard],\n        data: {\n            breadcrumb: productOptionsEditorBreadcrumb,\n        },\n    },\n    {\n        path: 'facets',\n        component: FacetListComponent,\n        data: {\n            breadcrumb: _('breadcrumb.facets'),\n        },\n    },\n    {\n        path: 'facets/:id',\n        component: FacetDetailComponent,\n        resolve: createResolveData(FacetResolver),\n        canDeactivate: [CanDeactivateDetailGuard],\n        data: {\n            breadcrumb: facetBreadcrumb,\n        },\n    },\n    {\n        path: 'collections',\n        component: CollectionListComponent,\n        data: {\n            breadcrumb: _('breadcrumb.collections'),\n        },\n    },\n    {\n        path: 'collections/:id',\n        component: CollectionDetailComponent,\n        resolve: createResolveData(CollectionResolver),\n        canDeactivate: [CanDeactivateDetailGuard],\n        data: {\n            breadcrumb: collectionBreadcrumb,\n        },\n    },\n    {\n        path: 'assets',\n        component: AssetListComponent,\n        data: {\n            breadcrumb: _('breadcrumb.assets'),\n        },\n    },\n    {\n        path: 'assets/:id',\n        component: AssetDetailComponent,\n        resolve: createResolveData(AssetResolver),\n        data: {\n            breadcrumb: assetBreadcrumb,\n        },\n    },\n];\n\nexport function productBreadcrumb(data: any, params: any) {\n    return detailBreadcrumb<GetProductWithVariants.Product>({\n        entity: data.entity,\n        id: params.id,\n        breadcrumbKey: 'breadcrumb.products',\n        getName: product => product.name,\n        route: 'products',\n    });\n}\n\nexport function productVariantEditorBreadcrumb(data: any, params: any) {\n    return data.entity.pipe(\n        map((entity: any) => {\n            return [\n                {\n                    label: _('breadcrumb.products'),\n                    link: ['../', 'products'],\n                },\n                {\n                    label: `${entity.name}`,\n                    link: ['../', 'products', params.id, { tab: 'variants' }],\n                },\n                {\n                    label: _('breadcrumb.manage-variants'),\n                    link: ['manage-variants'],\n                },\n            ];\n        }),\n    );\n}\n\nexport function productOptionsEditorBreadcrumb(data: any, params: any) {\n    return data.entity.pipe(\n        map((entity: any) => {\n            return [\n                {\n                    label: _('breadcrumb.products'),\n                    link: ['../', 'products'],\n                },\n                {\n                    label: `${entity.name}`,\n                    link: ['../', 'products', params.id, { tab: 'variants' }],\n                },\n                {\n                    label: _('breadcrumb.product-options'),\n                    link: ['options'],\n                },\n            ];\n        }),\n    );\n}\n\nexport function facetBreadcrumb(data: any, params: any) {\n    return detailBreadcrumb<FacetWithValues.Fragment>({\n        entity: data.entity,\n        id: params.id,\n        breadcrumbKey: 'breadcrumb.facets',\n        getName: facet => facet.name,\n        route: 'facets',\n    });\n}\n\nexport function collectionBreadcrumb(data: any, params: any) {\n    return detailBreadcrumb<Collection.Fragment>({\n        entity: data.entity,\n        id: params.id,\n        breadcrumbKey: 'breadcrumb.collections',\n        getName: collection => collection.name,\n        route: 'collections',\n    });\n}\n\nexport function assetBreadcrumb(data: any, params: any) {\n    return detailBreadcrumb<Asset.Fragment>({\n        entity: data.entity,\n        id: params.id,\n        breadcrumbKey: 'breadcrumb.assets',\n        getName: asset => asset.name,\n        route: 'assets',\n    });\n}\n","import { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    HostBinding,\n    Input,\n    Output,\n} from '@angular/core';\nimport {\n    Asset,\n    AssetPickerDialogComponent,\n    AssetPreviewDialogComponent,\n    ModalService,\n    Permission,\n} from '@vendure/admin-ui/core';\nimport { unique } from '@vendure/common/lib/unique';\n\nexport interface AssetChange {\n    assets: Asset[];\n    featuredAsset: Asset | undefined;\n}\n\n/**\n * A component which displays the Assets, and allows assets to be removed and\n * added, and for the featured asset to be set.\n *\n * Note: rather complex code for drag drop is due to a limitation of the default CDK implementation\n * which is addressed by a work-around from here: https://github.com/angular/components/issues/13372#issuecomment-483998378\n */\n@Component({\n    selector: 'vdr-assets',\n    templateUrl: './assets.component.html',\n    styleUrls: ['./assets.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AssetsComponent {\n    @Input('assets') set assetsSetter(val: Asset[]) {\n        // create a new non-readonly array of assets\n        this.assets = (val || []).slice();\n    }\n\n    @Input() featuredAsset: Asset | undefined;\n    @HostBinding('class.compact')\n    @Input()\n    compact = false;\n    @Output() change = new EventEmitter<AssetChange>();\n\n    public assets: Asset[] = [];\n\n    @Input()\n    updatePermissions: string | string[] | Permission | Permission[];\n\n    constructor(private modalService: ModalService, private changeDetector: ChangeDetectorRef) {}\n\n    selectAssets() {\n        this.modalService\n            .fromComponent(AssetPickerDialogComponent, {\n                size: 'xl',\n            })\n            .subscribe(result => {\n                if (result && result.length) {\n                    this.assets = unique(this.assets.concat(result), 'id');\n                    if (!this.featuredAsset) {\n                        this.featuredAsset = result[0];\n                    }\n                    this.emitChangeEvent(this.assets, this.featuredAsset);\n                    this.changeDetector.markForCheck();\n                }\n            });\n    }\n\n    setAsFeatured(asset: Asset) {\n        this.featuredAsset = asset;\n        this.emitChangeEvent(this.assets, asset);\n    }\n\n    isFeatured(asset: Asset): boolean {\n        return !!this.featuredAsset && this.featuredAsset.id === asset.id;\n    }\n\n    previewAsset(asset: Asset) {\n        this.modalService\n            .fromComponent(AssetPreviewDialogComponent, {\n                size: 'xl',\n                closable: true,\n                locals: { asset },\n            })\n            .subscribe();\n    }\n\n    removeAsset(asset: Asset) {\n        this.assets = this.assets.filter(a => a.id !== asset.id);\n        if (this.featuredAsset && this.featuredAsset.id === asset.id) {\n            this.featuredAsset = this.assets.length > 0 ? this.assets[0] : undefined;\n        }\n        this.emitChangeEvent(this.assets, this.featuredAsset);\n    }\n\n    private emitChangeEvent(assets: Asset[], featuredAsset: Asset | undefined) {\n        this.change.emit({\n            assets,\n            featuredAsset,\n        });\n    }\n\n    dropListDropped(event: CdkDragDrop<number>) {\n        moveItemInArray(this.assets, event.previousContainer.data, event.container.data);\n        this.emitChangeEvent(this.assets, this.featuredAsset);\n    }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { DataService, Dialog, GetChannels, NotificationService } from '@vendure/admin-ui/core';\nimport { combineLatest } from 'rxjs';\n\n@Component({\n    selector: 'vdr-assign-to-channel-dialog',\n    templateUrl: './assign-to-channel-dialog.component.html',\n    styleUrls: ['./assign-to-channel-dialog.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AssignToChannelDialogComponent implements OnInit, Dialog<GetChannels.Channels> {\n    selectedChannel: GetChannels.Channels | null | undefined;\n    currentChannel: GetChannels.Channels;\n    availableChannels: GetChannels.Channels[];\n    resolveWith: (result?: GetChannels.Channels) => void;\n    selectedChannelIdControl = new FormControl();\n\n    // assigned by ModalService.fromComponent() call\n\n    constructor(private dataService: DataService, private notificationService: NotificationService) {}\n\n    ngOnInit() {\n        const activeChannelId$ = this.dataService.client\n            .userStatus()\n            .mapSingle(({ userStatus }) => userStatus.activeChannelId);\n        const allChannels$ = this.dataService.settings.getChannels().mapSingle(data => data.channels);\n\n        combineLatest(activeChannelId$, allChannels$).subscribe(([activeChannelId, channels]) => {\n            // tslint:disable-next-line:no-non-null-assertion\n            this.currentChannel = channels.find(c => c.id === activeChannelId)!;\n            this.availableChannels = channels;\n        });\n\n        this.selectedChannelIdControl.valueChanges.subscribe(ids => {\n            this.selectChannel(ids);\n        });\n    }\n\n    selectChannel(channelIds: string[]) {\n        this.selectedChannel = this.availableChannels.find(c => c.id === channelIds[0]);\n    }\n\n    assign() {\n        const selectedChannel = this.selectedChannel;\n        if (selectedChannel) {\n            this.resolveWith(selectedChannel);\n        }\n    }\n\n    cancel() {\n        this.resolveWith();\n    }\n}\n","import { gql } from 'apollo-angular';\n\nexport const GET_PRODUCTS_WITH_FACET_VALUES_BY_IDS = gql`\n    query GetProductsWithFacetValuesByIds($ids: [String!]!) {\n        products(options: { filter: { id: { in: $ids } } }) {\n            items {\n                id\n                name\n                facetValues {\n                    id\n                    name\n                    code\n                    facet {\n                        id\n                        name\n                        code\n                    }\n                }\n            }\n        }\n    }\n`;\n\nexport const GET_VARIANTS_WITH_FACET_VALUES_BY_IDS = gql`\n    query GetVariantsWithFacetValuesByIds($ids: [String!]!) {\n        productVariants(options: { filter: { id: { in: $ids } } }) {\n            items {\n                id\n                name\n                sku\n                facetValues {\n                    id\n                    name\n                    code\n                    facet {\n                        id\n                        name\n                        code\n                    }\n                }\n            }\n        }\n    }\n`;\n\nexport const UPDATE_PRODUCTS_BULK = gql`\n    mutation UpdateProductsBulk($input: [UpdateProductInput!]!) {\n        updateProducts(input: $input) {\n            id\n            name\n            facetValues {\n                id\n                name\n                code\n            }\n        }\n    }\n`;\n\nexport const UPDATE_VARIANTS_BULK = gql`\n    mutation UpdateVariantsBulk($input: [UpdateProductVariantInput!]!) {\n        updateProductVariants(input: $input) {\n            id\n            name\n            facetValues {\n                id\n                name\n                code\n            }\n        }\n    }\n`;\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n    DataService,\n    Dialog,\n    FacetWithValuesFragment,\n    GetProductsWithFacetValuesByIdsQuery,\n    GetProductsWithFacetValuesByIdsQueryVariables,\n    GetVariantsWithFacetValuesByIdsQuery,\n    UpdateProductsBulkMutation,\n    UpdateProductsBulkMutationVariables,\n    UpdateVariantsBulkMutation,\n    UpdateVariantsBulkMutationVariables,\n} from '@vendure/admin-ui/core';\nimport { unique } from '@vendure/common/lib/unique';\nimport { Observable, Subscription } from 'rxjs';\nimport { shareReplay, switchMap } from 'rxjs/operators';\n\nimport {\n    GET_PRODUCTS_WITH_FACET_VALUES_BY_IDS,\n    GET_VARIANTS_WITH_FACET_VALUES_BY_IDS,\n    UPDATE_PRODUCTS_BULK,\n    UPDATE_VARIANTS_BULK,\n} from './bulk-add-facet-values-dialog.graphql';\n\ninterface ProductOrVariant {\n    id: string;\n    name: string;\n    sku?: string;\n    facetValues: Array<{\n        id: string;\n        name: string;\n        code: string;\n        facet: Array<{\n            id: string;\n            name: string;\n            code: string;\n        }>;\n    }>;\n}\n\n@Component({\n    selector: 'vdr-bulk-add-facet-values-dialog',\n    templateUrl: './bulk-add-facet-values-dialog.component.html',\n    styleUrls: ['./bulk-add-facet-values-dialog.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BulkAddFacetValuesDialogComponent\n    implements OnInit, OnDestroy, Dialog<FacetWithValuesFragment[]>\n{\n    resolveWith: (result?: FacetWithValuesFragment[]) => void;\n    /* provided by call to ModalService */\n    mode: 'product' | 'variant' = 'product';\n    ids?: string[];\n    facets: FacetWithValuesFragment[] = [];\n    state: 'loading' | 'ready' | 'saving' = 'loading';\n\n    selectedValues: FacetWithValuesFragment[] = [];\n    items: ProductOrVariant[] = [];\n    facetValuesRemoved = false;\n    private subscription: Subscription;\n    constructor(private dataService: DataService, private changeDetectorRef: ChangeDetectorRef) {}\n\n    ngOnInit(): void {\n        const fetchData$: Observable<any> =\n            this.mode === 'product'\n                ? this.dataService\n                      .query<\n                          GetProductsWithFacetValuesByIdsQuery,\n                          GetProductsWithFacetValuesByIdsQueryVariables\n                      >(GET_PRODUCTS_WITH_FACET_VALUES_BY_IDS, {\n                          ids: this.ids ?? [],\n                      })\n                      .mapSingle(({ products }) =>\n                          products.items.map(p => ({ ...p, facetValues: [...p.facetValues] })),\n                      )\n                : this.dataService\n                      .query<\n                          GetVariantsWithFacetValuesByIdsQuery,\n                          GetProductsWithFacetValuesByIdsQueryVariables\n                      >(GET_VARIANTS_WITH_FACET_VALUES_BY_IDS, {\n                          ids: this.ids ?? [],\n                      })\n                      .mapSingle(({ productVariants }) =>\n                          productVariants.items.map(p => ({ ...p, facetValues: [...p.facetValues] })),\n                      );\n        this.subscription = fetchData$.subscribe({\n            next: items => {\n                this.items = items;\n                this.state = 'ready';\n                this.changeDetectorRef.markForCheck();\n            },\n        });\n    }\n\n    ngOnDestroy() {\n        this.subscription?.unsubscribe();\n    }\n\n    cancel() {\n        this.resolveWith();\n    }\n\n    removeFacetValue(item: ProductOrVariant, facetValueId: string) {\n        item.facetValues = item.facetValues.filter(fv => fv.id !== facetValueId);\n        this.facetValuesRemoved = true;\n    }\n\n    addFacetValues() {\n        const selectedFacetValueIds = this.selectedValues.map(sv => sv.id);\n        this.state = 'saving';\n        const save$: Observable<any> =\n            this.mode === 'product'\n                ? this.dataService.mutate<UpdateProductsBulkMutation, UpdateProductsBulkMutationVariables>(\n                      UPDATE_PRODUCTS_BULK,\n                      {\n                          input: this.items?.map(product => ({\n                              id: product.id,\n                              facetValueIds: unique([\n                                  ...product.facetValues.map(fv => fv.id),\n                                  ...selectedFacetValueIds,\n                              ]),\n                          })),\n                      },\n                  )\n                : this.dataService.mutate<UpdateVariantsBulkMutation, UpdateVariantsBulkMutationVariables>(\n                      UPDATE_VARIANTS_BULK,\n                      {\n                          input: this.items?.map(product => ({\n                              id: product.id,\n                              facetValueIds: unique([\n                                  ...product.facetValues.map(fv => fv.id),\n                                  ...selectedFacetValueIds,\n                              ]),\n                          })),\n                      },\n                  );\n        return save$.subscribe(result => {\n            this.resolveWith(this.selectedValues);\n        });\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    SimpleChanges,\n    TemplateRef,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n    CollectionFilterParameter,\n    ConfigurableOperationInput,\n    DataService,\n    GetCollectionContents,\n} from '@vendure/admin-ui/core';\nimport { BehaviorSubject, combineLatest, Observable, of, Subject } from 'rxjs';\nimport {\n    catchError,\n    debounceTime,\n    distinctUntilChanged,\n    filter,\n    finalize,\n    map,\n    startWith,\n    switchMap,\n    takeUntil,\n    tap,\n} from 'rxjs/operators';\n\n@Component({\n    selector: 'vdr-collection-contents',\n    templateUrl: './collection-contents.component.html',\n    styleUrls: ['./collection-contents.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CollectionContentsComponent implements OnInit, OnChanges, OnDestroy {\n    @Input() collectionId: string;\n    @Input() parentId: string;\n    @Input() updatedFilters: ConfigurableOperationInput[] | undefined;\n    @Input() previewUpdatedFilters = false;\n    @ContentChild(TemplateRef, { static: true }) headerTemplate: TemplateRef<any>;\n\n    contents$: Observable<GetCollectionContents.Items[]>;\n    contentsTotalItems$: Observable<number>;\n    contentsItemsPerPage$: Observable<number>;\n    contentsCurrentPage$: Observable<number>;\n    filterTermControl = new FormControl('');\n    isLoading = false;\n    private collectionIdChange$ = new BehaviorSubject<string>('');\n    private parentIdChange$ = new BehaviorSubject<string>('');\n    private filterChanges$ = new BehaviorSubject<ConfigurableOperationInput[]>([]);\n    private refresh$ = new BehaviorSubject<boolean>(true);\n    private destroy$ = new Subject<void>();\n\n    constructor(private route: ActivatedRoute, private router: Router, private dataService: DataService) {}\n\n    ngOnInit() {\n        this.contentsCurrentPage$ = this.route.queryParamMap.pipe(\n            map(qpm => qpm.get('contentsPage')),\n            map(page => (!page ? 1 : +page)),\n            startWith(1),\n            distinctUntilChanged(),\n        );\n\n        this.contentsItemsPerPage$ = this.route.queryParamMap.pipe(\n            map(qpm => qpm.get('contentsPerPage')),\n            map(perPage => (!perPage ? 10 : +perPage)),\n            startWith(10),\n            distinctUntilChanged(),\n        );\n\n        const filterTerm$ = this.filterTermControl.valueChanges.pipe(\n            debounceTime(250),\n            tap(() => this.setContentsPageNumber(1)),\n            startWith(''),\n        );\n\n        const filterChanges$ = this.filterChanges$.asObservable().pipe(\n            filter(() => this.previewUpdatedFilters),\n            tap(() => this.setContentsPageNumber(1)),\n            startWith([]),\n        );\n\n        const fetchUpdate$ = combineLatest(\n            this.collectionIdChange$,\n            this.parentIdChange$,\n            this.contentsCurrentPage$,\n            this.contentsItemsPerPage$,\n            filterTerm$,\n            filterChanges$,\n            this.refresh$,\n        );\n\n        const collection$ = fetchUpdate$.pipe(\n            takeUntil(this.destroy$),\n            tap(() => (this.isLoading = true)),\n            debounceTime(50),\n            switchMap(([id, parentId, currentPage, itemsPerPage, filterTerm, filters]) => {\n                const take = itemsPerPage;\n                const skip = (currentPage - 1) * itemsPerPage;\n                if (filters.length && this.previewUpdatedFilters) {\n                    const filterClause = filterTerm\n                        ? ({ name: { contains: filterTerm } } as CollectionFilterParameter)\n                        : undefined;\n                    return this.dataService.collection\n                        .previewCollectionVariants(\n                            {\n                                parentId,\n                                filters,\n                            },\n                            {\n                                take,\n                                skip,\n                                filter: filterClause,\n                            },\n                        )\n                        .mapSingle(data => data.previewCollectionVariants)\n                        .pipe(catchError(() => of({ items: [], totalItems: 0 })));\n                } else if (id) {\n                    return this.dataService.collection\n                        .getCollectionContents(id, take, skip, filterTerm)\n                        .mapSingle(data => data.collection?.productVariants);\n                } else {\n                    return of(null);\n                }\n            }),\n            tap(() => (this.isLoading = false)),\n            finalize(() => (this.isLoading = false)),\n        );\n\n        this.contents$ = collection$.pipe(map(result => (result ? result.items : [])));\n        this.contentsTotalItems$ = collection$.pipe(map(result => (result ? result.totalItems : 0)));\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('collectionId' in changes) {\n            this.collectionIdChange$.next(changes.collectionId.currentValue);\n        }\n        if ('parentId' in changes) {\n            this.parentIdChange$.next(changes.parentId.currentValue);\n        }\n        if ('updatedFilters' in changes) {\n            if (this.updatedFilters) {\n                this.filterChanges$.next(this.updatedFilters);\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    setContentsPageNumber(page: number) {\n        this.setParam('contentsPage', page);\n    }\n\n    setContentsItemsPerPage(perPage: number) {\n        this.setParam('contentsPerPage', perPage);\n    }\n\n    refresh() {\n        this.refresh$.next(true);\n    }\n\n    private setParam(key: string, value: any) {\n        this.router.navigate(['./'], {\n            relativeTo: this.route,\n            queryParams: {\n                [key]: value,\n            },\n            queryParamsHandling: 'merge',\n            replaceUrl: true,\n        });\n    }\n}\n","import { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    BulkAction,\n    currentChannelIsNotDefault,\n    DataService,\n    DeletionResult,\n    getChannelCodeFromUserStatus,\n    isMultiChannel,\n    ModalService,\n    NotificationService,\n    Permission,\n} from '@vendure/admin-ui/core';\nimport { unique } from '@vendure/common/lib/unique';\nimport { EMPTY, from, of } from 'rxjs';\nimport { mapTo, switchMap } from 'rxjs/operators';\n\nimport { AssignToChannelDialogComponent } from '../assign-to-channel-dialog/assign-to-channel-dialog.component';\nimport { CollectionPartial } from '../collection-tree/collection-tree.component';\n\nimport { CollectionListComponent } from './collection-list.component';\n\nexport const deleteCollectionsBulkAction: BulkAction<CollectionPartial, CollectionListComponent> = {\n    location: 'collection-list',\n    label: _('common.delete'),\n    icon: 'trash',\n    iconClass: 'is-danger',\n    requiresPermission: userPermissions =>\n        userPermissions.includes(Permission.DeleteCollection) ||\n        userPermissions.includes(Permission.DeleteCatalog),\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\n        const modalService = injector.get(ModalService);\n        const dataService = injector.get(DataService);\n        const notificationService = injector.get(NotificationService);\n\n        modalService\n            .dialog({\n                title: _('catalog.confirm-bulk-delete-collections'),\n                translationVars: {\n                    count: selection.length,\n                },\n                buttons: [\n                    { type: 'secondary', label: _('common.cancel') },\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\n                ],\n            })\n            .pipe(\n                switchMap(response =>\n                    response\n                        ? dataService.collection.deleteCollections(unique(selection.map(c => c.id)))\n                        : EMPTY,\n                ),\n            )\n            .subscribe(result => {\n                let deleted = 0;\n                const errors: string[] = [];\n                for (const item of result.deleteCollections) {\n                    if (item.result === DeletionResult.DELETED) {\n                        deleted++;\n                    } else if (item.message) {\n                        errors.push(item.message);\n                    }\n                }\n                if (0 < deleted) {\n                    notificationService.success(_('catalog.notify-bulk-delete-collections-success'), {\n                        count: deleted,\n                    });\n                }\n                if (0 < errors.length) {\n                    notificationService.error(errors.join('\\n'));\n                }\n                hostComponent.refresh();\n                clearSelection();\n            });\n    },\n};\n\nexport const assignCollectionsToChannelBulkAction: BulkAction<CollectionPartial, CollectionListComponent> = {\n    location: 'collection-list',\n    label: _('catalog.assign-to-channel'),\n    icon: 'layers',\n    requiresPermission: userPermissions =>\n        userPermissions.includes(Permission.UpdateCatalog) ||\n        userPermissions.includes(Permission.UpdateProduct),\n    isVisible: ({ injector }) => isMultiChannel(injector.get(DataService)),\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\n        const modalService = injector.get(ModalService);\n        const dataService = injector.get(DataService);\n        const notificationService = injector.get(NotificationService);\n        modalService\n            .fromComponent(AssignToChannelDialogComponent, {\n                size: 'md',\n                locals: {},\n            })\n            .pipe(\n                switchMap(result => {\n                    if (result) {\n                        return dataService.collection\n                            .assignCollectionsToChannel({\n                                collectionIds: selection.map(c => c.id),\n                                channelId: result.id,\n                            })\n                            .pipe(mapTo(result));\n                    } else {\n                        return EMPTY;\n                    }\n                }),\n            )\n            .subscribe(result => {\n                notificationService.success(_('catalog.assign-collections-to-channel-success'), {\n                    count: selection.length,\n                    channelCode: result.code,\n                });\n                clearSelection();\n            });\n    },\n};\n\nexport const removeCollectionsFromChannelBulkAction: BulkAction<CollectionPartial, CollectionListComponent> =\n    {\n        location: 'collection-list',\n        label: _('catalog.remove-from-channel'),\n        requiresPermission: userPermissions =>\n            userPermissions.includes(Permission.UpdateChannel) ||\n            userPermissions.includes(Permission.UpdateProduct),\n        getTranslationVars: ({ injector }) => getChannelCodeFromUserStatus(injector.get(DataService)),\n        icon: 'layers',\n        iconClass: 'is-warning',\n        isVisible: ({ injector }) => currentChannelIsNotDefault(injector.get(DataService)),\n        onClick: ({ injector, selection, hostComponent, clearSelection }) => {\n            const modalService = injector.get(ModalService);\n            const dataService = injector.get(DataService);\n            const notificationService = injector.get(NotificationService);\n            const activeChannelId$ = dataService.client\n                .userStatus()\n                .mapSingle(({ userStatus }) => userStatus.activeChannelId);\n\n            from(getChannelCodeFromUserStatus(injector.get(DataService)))\n                .pipe(\n                    switchMap(({ channelCode }) =>\n                        modalService.dialog({\n                            title: _('catalog.remove-from-channel'),\n                            translationVars: {\n                                channelCode,\n                            },\n                            buttons: [\n                                { type: 'secondary', label: _('common.cancel') },\n                                {\n                                    type: 'danger',\n                                    label: _('common.remove'),\n                                    returnValue: true,\n                                },\n                            ],\n                        }),\n                    ),\n                    switchMap(res =>\n                        res\n                            ? activeChannelId$.pipe(\n                                  switchMap(activeChannelId =>\n                                      activeChannelId\n                                          ? dataService.collection.removeCollectionsFromChannel({\n                                                channelId: activeChannelId,\n                                                collectionIds: selection.map(c => c.id),\n                                            })\n                                          : EMPTY,\n                                  ),\n                                  mapTo(true),\n                              )\n                            : of(false),\n                    ),\n                )\n                .subscribe(removed => {\n                    if (removed) {\n                        clearSelection();\n                        notificationService.success(\n                            _('catalog.notify-remove-collections-from-channel-success'),\n                            {\n                                count: selection.length,\n                            },\n                        );\n                        hostComponent.refresh();\n                    }\n                });\n        },\n    };\n","export type HasParent = { id: string; parent?: { id: string } | null };\nexport type TreeNode<T extends HasParent> = T & { children: Array<TreeNode<T>>; expanded: boolean };\nexport type RootNode<T extends HasParent> = { id?: string; children: Array<TreeNode<T>> };\n\n/**\n * Builds a tree from an array of nodes which have a parent.\n * Based on https://stackoverflow.com/a/31247960/772859, modified to preserve ordering.\n */\nexport function arrayToTree<T extends HasParent>(\n    nodes: T[],\n    currentState?: RootNode<T>,\n    expandedIds: string[] = [],\n): RootNode<T> {\n    const topLevelNodes: Array<TreeNode<T>> = [];\n    const mappedArr: { [id: string]: TreeNode<T> } = {};\n    const currentStateMap = treeToMap(currentState);\n\n    // First map the nodes of the array to an object -> create a hash table.\n    for (const node of nodes) {\n        mappedArr[node.id] = { ...(node as any), children: [] };\n    }\n\n    for (const id of nodes.map(n => n.id)) {\n        if (mappedArr.hasOwnProperty(id)) {\n            const mappedElem = mappedArr[id];\n            mappedElem.expanded = currentStateMap.get(id)?.expanded ?? expandedIds.includes(id);\n            const parent = mappedElem.parent;\n            if (!parent) {\n                continue;\n            }\n            // If the element is not at the root level, add it to its parent array of children.\n            const parentIsRoot = !mappedArr[parent.id];\n            if (!parentIsRoot) {\n                if (mappedArr[parent.id]) {\n                    mappedArr[parent.id].children.push(mappedElem);\n                } else {\n                    mappedArr[parent.id] = { children: [mappedElem] } as any;\n                }\n            } else {\n                topLevelNodes.push(mappedElem);\n            }\n        }\n    }\n    // tslint:disable-next-line:no-non-null-assertion\n    const rootId = topLevelNodes.length ? topLevelNodes[0].parent!.id : undefined;\n    return { id: rootId, children: topLevelNodes };\n}\n\n/**\n * Converts an existing tree (as generated by the arrayToTree function) into a flat\n * Map. This is used to persist certain states (e.g. `expanded`) when re-building the\n * tree.\n */\nfunction treeToMap<T extends HasParent>(tree?: RootNode<T>): Map<string, TreeNode<T>> {\n    const nodeMap = new Map<string, TreeNode<T>>();\n    function visit(node: TreeNode<T>) {\n        nodeMap.set(node.id, node);\n        node.children.forEach(visit);\n    }\n    if (tree) {\n        visit(tree as TreeNode<T>);\n    }\n    return nodeMap;\n}\n","import { CdkDragDrop } from '@angular/cdk/drag-drop';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { Collection, SelectionManager } from '@vendure/admin-ui/core';\n\nimport { arrayToTree, HasParent, RootNode, TreeNode } from './array-to-tree';\n\nexport type RearrangeEvent = { collectionId: string; parentId: string; index: number };\nexport type CollectionPartial = Pick<Collection.Fragment, 'id' | 'parent' | 'name'>;\n\n@Component({\n    selector: 'vdr-collection-tree',\n    templateUrl: 'collection-tree.component.html',\n    styleUrls: ['./collection-tree.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CollectionTreeComponent implements OnChanges {\n    @Input() collections: CollectionPartial[];\n    @Input() activeCollectionId: string;\n    @Input() expandAll = false;\n    @Input() expandedIds: string[] = [];\n    @Input() selectionManager: SelectionManager<CollectionPartial>;\n    @Output() rearrange = new EventEmitter<RearrangeEvent>();\n    @Output() deleteCollection = new EventEmitter<string>();\n    collectionTree: RootNode<CollectionPartial>;\n    private allMoveListItems: Array<{ path: string; id: string; ancestorIdPath: Set<string> }> = [];\n\n    ngOnChanges(changes: SimpleChanges) {\n        if ('collections' in changes && this.collections) {\n            this.collectionTree = arrayToTree(this.collections, this.collectionTree, this.expandedIds);\n            this.allMoveListItems = [];\n        }\n    }\n\n    onDrop(event: CdkDragDrop<CollectionPartial | RootNode<CollectionPartial>>) {\n        const item = event.item.data as CollectionPartial;\n        const newParent = event.container.data;\n        const newParentId = newParent.id;\n        if (newParentId == null) {\n            throw new Error(`Could not determine the ID of the root Collection`);\n        }\n        this.rearrange.emit({\n            collectionId: item.id,\n            parentId: newParentId,\n            index: event.currentIndex,\n        });\n    }\n\n    onMove(event: RearrangeEvent) {\n        this.rearrange.emit(event);\n    }\n\n    onDelete(id: string) {\n        this.deleteCollection.emit(id);\n    }\n\n    getMoveListItems(collection: CollectionPartial) {\n        if (this.allMoveListItems.length === 0) {\n            this.allMoveListItems = this.calculateAllMoveListItems();\n        }\n        return this.allMoveListItems.filter(\n            item =>\n                item.id !== collection.id &&\n                !item.ancestorIdPath.has(collection.id) &&\n                item.id !== collection.parent?.id,\n        );\n    }\n\n    calculateAllMoveListItems() {\n        const visit = (\n            node: TreeNode<any>,\n            parentPath: string[],\n            ancestorIdPath: Set<string>,\n            output: Array<{ path: string; id: string; ancestorIdPath: Set<string> }>,\n        ) => {\n            const path = parentPath.concat(node.name);\n            output.push({ path: path.slice(1).join(' / ') || 'root', id: node.id, ancestorIdPath });\n            node.children.forEach(child =>\n                visit(child, path, new Set<string>([...ancestorIdPath, node.id]), output),\n            );\n            return output;\n        };\n        return visit(this.collectionTree, [], new Set<string>(), []);\n    }\n\n    private isRootNode<T extends HasParent>(node: T | RootNode<T>): node is RootNode<T> {\n        return !node.hasOwnProperty('parent');\n    }\n}\n","import { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    SimpleChanges,\n    SkipSelf,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DataService, Permission, SelectionManager } from '@vendure/admin-ui/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\nimport { RootNode, TreeNode } from './array-to-tree';\nimport { CollectionPartial, CollectionTreeComponent } from './collection-tree.component';\n\n@Component({\n    selector: 'vdr-collection-tree-node',\n    templateUrl: './collection-tree-node.component.html',\n    styleUrls: ['./collection-tree-node.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CollectionTreeNodeComponent implements OnInit, OnChanges, OnDestroy {\n    depth = 0;\n    parentName: string;\n    @Input() collectionTree: TreeNode<CollectionPartial>;\n    @Input() activeCollectionId: string;\n    @Input() expandAll = false;\n    @Input() selectionManager: SelectionManager<CollectionPartial>;\n    hasUpdatePermission$: Observable<boolean>;\n    hasDeletePermission$: Observable<boolean>;\n    moveListItems: Array<{ path: string; id: string }> = [];\n    private subscription: Subscription;\n\n    constructor(\n        @SkipSelf() @Optional() private parent: CollectionTreeNodeComponent,\n        private root: CollectionTreeComponent,\n        private dataService: DataService,\n        private router: Router,\n        private route: ActivatedRoute,\n        private changeDetectorRef: ChangeDetectorRef,\n    ) {\n        if (parent) {\n            this.depth = parent.depth + 1;\n        }\n    }\n\n    ngOnInit() {\n        this.parentName = this.collectionTree.name || '<root>';\n        const permissions$ = this.dataService.client\n            .userStatus()\n            .mapStream(data => data.userStatus.permissions)\n            .pipe(shareReplay(1));\n        this.hasUpdatePermission$ = permissions$.pipe(\n            map(\n                perms =>\n                    perms.includes(Permission.UpdateCatalog) || perms.includes(Permission.UpdateCollection),\n            ),\n        );\n        this.hasDeletePermission$ = permissions$.pipe(\n            map(\n                perms =>\n                    perms.includes(Permission.DeleteCatalog) || perms.includes(Permission.DeleteCollection),\n            ),\n        );\n        this.subscription = this.selectionManager?.selectionChanges$.subscribe(() =>\n            this.changeDetectorRef.markForCheck(),\n        );\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const expandAllChange = changes['expandAll'];\n        if (expandAllChange) {\n            if (expandAllChange.previousValue === true && expandAllChange.currentValue === false) {\n                this.collectionTree.children.forEach(c => (c.expanded = false));\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this.subscription?.unsubscribe();\n    }\n\n    trackByFn(index: number, item: CollectionPartial) {\n        return item.id;\n    }\n\n    toggleExpanded(collection: TreeNode<CollectionPartial>) {\n        collection.expanded = !collection.expanded;\n        let expandedIds = this.route.snapshot.queryParamMap.get('expanded')?.split(',') ?? [];\n        if (collection.expanded) {\n            expandedIds.push(collection.id);\n        } else {\n            expandedIds = expandedIds.filter(id => id !== collection.id);\n        }\n        this.router.navigate(['./'], {\n            queryParams: {\n                expanded: expandedIds.filter(id => !!id).join(','),\n            },\n            queryParamsHandling: 'merge',\n            relativeTo: this.route,\n        });\n    }\n\n    getMoveListItems(collection: CollectionPartial) {\n        this.moveListItems = this.root.getMoveListItems(collection);\n    }\n\n    move(collection: CollectionPartial, parentId: string) {\n        this.root.onMove({\n            index: 0,\n            parentId,\n            collectionId: collection.id,\n        });\n    }\n\n    moveUp(collection: CollectionPartial, currentIndex: number) {\n        if (!collection.parent) {\n            return;\n        }\n        this.root.onMove({\n            index: currentIndex - 1,\n            parentId: collection.parent.id,\n            collectionId: collection.id,\n        });\n    }\n\n    moveDown(collection: CollectionPartial, currentIndex: number) {\n        if (!collection.parent) {\n            return;\n        }\n        this.root.onMove({\n            index: currentIndex + 1,\n            parentId: collection.parent.id,\n            collectionId: collection.id,\n        });\n    }\n\n    drop(event: CdkDragDrop<CollectionPartial | RootNode<CollectionPartial>>) {\n        moveItemInArray(this.collectionTree.children, event.previousIndex, event.currentIndex);\n        this.root.onDrop(event);\n    }\n\n    delete(id: string) {\n        this.root.onDelete(id);\n    }\n}\n","import { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    BulkAction,\n    currentChannelIsNotDefault,\n    DataService,\n    DeletionResult,\n    getChannelCodeFromUserStatus,\n    GetFacetList,\n    isMultiChannel,\n    ModalService,\n    NotificationService,\n    Permission,\n} from '@vendure/admin-ui/core';\nimport { unique } from '@vendure/common/lib/unique';\nimport { EMPTY, of } from 'rxjs';\nimport { map, mapTo, switchMap } from 'rxjs/operators';\n\nimport { AssignToChannelDialogComponent } from '../assign-to-channel-dialog/assign-to-channel-dialog.component';\n\nimport { FacetListComponent } from './facet-list.component';\n\nexport const deleteFacetsBulkAction: BulkAction<GetFacetList.Items, FacetListComponent> = {\n    location: 'facet-list',\n    label: _('common.delete'),\n    icon: 'trash',\n    iconClass: 'is-danger',\n    requiresPermission: userPermissions =>\n        userPermissions.includes(Permission.DeleteFacet) ||\n        userPermissions.includes(Permission.DeleteCatalog),\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\n        const modalService = injector.get(ModalService);\n        const dataService = injector.get(DataService);\n        const notificationService = injector.get(NotificationService);\n\n        function showModalAndDelete(facetIds: string[], message?: string) {\n            return modalService\n                .dialog({\n                    title: _('catalog.confirm-bulk-delete-facets'),\n                    translationVars: {\n                        count: selection.length,\n                    },\n                    size: message ? 'lg' : 'md',\n                    body: message,\n                    buttons: [\n                        { type: 'secondary', label: _('common.cancel') },\n                        {\n                            type: 'danger',\n                            label: message ? _('common.force-delete') : _('common.delete'),\n                            returnValue: true,\n                        },\n                    ],\n                })\n                .pipe(\n                    switchMap(res =>\n                        res\n                            ? dataService.facet\n                                  .deleteFacets(facetIds, !!message)\n                                  .pipe(map(res2 => res2.deleteFacets))\n                            : of([]),\n                    ),\n                );\n        }\n\n        showModalAndDelete(unique(selection.map(f => f.id)))\n            .pipe(\n                switchMap(result => {\n                    let deletedCount = 0;\n                    const errors: string[] = [];\n                    const errorIds: string[] = [];\n                    let i = 0;\n                    for (const item of result) {\n                        if (item.result === DeletionResult.DELETED) {\n                            deletedCount++;\n                        } else if (item.message) {\n                            errors.push(item.message);\n                            errorIds.push(selection[i]?.id);\n                        }\n                        i++;\n                    }\n                    if (0 < errorIds.length) {\n                        return showModalAndDelete(errorIds, errors.join('\\n')).pipe(\n                            map(result2 => {\n                                const deletedCount2 = result2.filter(\n                                    r => r.result === DeletionResult.DELETED,\n                                ).length;\n                                return deletedCount + deletedCount2;\n                            }),\n                        );\n                    } else {\n                        return of(deletedCount);\n                    }\n                }),\n            )\n            .subscribe(deletedCount => {\n                if (deletedCount) {\n                    hostComponent.refresh();\n                    clearSelection();\n                    notificationService.success(_('catalog.notify-bulk-delete-facets-success'), {\n                        count: deletedCount,\n                    });\n                }\n            });\n    },\n};\n\nexport const assignFacetsToChannelBulkAction: BulkAction<GetFacetList.Items, FacetListComponent> = {\n    location: 'facet-list',\n    label: _('catalog.assign-to-channel'),\n    icon: 'layers',\n    requiresPermission: userPermissions =>\n        userPermissions.includes(Permission.UpdateFacet) ||\n        userPermissions.includes(Permission.UpdateCatalog),\n    isVisible: ({ injector }) => isMultiChannel(injector.get(DataService)),\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\n        const modalService = injector.get(ModalService);\n        const dataService = injector.get(DataService);\n        const notificationService = injector.get(NotificationService);\n        modalService\n            .fromComponent(AssignToChannelDialogComponent, {\n                size: 'md',\n                locals: {},\n            })\n            .pipe(\n                switchMap(result => {\n                    if (result) {\n                        return dataService.facet\n                            .assignFacetsToChannel({\n                                facetIds: selection.map(f => f.id),\n                                channelId: result.id,\n                            })\n                            .pipe(mapTo(result));\n                    } else {\n                        return EMPTY;\n                    }\n                }),\n            )\n            .subscribe(result => {\n                notificationService.success(_('catalog.assign-facets-to-channel-success'), {\n                    count: selection.length,\n                    channelCode: result.code,\n                });\n                clearSelection();\n            });\n    },\n};\n\nexport const removeFacetsFromChannelBulkAction: BulkAction<GetFacetList.Items, FacetListComponent> = {\n    location: 'facet-list',\n    label: _('catalog.remove-from-channel'),\n    getTranslationVars: ({ injector }) => getChannelCodeFromUserStatus(injector.get(DataService)),\n    icon: 'layers',\n    iconClass: 'is-warning',\n    requiresPermission: userPermissions =>\n        userPermissions.includes(Permission.UpdateFacet) ||\n        userPermissions.includes(Permission.UpdateCatalog),\n    isVisible: ({ injector }) => currentChannelIsNotDefault(injector.get(DataService)),\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\n        const modalService = injector.get(ModalService);\n        const dataService = injector.get(DataService);\n        const notificationService = injector.get(NotificationService);\n\n        const activeChannelId$ = dataService.client\n            .userStatus()\n            .mapSingle(({ userStatus }) => userStatus.activeChannelId);\n\n        function showModalAndDelete(facetIds: string[], message?: string) {\n            return modalService\n                .dialog({\n                    title: _('catalog.remove-from-channel'),\n                    translationVars: {\n                        count: selection.length,\n                    },\n                    size: message ? 'lg' : 'md',\n                    body: message,\n                    buttons: [\n                        { type: 'secondary', label: _('common.cancel') },\n                        {\n                            type: 'danger',\n                            label: message ? _('common.force-remove') : _('common.remove'),\n                            returnValue: true,\n                        },\n                    ],\n                })\n                .pipe(\n                    switchMap(res =>\n                        res\n                            ? activeChannelId$.pipe(\n                                  switchMap(activeChannelId =>\n                                      activeChannelId\n                                          ? dataService.facet.removeFacetsFromChannel({\n                                                channelId: activeChannelId,\n                                                facetIds,\n                                                force: !!message,\n                                            })\n                                          : EMPTY,\n                                  ),\n                                  map(res2 => res2.removeFacetsFromChannel),\n                              )\n                            : EMPTY,\n                    ),\n                );\n        }\n\n        showModalAndDelete(unique(selection.map(f => f.id)))\n            .pipe(\n                switchMap(result => {\n                    let removedCount = selection.length;\n                    const errors: string[] = [];\n                    const errorIds: string[] = [];\n                    let i = 0;\n                    for (const item of result) {\n                        if (item.__typename === 'FacetInUseError') {\n                            errors.push(item.message);\n                            errorIds.push(selection[i]?.id);\n                            removedCount--;\n                        }\n                        i++;\n                    }\n                    if (0 < errorIds.length) {\n                        return showModalAndDelete(errorIds, errors.join('\\n')).pipe(\n                            map(result2 => {\n                                const notRemovedCount = result2.filter(\n                                    r => r.__typename === 'FacetInUseError',\n                                ).length;\n                                return selection.length - notRemovedCount;\n                            }),\n                        );\n                    } else {\n                        return of(removedCount);\n                    }\n                }),\n                switchMap(removedCount =>\n                    removedCount\n                        ? getChannelCodeFromUserStatus(dataService).then(({ channelCode }) => ({\n                              channelCode,\n                              removedCount,\n                          }))\n                        : EMPTY,\n                ),\n            )\n            .subscribe(({ removedCount, channelCode }) => {\n                if (removedCount) {\n                    hostComponent.refresh();\n                    clearSelection();\n                    notificationService.success(_('catalog.notify-remove-facets-from-channel-success'), {\n                        count: removedCount,\n                        channelCode,\n                    });\n                }\n            });\n    },\n};\n","import { Component, ElementRef, EventEmitter, OnInit, Output, QueryList, ViewChildren } from '@angular/core';\nimport { CurrencyCode, DataService } from '@vendure/admin-ui/core';\nimport { generateAllCombinations } from '@vendure/common/lib/shared-utils';\n\nimport { OptionValueInputComponent } from '../option-value-input/option-value-input.component';\n\nconst DEFAULT_VARIANT_CODE = '__DEFAULT_VARIANT__';\nexport type CreateVariantValues = {\n    optionValues: string[];\n    enabled: boolean;\n    sku: string;\n    price: number;\n    stock: number;\n};\nexport type CreateProductVariantsConfig = {\n    groups: Array<{ name: string; values: string[] }>;\n    variants: CreateVariantValues[];\n};\n\n@Component({\n    selector: 'vdr-generate-product-variants',\n    templateUrl: './generate-product-variants.component.html',\n    styleUrls: ['./generate-product-variants.component.scss'],\n})\nexport class GenerateProductVariantsComponent implements OnInit {\n    @Output() variantsChange = new EventEmitter<CreateProductVariantsConfig>();\n    @ViewChildren('optionGroupName', { read: ElementRef }) groupNameInputs: QueryList<ElementRef>;\n    optionGroups: Array<{ name: string; values: Array<{ name: string; locked: boolean }> }> = [];\n    currencyCode: CurrencyCode;\n    variants: Array<{ id: string; values: string[] }>;\n    variantFormValues: { [id: string]: CreateVariantValues } = {};\n    constructor(private dataService: DataService) {}\n\n    ngOnInit() {\n        this.dataService.settings.getActiveChannel().single$.subscribe(data => {\n            this.currencyCode = data.activeChannel.currencyCode;\n        });\n\n        this.generateVariants();\n    }\n\n    addOption() {\n        this.optionGroups.push({ name: '', values: [] });\n        const index = this.optionGroups.length - 1;\n        setTimeout(() => {\n            const input = this.groupNameInputs.get(index)?.nativeElement;\n            input?.focus();\n        });\n    }\n\n    removeOption(name: string) {\n        this.optionGroups = this.optionGroups.filter(g => g.name !== name);\n        this.generateVariants();\n    }\n\n    generateVariants() {\n        const totalValuesCount = this.optionGroups.reduce((sum, group) => sum + group.values.length, 0);\n        const groups = totalValuesCount\n            ? this.optionGroups.map(g => g.values.map(v => v.name))\n            : [[DEFAULT_VARIANT_CODE]];\n        this.variants = generateAllCombinations(groups).map(values => ({ id: values.join('|'), values }));\n\n        this.variants.forEach(variant => {\n            if (!this.variantFormValues[variant.id]) {\n                this.variantFormValues[variant.id] = {\n                    optionValues: variant.values,\n                    enabled: true,\n                    price: this.copyFromDefault(variant.id, 'price', 0),\n                    sku: this.copyFromDefault(variant.id, 'sku', ''),\n                    stock: this.copyFromDefault(variant.id, 'stock', 0),\n                };\n            }\n        });\n        this.onFormChange();\n    }\n\n    trackByFn(index: number, variant: { name: string; values: string[] }) {\n        return variant.values.join('|');\n    }\n\n    handleEnter(event: KeyboardEvent, optionValueInputComponent: OptionValueInputComponent) {\n        event.preventDefault();\n        event.stopPropagation();\n        optionValueInputComponent.focus();\n    }\n\n    onFormChange() {\n        const variantsToCreate = this.variants.map(v => this.variantFormValues[v.id]).filter(v => v.enabled);\n        this.variantsChange.emit({\n            groups: this.optionGroups.map(og => ({ name: og.name, values: og.values.map(v => v.name) })),\n            variants: variantsToCreate,\n        });\n    }\n\n    private copyFromDefault<T extends keyof CreateVariantValues>(\n        variantId: string,\n        prop: T,\n        value: CreateVariantValues[T],\n    ): CreateVariantValues[T] {\n        return variantId !== DEFAULT_VARIANT_CODE\n            ? this.variantFormValues[DEFAULT_VARIANT_CODE][prop]\n            : value;\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    Provider,\n    QueryList,\n    SimpleChanges,\n    ViewChild,\n    ViewChildren,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { unique } from '@vendure/common/lib/unique';\n\nexport const OPTION_VALUE_INPUT_VALUE_ACCESSOR: Provider = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => OptionValueInputComponent),\n    multi: true,\n};\n\ninterface Option {\n    id?: string;\n    name: string;\n    locked: boolean;\n}\n\n@Component({\n    selector: 'vdr-option-value-input',\n    templateUrl: './option-value-input.component.html',\n    styleUrls: ['./option-value-input.component.scss'],\n    changeDetection: ChangeDetectionStrategy.Default,\n    providers: [OPTION_VALUE_INPUT_VALUE_ACCESSOR],\n})\nexport class OptionValueInputComponent implements ControlValueAccessor {\n    @Input() groupName = '';\n    @ViewChild('textArea', { static: true }) textArea: ElementRef<HTMLTextAreaElement>;\n    @ViewChildren('editNameInput', { read: ElementRef }) nameInputs: QueryList<ElementRef>;\n    @Input() options: Option[];\n    @Output() add = new EventEmitter<Option>();\n    @Output() remove = new EventEmitter<Option>();\n    @Output() edit = new EventEmitter<{ index: number; option: Option }>();\n    @Input() disabled = false;\n    input = '';\n    isFocussed = false;\n    lastSelected = false;\n    formValue: Option[];\n    editingIndex = -1;\n    onChangeFn: (value: any) => void;\n    onTouchFn: (value: any) => void;\n\n    get optionValues(): Option[] {\n        return this.formValue ?? this.options ?? [];\n    }\n\n    constructor(private changeDetector: ChangeDetectorRef) {}\n\n    registerOnChange(fn: any): void {\n        this.onChangeFn = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n        this.onTouchFn = fn;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this.changeDetector.markForCheck();\n    }\n\n    writeValue(obj: any): void {\n        this.formValue = obj || [];\n    }\n\n    focus() {\n        this.textArea.nativeElement.focus();\n    }\n\n    editName(index: number, event: MouseEvent) {\n        const optionValue = this.optionValues[index];\n        if (!optionValue.locked && !optionValue.id) {\n            event.cancelBubble = true;\n            this.editingIndex = index;\n            const input = this.nameInputs.get(index)?.nativeElement;\n            setTimeout(() => input?.focus());\n        }\n    }\n\n    updateOption(index: number, event: InputEvent) {\n        const optionValue = this.optionValues[index];\n        const newName = (event.target as HTMLInputElement).value;\n        if (optionValue) {\n            if (newName) {\n                optionValue.name = newName;\n                this.edit.emit({ index, option: optionValue });\n            }\n            this.editingIndex = -1;\n        }\n    }\n\n    removeOption(option: Option) {\n        if (!option.locked) {\n            if (this.formValue) {\n                this.formValue = this.formValue?.filter(o => o.name !== option.name);\n                this.onChangeFn(this.formValue);\n            } else {\n                this.remove.emit(option);\n            }\n        }\n    }\n\n    handleKey(event: KeyboardEvent) {\n        switch (event.key) {\n            case ',':\n            case 'Enter':\n                this.addOptionValue();\n                event.preventDefault();\n                break;\n            case 'Backspace':\n                if (this.lastSelected) {\n                    this.removeLastOption();\n                    this.lastSelected = false;\n                } else if (this.input === '') {\n                    this.lastSelected = true;\n                }\n                break;\n            default:\n                this.lastSelected = false;\n        }\n    }\n\n    handleBlur() {\n        this.isFocussed = false;\n        this.addOptionValue();\n    }\n\n    private addOptionValue() {\n        const options = this.parseInputIntoOptions(this.input).filter(option => {\n            // do not add an option with the same name\n            // as an existing option\n            const existing = this.options ?? this.formValue;\n            return !existing?.find(o => o?.name === option.name);\n        });\n        if (!this.formValue && this.options) {\n            for (const option of options) {\n                this.add.emit(option);\n            }\n        } else {\n            this.formValue = unique([...this.formValue, ...options]);\n            this.onChangeFn(this.formValue);\n        }\n        this.input = '';\n    }\n\n    private parseInputIntoOptions(input: string): Option[] {\n        return input\n            .split(/[,\\n]/)\n            .map(s => s.trim())\n            .filter(s => s !== '')\n            .map(s => ({ name: s, locked: false }));\n    }\n\n    private removeLastOption() {\n        if (this.optionValues.length) {\n            const option = this.optionValues[this.optionValues.length - 1];\n            this.removeOption(option);\n        }\n    }\n}\n","import { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    BulkAction,\n    currentChannelIsNotDefault,\n    DataService,\n    DeletionResult,\n    getChannelCodeFromUserStatus,\n    isMultiChannel,\n    ModalService,\n    NotificationService,\n    Permission,\n    SearchProducts,\n} from '@vendure/admin-ui/core';\nimport { unique } from '@vendure/common/lib/unique';\nimport { EMPTY, from, of } from 'rxjs';\nimport { mapTo, switchMap } from 'rxjs/operators';\n\nimport { AssignProductsToChannelDialogComponent } from '../assign-products-to-channel-dialog/assign-products-to-channel-dialog.component';\nimport { BulkAddFacetValuesDialogComponent } from '../bulk-add-facet-values-dialog/bulk-add-facet-values-dialog.component';\n\nimport { ProductListComponent } from './product-list.component';\n\nexport const deleteProductsBulkAction: BulkAction<SearchProducts.Items, ProductListComponent> = {\n    location: 'product-list',\n    label: _('common.delete'),\n    icon: 'trash',\n    iconClass: 'is-danger',\n    requiresPermission: userPermissions =>\n        userPermissions.includes(Permission.DeleteProduct) ||\n        userPermissions.includes(Permission.DeleteCatalog),\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\n        const modalService = injector.get(ModalService);\n        const dataService = injector.get(DataService);\n        const notificationService = injector.get(NotificationService);\n        modalService\n            .dialog({\n                title: _('catalog.confirm-bulk-delete-products'),\n                translationVars: {\n                    count: selection.length,\n                },\n                buttons: [\n                    { type: 'secondary', label: _('common.cancel') },\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\n                ],\n            })\n            .pipe(\n                switchMap(response =>\n                    response\n                        ? dataService.product.deleteProducts(unique(selection.map(p => p.productId)))\n                        : EMPTY,\n                ),\n            )\n            .subscribe(result => {\n                let deleted = 0;\n                const errors: string[] = [];\n                for (const item of result.deleteProducts) {\n                    if (item.result === DeletionResult.DELETED) {\n                        deleted++;\n                    } else if (item.message) {\n                        errors.push(item.message);\n                    }\n                }\n                if (0 < deleted) {\n                    notificationService.success(_('catalog.notify-bulk-delete-products-success'), {\n                        count: deleted,\n                    });\n                }\n                if (0 < errors.length) {\n                    notificationService.error(errors.join('\\n'));\n                }\n                hostComponent.refresh();\n                clearSelection();\n            });\n    },\n};\n\nexport const assignProductsToChannelBulkAction: BulkAction<SearchProducts.Items, ProductListComponent> = {\n    location: 'product-list',\n    label: _('catalog.assign-to-channel'),\n    icon: 'layers',\n    requiresPermission: userPermissions =>\n        userPermissions.includes(Permission.UpdateCatalog) ||\n        userPermissions.includes(Permission.UpdateProduct),\n    isVisible: ({ injector }) => isMultiChannel(injector.get(DataService)),\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\n        const modalService = injector.get(ModalService);\n        const dataService = injector.get(DataService);\n        const notificationService = injector.get(NotificationService);\n        modalService\n            .fromComponent(AssignProductsToChannelDialogComponent, {\n                size: 'lg',\n                locals: {\n                    productIds: unique(selection.map(p => p.productId)),\n                    currentChannelIds: [],\n                },\n            })\n            .subscribe(result => {\n                if (result) {\n                    clearSelection();\n                }\n            });\n    },\n};\n\nexport const removeProductsFromChannelBulkAction: BulkAction<SearchProducts.Items, ProductListComponent> = {\n    location: 'product-list',\n    label: _('catalog.remove-from-channel'),\n    requiresPermission: userPermissions =>\n        userPermissions.includes(Permission.UpdateChannel) ||\n        userPermissions.includes(Permission.UpdateProduct),\n    getTranslationVars: ({ injector }) => getChannelCodeFromUserStatus(injector.get(DataService)),\n    icon: 'layers',\n    iconClass: 'is-warning',\n    isVisible: ({ injector }) => currentChannelIsNotDefault(injector.get(DataService)),\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\n        const modalService = injector.get(ModalService);\n        const dataService = injector.get(DataService);\n        const notificationService = injector.get(NotificationService);\n        const activeChannelId$ = dataService.client\n            .userStatus()\n            .mapSingle(({ userStatus }) => userStatus.activeChannelId);\n\n        from(getChannelCodeFromUserStatus(injector.get(DataService)))\n            .pipe(\n                switchMap(({ channelCode }) =>\n                    modalService.dialog({\n                        title: _('catalog.remove-from-channel'),\n                        translationVars: {\n                            channelCode,\n                        },\n                        buttons: [\n                            { type: 'secondary', label: _('common.cancel') },\n                            {\n                                type: 'danger',\n                                label: _('common.remove'),\n                                returnValue: true,\n                            },\n                        ],\n                    }),\n                ),\n                switchMap(res =>\n                    res\n                        ? activeChannelId$.pipe(\n                              switchMap(activeChannelId =>\n                                  activeChannelId\n                                      ? dataService.product.removeProductsFromChannel({\n                                            channelId: activeChannelId,\n                                            productIds: selection.map(p => p.productId),\n                                        })\n                                      : EMPTY,\n                              ),\n                              mapTo(true),\n                          )\n                        : of(false),\n                ),\n            )\n            .subscribe(removed => {\n                if (removed) {\n                    clearSelection();\n                    notificationService.success(_('common.notify-remove-products-from-channel-success'), {\n                        count: selection.length,\n                    });\n                    setTimeout(() => hostComponent.refresh(), 1000);\n                }\n            });\n    },\n};\n\nexport const assignFacetValuesToProductsBulkAction: BulkAction<SearchProducts.Items, ProductListComponent> = {\n    location: 'product-list',\n    label: _('catalog.edit-facet-values'),\n    icon: 'tag',\n    requiresPermission: userPermissions =>\n        userPermissions.includes(Permission.UpdateCatalog) ||\n        userPermissions.includes(Permission.UpdateProduct),\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\n        const modalService = injector.get(ModalService);\n        const dataService = injector.get(DataService);\n        const notificationService = injector.get(NotificationService);\n        const mode: 'product' | 'variant' = hostComponent.groupByProduct ? 'product' : 'variant';\n        const ids =\n            mode === 'product'\n                ? unique(selection.map(p => p.productId))\n                : unique(selection.map(p => p.productVariantId));\n        return dataService.facet\n            .getAllFacets()\n            .mapSingle(data => data.facets.items)\n            .pipe(\n                switchMap(facets =>\n                    modalService.fromComponent(BulkAddFacetValuesDialogComponent, {\n                        size: 'xl',\n                        locals: {\n                            facets,\n                            mode,\n                            ids,\n                        },\n                    }),\n                ),\n            )\n            .subscribe(result => {\n                if (result) {\n                    notificationService.success(_('common.notify-bulk-update-success'), {\n                        count: selection.length,\n                        entity: mode === 'product' ? 'Products' : 'ProductVariants',\n                    });\n                    clearSelection();\n                }\n            });\n    },\n};\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport {\n    CustomFieldConfig,\n    LanguageCode,\n    ProductVariant,\n    UpdateProductOptionInput,\n} from '@vendure/admin-ui/core';\nimport { createUpdatedTranslatable } from '@vendure/admin-ui/core';\nimport { Dialog } from '@vendure/admin-ui/core';\nimport { normalizeString } from '@vendure/common/lib/normalize-string';\n\n@Component({\n    selector: 'vdr-update-product-option-dialog',\n    templateUrl: './update-product-option-dialog.component.html',\n    styleUrls: ['./update-product-option-dialog.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UpdateProductOptionDialogComponent\n    implements Dialog<UpdateProductOptionInput & { autoUpdate: boolean }>, OnInit {\n    resolveWith: (result?: UpdateProductOptionInput & { autoUpdate: boolean }) => void;\n    updateVariantName = true;\n    // Provided by caller\n    productOption: ProductVariant.Options;\n    activeLanguage: LanguageCode;\n    name: string;\n    code: string;\n    customFields: CustomFieldConfig[];\n    codeInputTouched = false;\n    customFieldsForm: FormGroup;\n\n    ngOnInit(): void {\n        const currentTranslation = this.productOption.translations.find(\n            t => t.languageCode === this.activeLanguage,\n        );\n        this.name = currentTranslation?.name ?? '';\n        this.code = this.productOption.code;\n        this.customFieldsForm = new FormGroup({});\n        if (this.customFields) {\n            const cfCurrentTranslation =\n                (currentTranslation && (currentTranslation as any).customFields) || {};\n\n            for (const fieldDef of this.customFields) {\n                const key = fieldDef.name;\n                const value =\n                    fieldDef.type === 'localeString'\n                        ? cfCurrentTranslation[key]\n                        : (this.productOption as any).customFields[key];\n                this.customFieldsForm.addControl(fieldDef.name, new FormControl(value));\n            }\n        }\n    }\n\n    update() {\n        const result = createUpdatedTranslatable({\n            translatable: this.productOption,\n            languageCode: this.activeLanguage,\n            updatedFields: {\n                code: this.code,\n                name: this.name,\n                customFields: this.customFieldsForm.value,\n            },\n            customFieldConfig: this.customFields,\n            defaultTranslation: {\n                languageCode: this.activeLanguage,\n                name: '',\n            },\n        });\n        this.resolveWith({ ...result, autoUpdate: this.updateVariantName });\n    }\n\n    cancel() {\n        this.resolveWith();\n    }\n\n    updateCode(nameValue: string) {\n        if (!this.codeInputTouched && !this.productOption.code) {\n            this.code = normalizeString(nameValue, '-');\n        }\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { FormArray, FormGroup } from '@angular/forms';\nimport {\n    CustomFieldConfig,\n    DataService,\n    FacetValue,\n    FacetWithValues,\n    flattenFacetValues,\n    GlobalFlag,\n    LanguageCode,\n    ModalService,\n    Permission,\n    ProductDetail,\n    ProductOptionFragment,\n    ProductVariant,\n    TaxCategory,\n    UpdateProductOptionInput,\n} from '@vendure/admin-ui/core';\nimport { DEFAULT_CHANNEL_CODE } from '@vendure/common/lib/shared-constants';\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\nimport { PaginationInstance } from 'ngx-pagination';\nimport { Subscription } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { AssetChange } from '../assets/assets.component';\nimport {\n    PaginationConfig,\n    SelectedAssets,\n    VariantFormValue,\n} from '../product-detail/product-detail.component';\nimport { UpdateProductOptionDialogComponent } from '../update-product-option-dialog/update-product-option-dialog.component';\n\nexport interface VariantAssetChange extends AssetChange {\n    variantId: string;\n}\n\n@Component({\n    selector: 'vdr-product-variants-list',\n    templateUrl: './product-variants-list.component.html',\n    styleUrls: ['./product-variants-list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductVariantsListComponent implements OnChanges, OnInit, OnDestroy {\n    @Input('productVariantsFormArray') formArray: FormArray;\n    @Input() variants: ProductVariant.Fragment[];\n    @Input() paginationConfig: PaginationConfig;\n    @Input() channelPriceIncludesTax: boolean;\n    @Input() taxCategories: TaxCategory[];\n    @Input() facets: FacetWithValues.Fragment[];\n    @Input() optionGroups: ProductDetail.OptionGroups[];\n    @Input() customFields: CustomFieldConfig[];\n    @Input() customOptionFields: CustomFieldConfig[];\n    @Input() activeLanguage: LanguageCode;\n    @Input() pendingAssetChanges: { [variantId: string]: SelectedAssets };\n    @Output() assignToChannel = new EventEmitter<ProductVariant.Fragment>();\n    @Output() removeFromChannel = new EventEmitter<{\n        channelId: string;\n        variant: ProductVariant.Fragment;\n    }>();\n    @Output() assetChange = new EventEmitter<VariantAssetChange>();\n    @Output() selectionChange = new EventEmitter<string[]>();\n    @Output() selectFacetValueClick = new EventEmitter<string[]>();\n    @Output() updateProductOption = new EventEmitter<UpdateProductOptionInput & { autoUpdate: boolean }>();\n    selectedVariantIds: string[] = [];\n    formGroupMap = new Map<string, FormGroup>();\n    GlobalFlag = GlobalFlag;\n    globalTrackInventory: boolean;\n    globalOutOfStockThreshold: number;\n    readonly updatePermission = [Permission.UpdateCatalog, Permission.UpdateProduct];\n    private facetValues: FacetValue.Fragment[];\n    private subscription: Subscription;\n\n    constructor(\n        private changeDetector: ChangeDetectorRef,\n        private modalService: ModalService,\n        private dataService: DataService,\n    ) {}\n\n    ngOnInit() {\n        this.dataService.settings.getGlobalSettings('cache-first').single$.subscribe(({ globalSettings }) => {\n            this.globalTrackInventory = globalSettings.trackInventory;\n            this.globalOutOfStockThreshold = globalSettings.outOfStockThreshold;\n            this.changeDetector.markForCheck();\n        });\n        this.subscription = this.formArray.valueChanges.subscribe(() => this.changeDetector.markForCheck());\n\n        this.subscription.add(\n            this.formArray.valueChanges\n                .pipe(\n                    map(value => value.length),\n                    debounceTime(1),\n                    distinctUntilChanged(),\n                )\n                .subscribe(() => {\n                    this.buildFormGroupMap();\n                }),\n        );\n\n        this.buildFormGroupMap();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if ('facets' in changes && !!changes['facets'].currentValue) {\n            this.facetValues = flattenFacetValues(this.facets);\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n    isDefaultChannel(channelCode: string): boolean {\n        return channelCode === DEFAULT_CHANNEL_CODE;\n    }\n\n    trackById(index: number, item: ProductVariant.Fragment) {\n        return item.id;\n    }\n\n    inventoryIsNotTracked(formGroup: FormGroup): boolean {\n        const trackInventory = formGroup.get('trackInventory')?.value;\n        return (\n            trackInventory === GlobalFlag.FALSE ||\n            (trackInventory === GlobalFlag.INHERIT && this.globalTrackInventory === false)\n        );\n    }\n\n    getTaxCategoryName(group: FormGroup): string {\n        const control = group.get(['taxCategoryId']);\n        if (control && this.taxCategories) {\n            const match = this.taxCategories.find(t => t.id === control.value);\n            return match ? match.name : '';\n        }\n        return '';\n    }\n\n    getStockOnHandMinValue(variant: FormGroup) {\n        const effectiveOutOfStockThreshold = variant.get('useGlobalOutOfStockThreshold')?.value\n            ? this.globalOutOfStockThreshold\n            : variant.get('outOfStockThreshold')?.value;\n        return effectiveOutOfStockThreshold;\n    }\n\n    getSaleableStockLevel(variant: ProductVariant.Fragment) {\n        const effectiveOutOfStockThreshold = variant.useGlobalOutOfStockThreshold\n            ? this.globalOutOfStockThreshold\n            : variant.outOfStockThreshold;\n        return variant.stockOnHand - variant.stockAllocated - effectiveOutOfStockThreshold;\n    }\n\n    areAllSelected(): boolean {\n        return !!this.variants && this.selectedVariantIds.length === this.variants.length;\n    }\n\n    onAssetChange(variantId: string, event: AssetChange) {\n        this.assetChange.emit({\n            variantId,\n            ...event,\n        });\n        const index = this.variants.findIndex(v => v.id === variantId);\n        this.formArray.at(index).markAsDirty();\n    }\n\n    toggleSelectAll() {\n        if (this.areAllSelected()) {\n            this.selectedVariantIds = [];\n        } else {\n            this.selectedVariantIds = this.variants.map(v => v.id);\n        }\n        this.selectionChange.emit(this.selectedVariantIds);\n    }\n\n    toggleSelectVariant(variantId: string) {\n        const index = this.selectedVariantIds.indexOf(variantId);\n        if (-1 < index) {\n            this.selectedVariantIds.splice(index, 1);\n        } else {\n            this.selectedVariantIds.push(variantId);\n        }\n        this.selectionChange.emit(this.selectedVariantIds);\n    }\n\n    optionGroupName(optionGroupId: string): string | undefined {\n        const group = this.optionGroups.find(g => g.id === optionGroupId);\n        if (group) {\n            const translation =\n                group?.translations.find(t => t.languageCode === this.activeLanguage) ??\n                group.translations[0];\n            return translation.name;\n        }\n    }\n\n    optionName(option: ProductOptionFragment) {\n        const translation =\n            option.translations.find(t => t.languageCode === this.activeLanguage) ?? option.translations[0];\n        return translation.name;\n    }\n\n    pendingFacetValues(variant: ProductVariant.Fragment) {\n        if (this.facets) {\n            const formFacetValueIds = this.getFacetValueIds(variant.id);\n            const variantFacetValueIds = variant.facetValues.map(fv => fv.id);\n            return formFacetValueIds\n                .filter(x => !variantFacetValueIds.includes(x))\n                .map(id => this.facetValues.find(fv => fv.id === id))\n                .filter(notNullOrUndefined);\n        } else {\n            return [];\n        }\n    }\n\n    existingFacetValues(variant: ProductVariant.Fragment) {\n        const formFacetValueIds = this.getFacetValueIds(variant.id);\n        const intersection = [...formFacetValueIds].filter(x =>\n            variant.facetValues.map(fv => fv.id).includes(x),\n        );\n        return intersection\n            .map(id => variant.facetValues.find(fv => fv.id === id))\n            .filter(notNullOrUndefined);\n    }\n\n    removeFacetValue(variant: ProductVariant.Fragment, facetValueId: string) {\n        const formGroup = this.formGroupMap.get(variant.id);\n        if (formGroup) {\n            const newValue = (formGroup.value as VariantFormValue).facetValueIds.filter(\n                id => id !== facetValueId,\n            );\n            formGroup.patchValue({\n                facetValueIds: newValue,\n            });\n            formGroup.markAsDirty();\n        }\n    }\n\n    isVariantSelected(variantId: string): boolean {\n        return -1 < this.selectedVariantIds.indexOf(variantId);\n    }\n\n    editOption(option: ProductVariant.Options) {\n        this.modalService\n            .fromComponent(UpdateProductOptionDialogComponent, {\n                size: 'md',\n                locals: {\n                    productOption: option,\n                    activeLanguage: this.activeLanguage,\n                    customFields: this.customOptionFields,\n                },\n            })\n            .subscribe(result => {\n                if (result) {\n                    this.updateProductOption.emit(result);\n                }\n            });\n    }\n\n    private buildFormGroupMap() {\n        this.formGroupMap.clear();\n        for (const controlGroup of this.formArray.controls) {\n            this.formGroupMap.set(controlGroup.value.id, controlGroup as FormGroup);\n        }\n        this.changeDetector.markForCheck();\n    }\n\n    private getFacetValueIds(id: string): string[] {\n        const formValue: VariantFormValue = this.formGroupMap.get(id)?.value;\n        return formValue.facetValueIds;\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Input,\n    OnDestroy,\n    OnInit,\n} from '@angular/core';\nimport { FormArray, FormGroup } from '@angular/forms';\nimport { Permission, ProductDetail, ProductVariant } from '@vendure/admin-ui/core';\nimport { Subscription } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { PaginationConfig, SelectedAssets } from '../product-detail/product-detail.component';\n\n@Component({\n    selector: 'vdr-product-variants-table',\n    templateUrl: './product-variants-table.component.html',\n    styleUrls: ['./product-variants-table.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductVariantsTableComponent implements OnInit, OnDestroy {\n    @Input('productVariantsFormArray') formArray: FormArray;\n    @Input() variants: ProductVariant.Fragment[];\n    @Input() paginationConfig: PaginationConfig;\n    @Input() channelPriceIncludesTax: boolean;\n    @Input() optionGroups: ProductDetail.OptionGroups[];\n    @Input() pendingAssetChanges: { [variantId: string]: SelectedAssets };\n    formGroupMap = new Map<string, FormGroup>();\n    readonly updatePermission = [Permission.UpdateCatalog, Permission.UpdateProduct];\n    private subscription: Subscription;\n\n    constructor(private changeDetector: ChangeDetectorRef) {}\n\n    ngOnInit() {\n        this.subscription = this.formArray.valueChanges\n            .pipe(\n                map(value => value.length),\n                debounceTime(1),\n                distinctUntilChanged(),\n            )\n            .subscribe(() => {\n                this.buildFormGroupMap();\n            });\n\n        this.buildFormGroupMap();\n    }\n\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n    trackByFn(index: number, item: any) {\n        if ((item as any).id != null) {\n            return (item as any).id;\n        } else {\n            return index;\n        }\n    }\n\n    getFeaturedAsset(variant: ProductVariant.Fragment) {\n        return this.pendingAssetChanges[variant.id]?.featuredAsset || variant.featuredAsset;\n    }\n\n    optionGroupName(optionGroupId: string): string | undefined {\n        const group = this.optionGroups.find(g => g.id === optionGroupId);\n        return group && group.name;\n    }\n\n    private buildFormGroupMap() {\n        this.formGroupMap.clear();\n        for (const controlGroup of this.formArray.controls) {\n            this.formGroupMap.set(controlGroup.value.id, controlGroup as FormGroup);\n        }\n        this.changeDetector.markForCheck();\n    }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { DataService } from '@vendure/admin-ui/core';\nimport { BehaviorSubject, combineLatest, Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n    selector: 'vdr-variant-price-detail',\n    templateUrl: './variant-price-detail.component.html',\n    styleUrls: ['./variant-price-detail.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class VariantPriceDetailComponent implements OnInit, OnChanges {\n    @Input() priceIncludesTax: boolean;\n    @Input() price: number;\n    @Input() currencyCode: string;\n    @Input() taxCategoryId: string;\n\n    grossPrice$: Observable<number>;\n    taxRate$: Observable<number>;\n\n    private priceChange$ = new BehaviorSubject<number>(0);\n    private taxCategoryIdChange$ = new BehaviorSubject<string>('');\n\n    constructor(private dataService: DataService) {}\n\n    ngOnInit() {\n        const taxRates$ = this.dataService.settings\n            .getTaxRatesSimple(999, 0, 'cache-first')\n            .mapStream(data => data.taxRates.items);\n        const activeChannel$ = this.dataService.settings\n            .getActiveChannel('cache-first')\n            .refetchOnChannelChange()\n            .mapStream(data => data.activeChannel);\n\n        this.taxRate$ = combineLatest(activeChannel$, taxRates$, this.taxCategoryIdChange$).pipe(\n            map(([channel, taxRates, taxCategoryId]) => {\n                const defaultTaxZone = channel.defaultTaxZone;\n                if (!defaultTaxZone) {\n                    return 0;\n                }\n                const applicableRate = taxRates.find(\n                    taxRate => taxRate.zone.id === defaultTaxZone.id && taxRate.category.id === taxCategoryId,\n                );\n\n                if (!applicableRate) {\n                    return 0;\n                }\n                return applicableRate.value;\n            }),\n        );\n\n        this.grossPrice$ = combineLatest(this.taxRate$, this.priceChange$).pipe(\n            map(([taxRate, price]) => {\n                return Math.round(price * ((100 + taxRate) / 100));\n            }),\n        );\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('price' in changes) {\n            this.priceChange$.next(changes.price.currentValue);\n        }\n        if ('taxCategoryId' in changes) {\n            this.taxCategoryIdChange$.next(changes.taxCategoryId.currentValue);\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { BulkActionRegistryService, SharedModule } from '@vendure/admin-ui/core';\n\nimport { catalogRoutes } from './catalog.routes';\nimport { ApplyFacetDialogComponent } from './components/apply-facet-dialog/apply-facet-dialog.component';\nimport { AssetDetailComponent } from './components/asset-detail/asset-detail.component';\nimport { AssetListComponent } from './components/asset-list/asset-list.component';\nimport { AssetsComponent } from './components/assets/assets.component';\nimport { AssignProductsToChannelDialogComponent } from './components/assign-products-to-channel-dialog/assign-products-to-channel-dialog.component';\nimport { AssignToChannelDialogComponent } from './components/assign-to-channel-dialog/assign-to-channel-dialog.component';\nimport { BulkAddFacetValuesDialogComponent } from './components/bulk-add-facet-values-dialog/bulk-add-facet-values-dialog.component';\nimport { CollectionContentsComponent } from './components/collection-contents/collection-contents.component';\nimport { CollectionDetailComponent } from './components/collection-detail/collection-detail.component';\nimport {\n    assignCollectionsToChannelBulkAction,\n    deleteCollectionsBulkAction,\n    removeCollectionsFromChannelBulkAction,\n} from './components/collection-list/collection-list-bulk-actions';\nimport { CollectionListComponent } from './components/collection-list/collection-list.component';\nimport { CollectionTreeNodeComponent } from './components/collection-tree/collection-tree-node.component';\nimport { CollectionTreeComponent } from './components/collection-tree/collection-tree.component';\nimport { ConfirmVariantDeletionDialogComponent } from './components/confirm-variant-deletion-dialog/confirm-variant-deletion-dialog.component';\nimport { FacetDetailComponent } from './components/facet-detail/facet-detail.component';\nimport {\n    assignFacetsToChannelBulkAction,\n    deleteFacetsBulkAction,\n    removeFacetsFromChannelBulkAction,\n} from './components/facet-list/facet-list-bulk-actions';\nimport { FacetListComponent } from './components/facet-list/facet-list.component';\nimport { GenerateProductVariantsComponent } from './components/generate-product-variants/generate-product-variants.component';\nimport { OptionValueInputComponent } from './components/option-value-input/option-value-input.component';\nimport { ProductDetailComponent } from './components/product-detail/product-detail.component';\nimport {\n    assignFacetValuesToProductsBulkAction,\n    assignProductsToChannelBulkAction,\n    deleteProductsBulkAction,\n    removeProductsFromChannelBulkAction,\n} from './components/product-list/product-list-bulk-actions';\nimport { ProductListComponent } from './components/product-list/product-list.component';\nimport { ProductOptionsEditorComponent } from './components/product-options-editor/product-options-editor.component';\nimport { ProductVariantsEditorComponent } from './components/product-variants-editor/product-variants-editor.component';\nimport { ProductVariantsListComponent } from './components/product-variants-list/product-variants-list.component';\nimport { ProductVariantsTableComponent } from './components/product-variants-table/product-variants-table.component';\nimport { UpdateProductOptionDialogComponent } from './components/update-product-option-dialog/update-product-option-dialog.component';\nimport { VariantPriceDetailComponent } from './components/variant-price-detail/variant-price-detail.component';\n\nconst CATALOG_COMPONENTS = [\n    ProductListComponent,\n    ProductDetailComponent,\n    FacetListComponent,\n    FacetDetailComponent,\n    GenerateProductVariantsComponent,\n    ProductVariantsListComponent,\n    ApplyFacetDialogComponent,\n    AssetListComponent,\n    AssetsComponent,\n    VariantPriceDetailComponent,\n    CollectionListComponent,\n    CollectionDetailComponent,\n    CollectionTreeComponent,\n    CollectionTreeNodeComponent,\n    CollectionContentsComponent,\n    ProductVariantsTableComponent,\n    OptionValueInputComponent,\n    UpdateProductOptionDialogComponent,\n    ProductVariantsEditorComponent,\n    AssignProductsToChannelDialogComponent,\n    AssetDetailComponent,\n    ConfirmVariantDeletionDialogComponent,\n    ProductOptionsEditorComponent,\n    BulkAddFacetValuesDialogComponent,\n    AssignToChannelDialogComponent,\n];\n\n@NgModule({\n    imports: [SharedModule, RouterModule.forChild(catalogRoutes)],\n    exports: [...CATALOG_COMPONENTS],\n    declarations: [...CATALOG_COMPONENTS],\n})\nexport class CatalogModule {\n    constructor(private bulkActionRegistryService: BulkActionRegistryService) {\n        bulkActionRegistryService.registerBulkAction(assignFacetValuesToProductsBulkAction);\n        bulkActionRegistryService.registerBulkAction(assignProductsToChannelBulkAction);\n        bulkActionRegistryService.registerBulkAction(removeProductsFromChannelBulkAction);\n        bulkActionRegistryService.registerBulkAction(deleteProductsBulkAction);\n\n        bulkActionRegistryService.registerBulkAction(assignFacetsToChannelBulkAction);\n        bulkActionRegistryService.registerBulkAction(removeFacetsFromChannelBulkAction);\n        bulkActionRegistryService.registerBulkAction(deleteFacetsBulkAction);\n\n        bulkActionRegistryService.registerBulkAction(assignCollectionsToChannelBulkAction);\n        bulkActionRegistryService.registerBulkAction(removeCollectionsFromChannelBulkAction);\n        bulkActionRegistryService.registerBulkAction(deleteCollectionsBulkAction);\n    }\n}\n","// This file was generated by the build-public-api.ts script\nexport * from './catalog.module';\nexport * from './catalog.routes';\nexport * from './components/apply-facet-dialog/apply-facet-dialog.component';\nexport * from './components/asset-detail/asset-detail.component';\nexport * from './components/asset-list/asset-list.component';\nexport * from './components/assets/assets.component';\nexport * from './components/assign-products-to-channel-dialog/assign-products-to-channel-dialog.component';\nexport * from './components/assign-to-channel-dialog/assign-to-channel-dialog.component';\nexport * from './components/bulk-add-facet-values-dialog/bulk-add-facet-values-dialog.component';\nexport * from './components/bulk-add-facet-values-dialog/bulk-add-facet-values-dialog.graphql';\nexport * from './components/collection-contents/collection-contents.component';\nexport * from './components/collection-detail/collection-detail.component';\nexport * from './components/collection-list/collection-list-bulk-actions';\nexport * from './components/collection-list/collection-list.component';\nexport * from './components/collection-tree/array-to-tree';\nexport * from './components/collection-tree/collection-tree-node.component';\nexport * from './components/collection-tree/collection-tree.component';\nexport * from './components/confirm-variant-deletion-dialog/confirm-variant-deletion-dialog.component';\nexport * from './components/facet-detail/facet-detail.component';\nexport * from './components/facet-list/facet-list-bulk-actions';\nexport * from './components/facet-list/facet-list.component';\nexport * from './components/generate-product-variants/generate-product-variants.component';\nexport * from './components/option-value-input/option-value-input.component';\nexport * from './components/product-detail/product-detail.component';\nexport * from './components/product-list/product-list-bulk-actions';\nexport * from './components/product-list/product-list.component';\nexport * from './components/product-options-editor/product-options-editor.component';\nexport * from './components/product-variants-editor/product-variants-editor.component';\nexport * from './components/product-variants-list/product-variants-list.component';\nexport * from './components/product-variants-table/product-variants-table.component';\nexport * from './components/update-product-option-dialog/update-product-option-dialog.component';\nexport * from './components/variant-price-detail/variant-price-detail.component';\nexport * from './providers/product-detail/product-detail.service';\nexport * from './providers/product-detail/replace-last';\nexport * from './providers/routing/asset-resolver';\nexport * from './providers/routing/collection-resolver';\nexport * from './providers/routing/facet-resolver';\nexport * from './providers/routing/product-resolver';\nexport * from './providers/routing/product-variants-resolver';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["_","SortOrder"],"mappings":"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"}