{"version":3,"file":"vendure-admin-ui-customer.umd.js","sources":["../../src/lib/customer/src/components/add-customer-to-group-dialog/add-customer-to-group-dialog.component.ts","../../src/lib/customer/src/components/address-detail-dialog/address-detail-dialog.component.ts","../../src/lib/customer/src/components/address-card/address-card.component.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/customer/src/components/select-customer-group-dialog/select-customer-group-dialog.component.ts","../../src/lib/customer/src/components/customer-detail/customer-detail.component.ts","../../src/lib/customer/src/components/customer-group-detail-dialog/customer-group-detail-dialog.component.ts","../../src/lib/customer/src/components/customer-group-list/customer-group-list.component.ts","../../src/lib/customer/src/components/customer-group-member-list/customer-group-member-list.component.ts","../../src/lib/customer/src/components/customer-history/customer-history.component.ts","../../src/lib/customer/src/components/customer-list/customer-list.component.ts","../../src/lib/customer/src/components/customer-status-label/customer-status-label.component.ts","../../src/lib/customer/src/providers/routing/customer-resolver.ts","../../src/lib/customer/src/customer.routes.ts","../../src/lib/customer/src/customer.module.ts","../../src/lib/customer/src/public_api.ts","../../src/lib/customer/src/vendure-admin-ui-customer.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { DataService, Dialog, GetCustomerGroups, GetCustomerList } from '@vendure/admin-ui/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\nimport { CustomerGroupMemberFetchParams } from '../customer-group-member-list/customer-group-member-list.component';\n\n@Component({\n    selector: 'vdr-add-customer-to-group-dialog',\n    templateUrl: './add-customer-to-group-dialog.component.html',\n    styleUrls: ['./add-customer-to-group-dialog.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AddCustomerToGroupDialogComponent implements Dialog<string[]>, OnInit {\n    resolveWith: (result?: string[]) => void;\n    group: GetCustomerGroups.Items;\n    route: ActivatedRoute;\n    selectedCustomerIds: string[] = [];\n    customers$: Observable<GetCustomerList.Items[]>;\n    customersTotal$: Observable<number>;\n    fetchGroupMembers$ = new BehaviorSubject<CustomerGroupMemberFetchParams>({\n        skip: 0,\n        take: 10,\n        filterTerm: '',\n    });\n\n    constructor(private dataService: DataService) {}\n\n    ngOnInit() {\n        const customerResult$ = this.fetchGroupMembers$.pipe(\n            switchMap(({ skip, take, filterTerm }) => {\n                return this.dataService.customer\n                    .getCustomerList(take, skip, filterTerm)\n                    .mapStream((res) => res.customers);\n            }),\n        );\n\n        this.customers$ = customerResult$.pipe(map((res) => res.items));\n        this.customersTotal$ = customerResult$.pipe(map((res) => res.totalItems));\n    }\n\n    cancel() {\n        this.resolveWith();\n    }\n\n    add() {\n        this.resolveWith(this.selectedCustomerIds);\n    }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { CustomFieldConfig, Dialog, GetAvailableCountries } from '@vendure/admin-ui/core';\n\n@Component({\n    selector: 'vdr-address-detail-dialog',\n    templateUrl: './address-detail-dialog.component.html',\n    styleUrls: ['./address-detail-dialog.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AddressDetailDialogComponent implements Dialog<FormGroup>, OnInit {\n    addressForm: FormGroup;\n    customFields: CustomFieldConfig;\n    availableCountries: GetAvailableCountries.Items[] = [];\n    resolveWith: (result?: FormGroup) => void;\n\n    constructor(private changeDetector: ChangeDetectorRef) {}\n\n    ngOnInit() {\n        this.addressForm.valueChanges.subscribe(() => this.changeDetector.markForCheck());\n    }\n\n    cancel() {\n        this.resolveWith();\n    }\n\n    save() {\n        this.resolveWith(this.addressForm);\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChanges,\n} from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { CustomFieldConfig, GetAvailableCountries, ModalService } from '@vendure/admin-ui/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\nimport { AddressDetailDialogComponent } from '../address-detail-dialog/address-detail-dialog.component';\n\n@Component({\n    selector: 'vdr-address-card',\n    templateUrl: './address-card.component.html',\n    styleUrls: ['./address-card.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AddressCardComponent implements OnInit, OnChanges {\n    @Input() addressForm: FormGroup;\n    @Input() customFields: CustomFieldConfig;\n    @Input() availableCountries: GetAvailableCountries.Items[] = [];\n    @Input() isDefaultBilling: string;\n    @Input() isDefaultShipping: string;\n    @Input() editable = true;\n    @Output() setAsDefaultShipping = new EventEmitter<string>();\n    @Output() setAsDefaultBilling = new EventEmitter<string>();\n    @Output() deleteAddress = new EventEmitter<string>();\n    private dataDependenciesPopulated = new BehaviorSubject<boolean>(false);\n\n    constructor(private modalService: ModalService, private changeDetector: ChangeDetectorRef) {}\n\n    ngOnInit(): void {\n        const streetLine1 = this.addressForm.get('streetLine1') as FormControl;\n        // Make the address dialog display automatically if there is no address line\n        // as is the case when adding a new address.\n        if (!streetLine1.value) {\n            this.dataDependenciesPopulated\n                .pipe(\n                    filter(value => value),\n                    take(1),\n                )\n                .subscribe(() => {\n                    this.editAddress();\n                });\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (this.customFields != null && this.availableCountries != null) {\n            this.dataDependenciesPopulated.next(true);\n        }\n    }\n\n    getCountryName(countryCode: string) {\n        if (!this.availableCountries) {\n            return '';\n        }\n        const match = this.availableCountries.find(c => c.code === countryCode);\n        return match ? match.name : '';\n    }\n\n    setAsDefaultBillingAddress() {\n        this.setAsDefaultBilling.emit(this.addressForm.value.id);\n        this.addressForm.markAsDirty();\n    }\n\n    setAsDefaultShippingAddress() {\n        this.setAsDefaultShipping.emit(this.addressForm.value.id);\n        this.addressForm.markAsDirty();\n    }\n\n    delete() {\n        this.deleteAddress.emit(this.addressForm.value.id);\n        this.addressForm.markAsDirty();\n    }\n\n    editAddress() {\n        this.modalService\n            .fromComponent(AddressDetailDialogComponent, {\n                locals: {\n                    addressForm: this.addressForm,\n                    customFields: this.customFields,\n                    availableCountries: this.availableCountries,\n                },\n                size: 'md',\n                closable: true,\n            })\n            .subscribe(() => {\n                this.changeDetector.markForCheck();\n            });\n    }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { DataService, Dialog, GetCustomerGroups, GetCustomerList } from '@vendure/admin-ui/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\n@Component({\n    selector: 'vdr-select-customer-group-dialog',\n    templateUrl: './select-customer-group-dialog.component.html',\n    styleUrls: ['./select-customer-group-dialog.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SelectCustomerGroupDialogComponent implements Dialog<string[]>, OnInit {\n    resolveWith: (result?: string[]) => void;\n    groups$: Observable<GetCustomerGroups.Items[]>;\n    selectedGroupIds: string[] = [];\n\n    constructor(private dataService: DataService) {}\n\n    ngOnInit() {\n        this.groups$ = this.dataService.customer\n            .getCustomerGroupList()\n            .mapStream((res) => res.customerGroups.items);\n    }\n\n    cancel() {\n        this.resolveWith();\n    }\n\n    add() {\n        this.resolveWith(this.selectedGroupIds);\n    }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    BaseDetailComponent,\n    CreateAddressInput,\n    CreateCustomerAddress,\n    CreateCustomerAddressMutation,\n    CreateCustomerInput,\n    Customer,\n    CustomFieldConfig,\n    DataService,\n    DeleteCustomerAddress,\n    EditNoteDialogComponent,\n    GetAvailableCountries,\n    GetCustomer,\n    GetCustomerHistory,\n    GetCustomerQuery,\n    HistoryEntry,\n    ModalService,\n    NotificationService,\n    ServerConfigService,\n    SortOrder,\n    UpdateCustomer,\n    UpdateCustomerAddress,\n    UpdateCustomerAddressMutation,\n    UpdateCustomerInput,\n    UpdateCustomerMutation,\n} from '@vendure/admin-ui/core';\nimport { assertNever, notNullOrUndefined } from '@vendure/common/lib/shared-utils';\nimport { EMPTY, forkJoin, from, Observable, Subject } from 'rxjs';\nimport {\n    concatMap,\n    filter,\n    map,\n    merge,\n    mergeMap,\n    shareReplay,\n    startWith,\n    switchMap,\n    take,\n} from 'rxjs/operators';\n\nimport { SelectCustomerGroupDialogComponent } from '../select-customer-group-dialog/select-customer-group-dialog.component';\n\ntype CustomerWithOrders = NonNullable<GetCustomerQuery['customer']>;\n\n@Component({\n    selector: 'vdr-customer-detail',\n    templateUrl: './customer-detail.component.html',\n    styleUrls: ['./customer-detail.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CustomerDetailComponent\n    extends BaseDetailComponent<CustomerWithOrders>\n    implements OnInit, OnDestroy\n{\n    detailForm: FormGroup;\n    customFields: CustomFieldConfig[];\n    addressCustomFields: CustomFieldConfig[];\n    availableCountries$: Observable<GetAvailableCountries.Items[]>;\n    orders$: Observable<GetCustomer.Items[]>;\n    ordersCount$: Observable<number>;\n    history$: Observable<GetCustomerHistory.Items[] | undefined>;\n    fetchHistory = new Subject<void>();\n    defaultShippingAddressId: string;\n    defaultBillingAddressId: string;\n    addressesToDeleteIds = new Set<string>();\n    addressDefaultsUpdated = false;\n    ordersPerPage = 10;\n    currentOrdersPage = 1;\n    private orderListUpdates$ = new Subject<CustomerWithOrders>();\n\n    constructor(\n        route: ActivatedRoute,\n        router: Router,\n        serverConfigService: ServerConfigService,\n        private changeDetector: ChangeDetectorRef,\n        private formBuilder: FormBuilder,\n        protected dataService: DataService,\n        private modalService: ModalService,\n        private notificationService: NotificationService,\n    ) {\n        super(route, router, serverConfigService, dataService);\n\n        this.customFields = this.getCustomFieldConfig('Customer');\n        this.addressCustomFields = this.getCustomFieldConfig('Address');\n        this.detailForm = this.formBuilder.group({\n            customer: this.formBuilder.group({\n                title: '',\n                firstName: ['', Validators.required],\n                lastName: ['', Validators.required],\n                phoneNumber: '',\n                emailAddress: ['', [Validators.required, Validators.email]],\n                password: '',\n                customFields: this.formBuilder.group(\n                    this.customFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}),\n                ),\n            }),\n            addresses: new FormArray([]),\n        });\n    }\n\n    ngOnInit() {\n        this.init();\n        this.availableCountries$ = this.dataService.settings\n            .getAvailableCountries()\n            .mapSingle(result => result.countries.items)\n            .pipe(shareReplay(1));\n\n        const customerWithUpdates$ = this.entity$.pipe(merge(this.orderListUpdates$));\n        this.orders$ = customerWithUpdates$.pipe(map(customer => customer.orders.items));\n        this.ordersCount$ = this.entity$.pipe(map(customer => customer.orders.totalItems));\n        this.history$ = this.fetchHistory.pipe(\n            startWith(null),\n            switchMap(() => {\n                return this.dataService.customer\n                    .getCustomerHistory(this.id, {\n                        sort: {\n                            createdAt: SortOrder.DESC,\n                        },\n                    })\n                    .mapStream(data => data.customer?.history.items);\n            }),\n        );\n    }\n\n    ngOnDestroy() {\n        this.destroy();\n        this.orderListUpdates$.complete();\n    }\n\n    getAddressFormControls(): FormControl[] {\n        const formArray = this.detailForm.get(['addresses']) as FormArray;\n        return formArray.controls as FormControl[];\n    }\n\n    setDefaultBillingAddressId(id: string) {\n        this.defaultBillingAddressId = id;\n        this.addressDefaultsUpdated = true;\n    }\n\n    setDefaultShippingAddressId(id: string) {\n        this.defaultShippingAddressId = id;\n        this.addressDefaultsUpdated = true;\n    }\n\n    toggleDeleteAddress(id: string) {\n        if (this.addressesToDeleteIds.has(id)) {\n            this.addressesToDeleteIds.delete(id);\n        } else {\n            this.addressesToDeleteIds.add(id);\n        }\n    }\n\n    addAddress() {\n        const addressFormArray = this.detailForm.get('addresses') as FormArray;\n        const newAddress = this.formBuilder.group({\n            fullName: '',\n            company: '',\n            streetLine1: ['', Validators.required],\n            streetLine2: '',\n            city: '',\n            province: '',\n            postalCode: '',\n            countryCode: ['', Validators.required],\n            phoneNumber: '',\n            defaultShippingAddress: false,\n            defaultBillingAddress: false,\n        });\n        if (this.addressCustomFields.length) {\n            const customFieldsGroup = this.formBuilder.group({});\n            for (const fieldDef of this.addressCustomFields) {\n                customFieldsGroup.addControl(fieldDef.name, new FormControl(''));\n            }\n            newAddress.addControl('customFields', customFieldsGroup);\n        }\n        addressFormArray.push(newAddress);\n    }\n\n    setOrderItemsPerPage(itemsPerPage: number) {\n        this.ordersPerPage = +itemsPerPage;\n        this.fetchOrdersList();\n    }\n\n    setOrderCurrentPage(page: number) {\n        this.currentOrdersPage = +page;\n        this.fetchOrdersList();\n    }\n\n    create() {\n        const customerForm = this.detailForm.get('customer');\n        if (!customerForm) {\n            return;\n        }\n        const formValue = customerForm.value;\n        const customFields = customerForm.get('customFields')?.value;\n        const customer: CreateCustomerInput = {\n            title: formValue.title,\n            emailAddress: formValue.emailAddress,\n            firstName: formValue.firstName,\n            lastName: formValue.lastName,\n            phoneNumber: formValue.phoneNumber,\n            customFields,\n        };\n        this.dataService.customer\n            .createCustomer(customer, formValue.password)\n            .subscribe(({ createCustomer }) => {\n                switch (createCustomer.__typename) {\n                    case 'Customer':\n                        this.notificationService.success(_('common.notify-create-success'), {\n                            entity: 'Customer',\n                        });\n                        if (createCustomer.emailAddress && !formValue.password) {\n                            this.notificationService.notify({\n                                message: _('customer.email-verification-sent'),\n                                translationVars: { emailAddress: formValue.emailAddress },\n                                type: 'info',\n                                duration: 10000,\n                            });\n                        }\n                        this.detailForm.markAsPristine();\n                        this.addressDefaultsUpdated = false;\n                        this.changeDetector.markForCheck();\n                        this.router.navigate(['../', createCustomer.id], { relativeTo: this.route });\n                        break;\n                    case 'EmailAddressConflictError':\n                        this.notificationService.error(createCustomer.message);\n                }\n            });\n    }\n\n    save() {\n        this.entity$\n            .pipe(\n                take(1),\n                mergeMap(({ id }) => {\n                    const saveOperations: Array<\n                        Observable<\n                            | UpdateCustomer.UpdateCustomer\n                            | CreateCustomerAddress.CreateCustomerAddress\n                            | UpdateCustomerAddress.UpdateCustomerAddress\n                            | DeleteCustomerAddress.DeleteCustomerAddress\n                        >\n                    > = [];\n                    const customerForm = this.detailForm.get('customer');\n                    if (customerForm && customerForm.dirty) {\n                        const formValue = customerForm.value;\n                        const customFields = customerForm.get('customFields')?.value;\n                        const customer: UpdateCustomerInput = {\n                            id,\n                            title: formValue.title,\n                            emailAddress: formValue.emailAddress,\n                            firstName: formValue.firstName,\n                            lastName: formValue.lastName,\n                            phoneNumber: formValue.phoneNumber,\n                            customFields,\n                        };\n                        saveOperations.push(\n                            this.dataService.customer\n                                .updateCustomer(customer)\n                                .pipe(map(res => res.updateCustomer)),\n                        );\n                    }\n                    const addressFormArray = this.detailForm.get('addresses') as FormArray;\n                    if ((addressFormArray && addressFormArray.dirty) || this.addressDefaultsUpdated) {\n                        for (const addressControl of addressFormArray.controls) {\n                            if (addressControl.dirty || this.addressDefaultsUpdated) {\n                                const address = addressControl.value;\n                                const input: CreateAddressInput = {\n                                    fullName: address.fullName,\n                                    company: address.company,\n                                    streetLine1: address.streetLine1,\n                                    streetLine2: address.streetLine2,\n                                    city: address.city,\n                                    province: address.province,\n                                    postalCode: address.postalCode,\n                                    countryCode: address.countryCode,\n                                    phoneNumber: address.phoneNumber,\n                                    defaultShippingAddress: this.defaultShippingAddressId === address.id,\n                                    defaultBillingAddress: this.defaultBillingAddressId === address.id,\n                                    customFields: address.customFields,\n                                };\n                                if (!address.id) {\n                                    saveOperations.push(\n                                        this.dataService.customer\n                                            .createCustomerAddress(id, input)\n                                            .pipe(map(res => res.createCustomerAddress)),\n                                    );\n                                } else {\n                                    if (this.addressesToDeleteIds.has(address.id)) {\n                                        saveOperations.push(\n                                            this.dataService.customer\n                                                .deleteCustomerAddress(address.id)\n                                                .pipe(map(res => res.deleteCustomerAddress)),\n                                        );\n                                    } else {\n                                        saveOperations.push(\n                                            this.dataService.customer\n                                                .updateCustomerAddress({\n                                                    ...input,\n                                                    id: address.id,\n                                                })\n                                                .pipe(map(res => res.updateCustomerAddress)),\n                                        );\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    return forkJoin(saveOperations);\n                }),\n            )\n            .subscribe(\n                data => {\n                    let notified = false;\n                    for (const result of data) {\n                        switch (result.__typename) {\n                            case 'Customer':\n                            case 'Address':\n                            case 'Success':\n                                if (!notified) {\n                                    this.notificationService.success(_('common.notify-update-success'), {\n                                        entity: 'Customer',\n                                    });\n                                    notified = true;\n                                    this.detailForm.markAsPristine();\n                                    this.addressDefaultsUpdated = false;\n                                    this.changeDetector.markForCheck();\n                                    this.fetchHistory.next();\n                                    this.dataService.customer.getCustomer(this.id).single$.subscribe();\n                                }\n                                break;\n                            case 'EmailAddressConflictError':\n                                this.notificationService.error(result.message);\n                                break;\n                        }\n                    }\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-update-error'), {\n                        entity: 'Customer',\n                    });\n                },\n            );\n    }\n\n    addToGroup() {\n        this.modalService\n            .fromComponent(SelectCustomerGroupDialogComponent, {\n                size: 'md',\n            })\n            .pipe(\n                switchMap(groupIds => (groupIds ? from(groupIds) : EMPTY)),\n                concatMap(groupId => this.dataService.customer.addCustomersToGroup(groupId, [this.id])),\n            )\n            .subscribe({\n                next: res => {\n                    this.notificationService.success(_(`customer.add-customers-to-group-success`), {\n                        customerCount: 1,\n                        groupName: res.addCustomersToGroup.name,\n                    });\n                },\n                complete: () => {\n                    this.dataService.customer.getCustomer(this.id, { take: 0 }).single$.subscribe();\n                    this.fetchHistory.next();\n                },\n            });\n    }\n\n    removeFromGroup(group: GetCustomer.Groups) {\n        this.modalService\n            .dialog({\n                title: _('customer.confirm-remove-customer-from-group'),\n                buttons: [\n                    { type: 'secondary', label: _('common.cancel') },\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\n                ],\n            })\n            .pipe(\n                switchMap(response =>\n                    response\n                        ? this.dataService.customer.removeCustomersFromGroup(group.id, [this.id])\n                        : EMPTY,\n                ),\n                switchMap(() => this.dataService.customer.getCustomer(this.id, { take: 0 }).single$),\n            )\n            .subscribe(result => {\n                this.notificationService.success(_(`customer.remove-customers-from-group-success`), {\n                    customerCount: 1,\n                    groupName: group.name,\n                });\n                this.fetchHistory.next();\n            });\n    }\n\n    addNoteToCustomer({ note }: { note: string }) {\n        this.dataService.customer.addNoteToCustomer(this.id, note).subscribe(() => {\n            this.fetchHistory.next();\n            this.notificationService.success(_('common.notify-create-success'), {\n                entity: 'Note',\n            });\n        });\n    }\n\n    updateNote(entry: HistoryEntry) {\n        this.modalService\n            .fromComponent(EditNoteDialogComponent, {\n                closable: true,\n                locals: {\n                    displayPrivacyControls: false,\n                    note: entry.data.note,\n                },\n            })\n            .pipe(\n                switchMap(result => {\n                    if (result) {\n                        return this.dataService.customer.updateCustomerNote({\n                            noteId: entry.id,\n                            note: result.note,\n                        });\n                    } else {\n                        return EMPTY;\n                    }\n                }),\n            )\n            .subscribe(result => {\n                this.fetchHistory.next();\n                this.notificationService.success(_('common.notify-update-success'), {\n                    entity: 'Note',\n                });\n            });\n    }\n\n    deleteNote(entry: HistoryEntry) {\n        return this.modalService\n            .dialog({\n                title: _('common.confirm-delete-note'),\n                body: entry.data.note,\n                buttons: [\n                    { type: 'secondary', label: _('common.cancel') },\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\n                ],\n            })\n            .pipe(switchMap(res => (res ? this.dataService.customer.deleteCustomerNote(entry.id) : EMPTY)))\n            .subscribe(() => {\n                this.fetchHistory.next();\n                this.notificationService.success(_('common.notify-delete-success'), {\n                    entity: 'Note',\n                });\n            });\n    }\n\n    protected setFormValues(entity: CustomerWithOrders): void {\n        const customerGroup = this.detailForm.get('customer');\n        if (customerGroup) {\n            customerGroup.patchValue({\n                title: entity.title,\n                firstName: entity.firstName,\n                lastName: entity.lastName,\n                phoneNumber: entity.phoneNumber,\n                emailAddress: entity.emailAddress,\n            });\n        }\n\n        if (entity.addresses) {\n            const addressesArray = new FormArray([]);\n            for (const address of entity.addresses) {\n                const { customFields, ...rest } = address as any;\n                const addressGroup = this.formBuilder.group({\n                    ...rest,\n                    countryCode: address.country.code,\n                });\n                addressesArray.push(addressGroup);\n                if (address.defaultShippingAddress) {\n                    this.defaultShippingAddressId = address.id;\n                }\n                if (address.defaultBillingAddress) {\n                    this.defaultBillingAddressId = address.id;\n                }\n\n                if (this.addressCustomFields.length) {\n                    const customFieldsGroup = this.formBuilder.group({});\n                    for (const fieldDef of this.addressCustomFields) {\n                        const key = fieldDef.name;\n                        const value = (address as any).customFields?.[key];\n                        const control = new FormControl(value);\n                        customFieldsGroup.addControl(key, control);\n                    }\n                    addressGroup.addControl('customFields', customFieldsGroup);\n                }\n            }\n            this.detailForm.setControl('addresses', addressesArray);\n        }\n\n        if (this.customFields.length) {\n            this.setCustomFieldFormValues(\n                this.customFields,\n                this.detailForm.get(['customer', 'customFields']),\n                entity,\n            );\n        }\n        this.changeDetector.markForCheck();\n    }\n\n    /**\n     * Refetch the customer with the current order list settings.\n     */\n    private fetchOrdersList() {\n        this.dataService.customer\n            .getCustomer(this.id, {\n                take: this.ordersPerPage,\n                skip: (this.currentOrdersPage - 1) * this.ordersPerPage,\n            })\n            .single$.pipe(\n                map(data => data.customer),\n                filter(notNullOrUndefined),\n            )\n            .subscribe(result => this.orderListUpdates$.next(result));\n    }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport {\n    CreateCustomerGroupInput,\n    CustomFieldConfig,\n    Dialog,\n    ServerConfigService,\n    UpdateCustomerGroupInput,\n} from '@vendure/admin-ui/core';\n\n@Component({\n    selector: 'vdr-customer-group-detail-dialog',\n    templateUrl: './customer-group-detail-dialog.component.html',\n    styleUrls: ['./customer-group-detail-dialog.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CustomerGroupDetailDialogComponent implements Dialog<CreateCustomerGroupInput>, OnInit {\n    group: { id?: string; name: string; customFields?: { [name: string]: any } };\n    resolveWith: (result?: CreateCustomerGroupInput) => void;\n    customFields: CustomFieldConfig[];\n    form: FormGroup;\n\n    constructor(private serverConfigService: ServerConfigService, private formBuilder: FormBuilder) {\n        this.customFields = this.serverConfigService.getCustomFieldsFor('CustomerGroup');\n    }\n\n    ngOnInit() {\n        this.form = this.formBuilder.group({\n            name: [this.group.name, Validators.required],\n            customFields: this.formBuilder.group(\n                this.customFields.reduce((hash, field) => ({ ...hash, [field.name]: '' }), {}),\n            ),\n        });\n        if (this.customFields.length) {\n            const customFieldsGroup = this.form.get('customFields') as FormGroup;\n\n            for (const fieldDef of this.customFields) {\n                const key = fieldDef.name;\n                const value = this.group.customFields?.[key];\n                const control = customFieldsGroup.get(key);\n                if (control) {\n                    control.patchValue(value);\n                }\n            }\n        }\n    }\n\n    cancel() {\n        this.resolveWith();\n    }\n\n    save() {\n        this.resolveWith(this.form.value);\n    }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    BaseListComponent,\n    DataService,\n    DeletionResult,\n    GetCustomerGroups,\n    GetCustomerGroupsQuery,\n    GetCustomerGroupWithCustomers,\n    GetZones,\n    LogicalOperator,\n    ModalService,\n    NotificationService,\n} from '@vendure/admin-ui/core';\nimport { SortOrder } from '@vendure/common/lib/generated-shop-types';\nimport { BehaviorSubject, combineLatest, EMPTY, Observable, of } from 'rxjs';\nimport {\n    debounceTime,\n    distinctUntilChanged,\n    filter,\n    map,\n    mapTo,\n    switchMap,\n    takeUntil,\n    tap,\n} from 'rxjs/operators';\n\nimport { AddCustomerToGroupDialogComponent } from '../add-customer-to-group-dialog/add-customer-to-group-dialog.component';\nimport { CustomerGroupDetailDialogComponent } from '../customer-group-detail-dialog/customer-group-detail-dialog.component';\nimport { CustomerGroupMemberFetchParams } from '../customer-group-member-list/customer-group-member-list.component';\n\n@Component({\n    selector: 'vdr-customer-group-list',\n    templateUrl: './customer-group-list.component.html',\n    styleUrls: ['./customer-group-list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CustomerGroupListComponent\n    extends BaseListComponent<\n        GetCustomerGroupsQuery,\n        GetCustomerGroupsQuery['customerGroups']['items'][number]\n    >\n    implements OnInit\n{\n    searchTerm = new FormControl('');\n    activeGroup$: Observable<GetCustomerGroups.Items | undefined>;\n    activeGroupId: string | undefined;\n    listIsEmpty$: Observable<boolean>;\n    members$: Observable<GetCustomerGroupWithCustomers.Items[]>;\n    membersTotal$: Observable<number>;\n    selectedCustomerIds: string[] = [];\n    fetchGroupMembers$ = new BehaviorSubject<CustomerGroupMemberFetchParams>({\n        skip: 0,\n        take: 0,\n        filterTerm: '',\n    });\n    private refreshActiveGroupMembers$ = new BehaviorSubject<void>(undefined);\n\n    constructor(\n        private dataService: DataService,\n        private notificationService: NotificationService,\n        private modalService: ModalService,\n        public route: ActivatedRoute,\n        protected router: Router,\n    ) {\n        super(router, route);\n        super.setQueryFn(\n            (...args: any[]) =>\n                this.dataService.customer.getCustomerGroupList(...args).refetchOnChannelChange(),\n            data => data.customerGroups,\n            (skip, take) => ({\n                options: {\n                    skip,\n                    take,\n                    filter: {\n                        name: { contains: this.searchTerm.value },\n                    },\n                },\n            }),\n        );\n    }\n\n    ngOnInit(): void {\n        super.ngOnInit();\n        this.searchTerm.valueChanges\n            .pipe(\n                filter(value => 2 < value.length || value.length === 0),\n                debounceTime(250),\n                takeUntil(this.destroy$),\n            )\n            .subscribe(() => this.refresh());\n        const activeGroupId$ = this.route.paramMap.pipe(\n            map(pm => pm.get('contents')),\n            distinctUntilChanged(),\n            tap(() => (this.selectedCustomerIds = [])),\n        );\n        this.listIsEmpty$ = this.items$.pipe(map(groups => groups.length === 0));\n        this.activeGroup$ = combineLatest(this.items$, activeGroupId$).pipe(\n            map(([groups, activeGroupId]) => {\n                if (activeGroupId) {\n                    return groups.find(g => g.id === activeGroupId);\n                }\n            }),\n            tap(val => (this.activeGroupId = val?.id)),\n        );\n        const membersResult$ = combineLatest(\n            this.activeGroup$,\n            this.fetchGroupMembers$,\n            this.refreshActiveGroupMembers$,\n        ).pipe(\n            switchMap(([activeGroup, { skip, take, filterTerm }]) => {\n                if (activeGroup) {\n                    return this.dataService.customer\n                        .getCustomerGroupWithCustomers(activeGroup.id, {\n                            skip,\n                            take,\n                            filter: {\n                                emailAddress: {\n                                    contains: filterTerm,\n                                },\n                            },\n                        })\n                        .mapStream(res => res.customerGroup?.customers);\n                } else {\n                    return of(undefined);\n                }\n            }),\n        );\n\n        this.members$ = membersResult$.pipe(map(res => res?.items ?? []));\n        this.membersTotal$ = membersResult$.pipe(map(res => res?.totalItems ?? 0));\n    }\n\n    create() {\n        this.modalService\n            .fromComponent(CustomerGroupDetailDialogComponent, { locals: { group: { name: '' } } })\n            .pipe(\n                switchMap(result =>\n                    result\n                        ? this.dataService.customer.createCustomerGroup({ ...result, customerIds: [] })\n                        : EMPTY,\n                ),\n            )\n            .subscribe(\n                () => {\n                    this.refresh();\n                    this.notificationService.success(_('common.notify-create-success'), {\n                        entity: 'CustomerGroup',\n                    });\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-create-error'), {\n                        entity: 'CustomerGroup',\n                    });\n                },\n            );\n    }\n\n    delete(groupId: string) {\n        this.modalService\n            .dialog({\n                title: _('customer.confirm-delete-customer-group'),\n                buttons: [\n                    { type: 'secondary', label: _('common.cancel') },\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\n                ],\n            })\n            .pipe(\n                switchMap(response =>\n                    response ? this.dataService.customer.deleteCustomerGroup(groupId) : EMPTY,\n                ),\n\n                switchMap(result => {\n                    if (result.deleteCustomerGroup.result === DeletionResult.DELETED) {\n                        // refresh list\n                        return this.dataService.customer\n                            .getCustomerGroupList()\n                            .mapSingle(() => ({ errorMessage: false }));\n                    } else {\n                        return of({ errorMessage: result.deleteCustomerGroup.message });\n                    }\n                }),\n            )\n            .subscribe(\n                result => {\n                    if (typeof result.errorMessage === 'string') {\n                        this.notificationService.error(result.errorMessage);\n                    } else {\n                        this.refresh();\n                        this.notificationService.success(_('common.notify-delete-success'), {\n                            entity: 'CustomerGroup',\n                        });\n                    }\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-delete-error'), {\n                        entity: 'CustomerGroup',\n                    });\n                },\n            );\n    }\n\n    update(group: GetCustomerGroups.Items) {\n        this.modalService\n            .fromComponent(CustomerGroupDetailDialogComponent, { locals: { group } })\n            .pipe(\n                switchMap(result =>\n                    result\n                        ? this.dataService.customer.updateCustomerGroup({ id: group.id, ...result })\n                        : EMPTY,\n                ),\n            )\n            .subscribe(\n                () => {\n                    this.refresh();\n                    this.notificationService.success(_('common.notify-update-success'), {\n                        entity: 'CustomerGroup',\n                    });\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-update-error'), {\n                        entity: 'CustomerGroup',\n                    });\n                },\n            );\n    }\n\n    closeMembers() {\n        const params = { ...this.route.snapshot.params };\n        delete params.contents;\n        this.router.navigate(['./', params], { relativeTo: this.route, queryParamsHandling: 'preserve' });\n    }\n\n    addToGroup(group: GetCustomerGroupWithCustomers.CustomerGroup) {\n        this.modalService\n            .fromComponent(AddCustomerToGroupDialogComponent, {\n                locals: {\n                    group,\n                    route: this.route,\n                },\n                size: 'md',\n                verticalAlign: 'top',\n            })\n            .pipe(\n                switchMap(customerIds =>\n                    customerIds\n                        ? this.dataService.customer\n                              .addCustomersToGroup(group.id, customerIds)\n                              .pipe(mapTo(customerIds))\n                        : EMPTY,\n                ),\n            )\n            .subscribe({\n                next: result => {\n                    this.notificationService.success(_(`customer.add-customers-to-group-success`), {\n                        customerCount: result.length,\n                        groupName: group.name,\n                    });\n                    this.refreshActiveGroupMembers$.next();\n                    this.selectedCustomerIds = [];\n                },\n            });\n    }\n\n    removeFromGroup(group: GetZones.Zones, customerIds: string[]) {\n        this.dataService.customer.removeCustomersFromGroup(group.id, customerIds).subscribe({\n            complete: () => {\n                this.notificationService.success(_(`customer.remove-customers-from-group-success`), {\n                    customerCount: customerIds.length,\n                    groupName: group.name,\n                });\n                this.refreshActiveGroupMembers$.next();\n                this.selectedCustomerIds = [];\n            },\n        });\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Customer, DataService } from '@vendure/admin-ui/core';\nimport { BehaviorSubject, combineLatest, Observable, Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, map, startWith, takeUntil, tap } from 'rxjs/operators';\n\nexport interface CustomerGroupMemberFetchParams {\n    skip: number;\n    take: number;\n    filterTerm: string;\n}\n\ntype CustomerGroupMember = Pick<\n    Customer,\n    'id' | 'createdAt' | 'updatedAt' | 'title' | 'firstName' | 'lastName' | 'emailAddress'\n>;\n\n@Component({\n    selector: 'vdr-customer-group-member-list',\n    templateUrl: './customer-group-member-list.component.html',\n    styleUrls: ['./customer-group-member-list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CustomerGroupMemberListComponent implements OnInit, OnDestroy {\n    @Input() members: CustomerGroupMember[];\n    @Input() totalItems: number;\n    @Input() route: ActivatedRoute;\n    @Input() selectedMemberIds: string[] = [];\n    @Output() selectionChange = new EventEmitter<string[]>();\n    @Output() fetchParamsChange = new EventEmitter<CustomerGroupMemberFetchParams>();\n\n    membersItemsPerPage$: Observable<number>;\n    membersCurrentPage$: Observable<number>;\n    filterTermControl = new FormControl('');\n    private refresh$ = new BehaviorSubject<boolean>(true);\n    private destroy$ = new Subject<void>();\n\n    constructor(private router: Router, private dataService: DataService) {}\n\n    ngOnInit() {\n        this.membersCurrentPage$ = this.route.paramMap.pipe(\n            map(qpm => qpm.get('membersPage')),\n            map(page => (!page ? 1 : +page)),\n            startWith(1),\n            distinctUntilChanged(),\n        );\n\n        this.membersItemsPerPage$ = this.route.paramMap.pipe(\n            map(qpm => qpm.get('membersPerPage')),\n            map(perPage => (!perPage ? 10 : +perPage)),\n            startWith(10),\n            distinctUntilChanged(),\n        );\n\n        const filterTerm$ = this.filterTermControl.valueChanges.pipe(\n            debounceTime(250),\n            tap(() => this.setContentsPageNumber(1)),\n            startWith(''),\n        );\n\n        combineLatest(this.membersCurrentPage$, this.membersItemsPerPage$, filterTerm$, this.refresh$)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(([currentPage, itemsPerPage, filterTerm]) => {\n                const take = itemsPerPage;\n                const skip = (currentPage - 1) * itemsPerPage;\n                this.fetchParamsChange.emit({\n                    filterTerm,\n                    skip,\n                    take,\n                });\n            });\n    }\n\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    setContentsPageNumber(page: number) {\n        this.setParam('membersPage', page);\n    }\n\n    setContentsItemsPerPage(perPage: number) {\n        this.setParam('membersPerPage', perPage);\n    }\n\n    refresh() {\n        this.refresh$.next(true);\n    }\n\n    private setParam(key: string, value: any) {\n        this.router.navigate(['./', { ...this.route.snapshot.params, [key]: value }], {\n            relativeTo: this.route,\n            queryParamsHandling: 'merge',\n        });\n    }\n\n    areAllSelected(): boolean {\n        if (this.members) {\n            return this.selectedMemberIds.length === this.members.length;\n        } else {\n            return false;\n        }\n    }\n\n    toggleSelectAll() {\n        if (this.areAllSelected()) {\n            this.selectionChange.emit([]);\n        } else {\n            this.selectionChange.emit(this.members.map(v => v.id));\n        }\n    }\n\n    toggleSelectMember({ item: member }: { item: { id: string } }) {\n        if (this.selectedMemberIds.includes(member.id)) {\n            this.selectionChange.emit(this.selectedMemberIds.filter(id => id !== member.id));\n        } else {\n            this.selectionChange.emit([...this.selectedMemberIds, member.id]);\n        }\n    }\n\n    isMemberSelected = (member: { id: string }): boolean => {\n        return -1 < this.selectedMemberIds.indexOf(member.id);\n    };\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport {\n    Customer,\n    GetCustomerHistory,\n    HistoryEntry,\n    HistoryEntryType,\n    TimelineDisplayType,\n} from '@vendure/admin-ui/core';\n\n@Component({\n    selector: 'vdr-customer-history',\n    templateUrl: './customer-history.component.html',\n    styleUrls: ['./customer-history.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CustomerHistoryComponent {\n    @Input() customer: Customer.Fragment;\n    @Input() history: GetCustomerHistory.Items[];\n    @Output() addNote = new EventEmitter<{ note: string }>();\n    @Output() updateNote = new EventEmitter<HistoryEntry>();\n    @Output() deleteNote = new EventEmitter<HistoryEntry>();\n    note = '';\n    readonly type = HistoryEntryType;\n\n    getDisplayType(entry: GetCustomerHistory.Items): TimelineDisplayType {\n        switch (entry.type) {\n            case HistoryEntryType.CUSTOMER_VERIFIED:\n            case HistoryEntryType.CUSTOMER_EMAIL_UPDATE_VERIFIED:\n            case HistoryEntryType.CUSTOMER_PASSWORD_RESET_VERIFIED:\n                return 'success';\n            case HistoryEntryType.CUSTOMER_REGISTERED:\n                return 'muted';\n            case HistoryEntryType.CUSTOMER_REMOVED_FROM_GROUP:\n                return 'error';\n            default:\n                return 'default';\n        }\n    }\n\n    getTimelineIcon(entry: GetCustomerHistory.Items): string | [string, string] | undefined {\n        switch (entry.type) {\n            case HistoryEntryType.CUSTOMER_REGISTERED:\n                return 'user';\n            case HistoryEntryType.CUSTOMER_VERIFIED:\n                return ['assign-user', 'is-solid'];\n            case HistoryEntryType.CUSTOMER_NOTE:\n                return 'note';\n            case HistoryEntryType.CUSTOMER_ADDED_TO_GROUP:\n            case HistoryEntryType.CUSTOMER_REMOVED_FROM_GROUP:\n                return 'users';\n        }\n    }\n\n    isFeatured(entry: GetCustomerHistory.Items): boolean {\n        switch (entry.type) {\n            case HistoryEntryType.CUSTOMER_REGISTERED:\n            case HistoryEntryType.CUSTOMER_VERIFIED:\n                return true;\n            default:\n                return false;\n        }\n    }\n\n    getName(entry: GetCustomerHistory.Items): string {\n        const { administrator } = entry;\n        if (administrator) {\n            return `${administrator.firstName} ${administrator.lastName}`;\n        } else {\n            return `${this.customer.firstName} ${this.customer.lastName}`;\n        }\n    }\n\n    addNoteToCustomer() {\n        this.addNote.emit({ note: this.note });\n        this.note = '';\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    BaseListComponent,\n    DataService,\n    GetCustomerList,\n    LogicalOperator,\n    ModalService,\n    NotificationService,\n} from '@vendure/admin-ui/core';\nimport { SortOrder } from '@vendure/common/lib/generated-shop-types';\nimport { EMPTY } from 'rxjs';\nimport { debounceTime, filter, switchMap, takeUntil } from 'rxjs/operators';\n\n@Component({\n    selector: 'vdr-customer-list',\n    templateUrl: './customer-list.component.html',\n    styleUrls: ['./customer-list.component.scss'],\n})\nexport class CustomerListComponent\n    extends BaseListComponent<GetCustomerList.Query, GetCustomerList.Items>\n    implements OnInit\n{\n    searchTerm = new FormControl('');\n    constructor(\n        private dataService: DataService,\n        router: Router,\n        route: ActivatedRoute,\n        private modalService: ModalService,\n        private notificationService: NotificationService,\n    ) {\n        super(router, route);\n        super.setQueryFn(\n            (...args: any[]) => this.dataService.customer.getCustomerList(...args).refetchOnChannelChange(),\n            data => data.customers,\n            (skip, take) => ({\n                options: {\n                    skip,\n                    take,\n                    filter: {\n                        emailAddress: {\n                            contains: this.searchTerm.value,\n                        },\n                        lastName: {\n                            contains: this.searchTerm.value,\n                        },\n                        postalCode: {\n                            contains: this.searchTerm.value,\n                        },\n                    },\n                    filterOperator: LogicalOperator.OR,\n                    sort: {\n                        createdAt: SortOrder.DESC,\n                    },\n                },\n            }),\n        );\n    }\n\n    ngOnInit() {\n        super.ngOnInit();\n        this.searchTerm.valueChanges\n            .pipe(\n                filter(value => 2 < value.length || value.length === 0),\n                debounceTime(250),\n                takeUntil(this.destroy$),\n            )\n            .subscribe(() => this.refresh());\n    }\n\n    deleteCustomer(customer: GetCustomerList.Items) {\n        return this.modalService\n            .dialog({\n                title: _('catalog.confirm-delete-customer'),\n                body: `${customer.firstName} ${customer.lastName}`,\n                buttons: [\n                    { type: 'secondary', label: _('common.cancel') },\n                    { type: 'danger', label: _('common.delete'), returnValue: true },\n                ],\n            })\n            .pipe(switchMap(res => (res ? this.dataService.customer.deleteCustomer(customer.id) : EMPTY)))\n            .subscribe(\n                () => {\n                    this.notificationService.success(_('common.notify-delete-success'), {\n                        entity: 'Customer',\n                    });\n                    this.refresh();\n                },\n                err => {\n                    this.notificationService.error(_('common.notify-delete-error'), {\n                        entity: 'Customer',\n                    });\n                },\n            );\n    }\n}\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\nimport { Customer } from '@vendure/admin-ui/core';\n\n@Component({\n    selector: 'vdr-customer-status-label',\n    templateUrl: './customer-status-label.component.html',\n    styleUrls: ['./customer-status-label.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CustomerStatusLabelComponent {\n    @Input() customer: Customer.Fragment;\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BaseEntityResolver } from '@vendure/admin-ui/core';\nimport { Customer } from '@vendure/admin-ui/core';\nimport { DataService } from '@vendure/admin-ui/core';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CustomerResolver extends BaseEntityResolver<Customer.Fragment> {\n    constructor(router: Router, dataService: DataService) {\n        super(\n            router,\n            {\n                __typename: 'Customer',\n                id: '',\n                createdAt: '',\n                updatedAt: '',\n                title: '',\n                firstName: '',\n                lastName: '',\n                emailAddress: '',\n                phoneNumber: '',\n                addresses: null,\n                user: null,\n            },\n            id => dataService.customer.getCustomer(id).mapStream(data => data.customer),\n        );\n    }\n}\n","import { Route } from '@angular/router';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    CanDeactivateDetailGuard,\n    createResolveData,\n    Customer,\n    detailBreadcrumb,\n} from '@vendure/admin-ui/core';\n\nimport { CustomerDetailComponent } from './components/customer-detail/customer-detail.component';\nimport { CustomerGroupListComponent } from './components/customer-group-list/customer-group-list.component';\nimport { CustomerListComponent } from './components/customer-list/customer-list.component';\nimport { CustomerResolver } from './providers/routing/customer-resolver';\n\nexport const customerRoutes: Route[] = [\n    {\n        path: 'customers',\n        component: CustomerListComponent,\n        pathMatch: '',\n        data: {\n            breadcrumb: _('breadcrumb.customers'),\n        },\n    },\n    {\n        path: 'customers/:id',\n        component: CustomerDetailComponent,\n        resolve: createResolveData(CustomerResolver),\n        canDeactivate: [CanDeactivateDetailGuard],\n        data: {\n            breadcrumb: customerBreadcrumb,\n        },\n    },\n    {\n        path: 'groups',\n        component: CustomerGroupListComponent,\n        data: {\n            breadcrumb: _('breadcrumb.customer-groups'),\n        },\n    },\n];\n\nexport function customerBreadcrumb(data: any, params: any) {\n    return detailBreadcrumb<Customer.Fragment>({\n        entity: data.entity,\n        id: params.id,\n        breadcrumbKey: 'breadcrumb.customers',\n        getName: (customer) => `${customer.firstName} ${customer.lastName}`,\n        route: 'customers',\n    });\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '@vendure/admin-ui/core';\n\nimport { AddCustomerToGroupDialogComponent } from './components/add-customer-to-group-dialog/add-customer-to-group-dialog.component';\nimport { AddressCardComponent } from './components/address-card/address-card.component';\nimport { AddressDetailDialogComponent } from './components/address-detail-dialog/address-detail-dialog.component';\nimport { CustomerDetailComponent } from './components/customer-detail/customer-detail.component';\nimport { CustomerGroupDetailDialogComponent } from './components/customer-group-detail-dialog/customer-group-detail-dialog.component';\nimport { CustomerGroupListComponent } from './components/customer-group-list/customer-group-list.component';\nimport { CustomerGroupMemberListComponent } from './components/customer-group-member-list/customer-group-member-list.component';\nimport { CustomerHistoryComponent } from './components/customer-history/customer-history.component';\nimport { CustomerListComponent } from './components/customer-list/customer-list.component';\nimport { CustomerStatusLabelComponent } from './components/customer-status-label/customer-status-label.component';\nimport { SelectCustomerGroupDialogComponent } from './components/select-customer-group-dialog/select-customer-group-dialog.component';\nimport { customerRoutes } from './customer.routes';\n\n@NgModule({\n    imports: [SharedModule, RouterModule.forChild(customerRoutes)],\n    declarations: [\n        CustomerListComponent,\n        CustomerDetailComponent,\n        CustomerStatusLabelComponent,\n        AddressCardComponent,\n        CustomerGroupListComponent,\n        CustomerGroupDetailDialogComponent,\n        AddCustomerToGroupDialogComponent,\n        CustomerGroupMemberListComponent,\n        SelectCustomerGroupDialogComponent,\n        CustomerHistoryComponent,\n        AddressDetailDialogComponent,\n    ],\n    exports: [AddressCardComponent],\n})\nexport class CustomerModule {}\n","// This file was generated by the build-public-api.ts script\nexport * from './components/add-customer-to-group-dialog/add-customer-to-group-dialog.component';\nexport * from './components/address-card/address-card.component';\nexport * from './components/address-detail-dialog/address-detail-dialog.component';\nexport * from './components/customer-detail/customer-detail.component';\nexport * from './components/customer-group-detail-dialog/customer-group-detail-dialog.component';\nexport * from './components/customer-group-list/customer-group-list.component';\nexport * from './components/customer-group-member-list/customer-group-member-list.component';\nexport * from './components/customer-history/customer-history.component';\nexport * from './components/customer-list/customer-list.component';\nexport * from './components/customer-status-label/customer-status-label.component';\nexport * from './components/select-customer-group-dialog/select-customer-group-dialog.component';\nexport * from './customer.module';\nexport * from './customer.routes';\nexport * from './providers/routing/customer-resolver';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["BehaviorSubject","switchMap","map","Component","ChangeDetectionStrategy","DataService","ChangeDetectorRef","EventEmitter","filter","take","ModalService","Input","Output","Subject","Validators","FormArray","shareReplay","merge","startWith","SortOrder","FormControl","_","mergeMap","forkJoin","from","EMPTY","concatMap","EditNoteDialogComponent","notNullOrUndefined","BaseDetailComponent","ActivatedRoute","Router","ServerConfigService","FormBuilder","NotificationService","debounceTime","takeUntil","distinctUntilChanged","tap","combineLatest","of","DeletionResult","mapTo","BaseListComponent","HistoryEntryType","LogicalOperator","BaseEntityResolver","Injectable","createResolveData","CanDeactivateDetailGuard","detailBreadcrumb","NgModule","SharedModule","RouterModule"],"mappings":"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"}