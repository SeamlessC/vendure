{"__symbolic":"module","version":4,"metadata":{"CatalogModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":75,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"SharedModule","line":76,"character":14},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/router","name":"RouterModule","line":76,"character":28},"member":"forChild"},"arguments":[{"__symbolic":"reference","name":"catalogRoutes"}]}],"exports":[{"__symbolic":"reference","name":"ProductListComponent"},{"__symbolic":"reference","name":"ProductDetailComponent"},{"__symbolic":"reference","name":"FacetListComponent"},{"__symbolic":"reference","name":"FacetDetailComponent"},{"__symbolic":"reference","name":"GenerateProductVariantsComponent"},{"__symbolic":"reference","name":"ProductVariantsListComponent"},{"__symbolic":"reference","name":"ApplyFacetDialogComponent"},{"__symbolic":"reference","name":"AssetListComponent"},{"__symbolic":"reference","name":"AssetsComponent"},{"__symbolic":"reference","name":"VariantPriceDetailComponent"},{"__symbolic":"reference","name":"CollectionListComponent"},{"__symbolic":"reference","name":"CollectionDetailComponent"},{"__symbolic":"reference","name":"CollectionTreeComponent"},{"__symbolic":"reference","name":"CollectionTreeNodeComponent"},{"__symbolic":"reference","name":"CollectionContentsComponent"},{"__symbolic":"reference","name":"ProductVariantsTableComponent"},{"__symbolic":"reference","name":"OptionValueInputComponent"},{"__symbolic":"reference","name":"UpdateProductOptionDialogComponent"},{"__symbolic":"reference","name":"ProductVariantsEditorComponent"},{"__symbolic":"reference","name":"AssignProductsToChannelDialogComponent"},{"__symbolic":"reference","name":"AssetDetailComponent"},{"__symbolic":"reference","name":"ConfirmVariantDeletionDialogComponent"},{"__symbolic":"reference","name":"ProductOptionsEditorComponent"},{"__symbolic":"reference","name":"BulkAddFacetValuesDialogComponent"},{"__symbolic":"reference","name":"AssignToChannelDialogComponent"}],"declarations":[{"__symbolic":"reference","name":"ProductListComponent"},{"__symbolic":"reference","name":"ProductDetailComponent"},{"__symbolic":"reference","name":"FacetListComponent"},{"__symbolic":"reference","name":"FacetDetailComponent"},{"__symbolic":"reference","name":"GenerateProductVariantsComponent"},{"__symbolic":"reference","name":"ProductVariantsListComponent"},{"__symbolic":"reference","name":"ApplyFacetDialogComponent"},{"__symbolic":"reference","name":"AssetListComponent"},{"__symbolic":"reference","name":"AssetsComponent"},{"__symbolic":"reference","name":"VariantPriceDetailComponent"},{"__symbolic":"reference","name":"CollectionListComponent"},{"__symbolic":"reference","name":"CollectionDetailComponent"},{"__symbolic":"reference","name":"CollectionTreeComponent"},{"__symbolic":"reference","name":"CollectionTreeNodeComponent"},{"__symbolic":"reference","name":"CollectionContentsComponent"},{"__symbolic":"reference","name":"ProductVariantsTableComponent"},{"__symbolic":"reference","name":"OptionValueInputComponent"},{"__symbolic":"reference","name":"UpdateProductOptionDialogComponent"},{"__symbolic":"reference","name":"ProductVariantsEditorComponent"},{"__symbolic":"reference","name":"AssignProductsToChannelDialogComponent"},{"__symbolic":"reference","name":"AssetDetailComponent"},{"__symbolic":"reference","name":"ConfirmVariantDeletionDialogComponent"},{"__symbolic":"reference","name":"ProductOptionsEditorComponent"},{"__symbolic":"reference","name":"BulkAddFacetValuesDialogComponent"},{"__symbolic":"reference","name":"AssignToChannelDialogComponent"}]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"BulkActionRegistryService","line":81,"character":51}]}]}},"catalogRoutes":[{"path":"products","component":{"__symbolic":"reference","name":"ProductListComponent"},"data":{"breadcrumb":{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@biesbjerg/ngx-translate-extract-marker","name":"marker","line":34,"character":24},"arguments":["breadcrumb.products"]}}},{"path":"products/:id","component":{"__symbolic":"reference","name":"ProductDetailComponent"},"resolve":{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"createResolveData","line":40,"character":17},"arguments":[{"__symbolic":"reference","name":"ProductResolver"}]},"canDeactivate":[{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"CanDeactivateDetailGuard","line":41,"character":24}],"data":{"breadcrumb":{"__symbolic":"reference","name":"productBreadcrumb"}}},{"path":"products/:id/manage-variants","component":{"__symbolic":"reference","name":"ProductVariantsEditorComponent"},"resolve":{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"createResolveData","line":49,"character":17},"arguments":[{"__symbolic":"reference","name":"ProductVariantsResolver"}]},"canDeactivate":[{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"CanDeactivateDetailGuard","line":50,"character":24}],"data":{"breadcrumb":{"__symbolic":"reference","name":"productVariantEditorBreadcrumb"}}},{"path":"products/:id/options","component":{"__symbolic":"reference","name":"ProductOptionsEditorComponent"},"resolve":{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"createResolveData","line":58,"character":17},"arguments":[{"__symbolic":"reference","name":"ProductVariantsResolver"}]},"canDeactivate":[{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"CanDeactivateDetailGuard","line":59,"character":24}],"data":{"breadcrumb":{"__symbolic":"reference","name":"productOptionsEditorBreadcrumb"}}},{"path":"facets","component":{"__symbolic":"reference","name":"FacetListComponent"},"data":{"breadcrumb":{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@biesbjerg/ngx-translate-extract-marker","name":"marker","line":68,"character":24},"arguments":["breadcrumb.facets"]}}},{"path":"facets/:id","component":{"__symbolic":"reference","name":"FacetDetailComponent"},"resolve":{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"createResolveData","line":74,"character":17},"arguments":[{"__symbolic":"reference","name":"FacetResolver"}]},"canDeactivate":[{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"CanDeactivateDetailGuard","line":75,"character":24}],"data":{"breadcrumb":{"__symbolic":"reference","name":"facetBreadcrumb"}}},{"path":"collections","component":{"__symbolic":"reference","name":"CollectionListComponent"},"data":{"breadcrumb":{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@biesbjerg/ngx-translate-extract-marker","name":"marker","line":84,"character":24},"arguments":["breadcrumb.collections"]}}},{"path":"collections/:id","component":{"__symbolic":"reference","name":"CollectionDetailComponent"},"resolve":{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"createResolveData","line":90,"character":17},"arguments":[{"__symbolic":"reference","name":"CollectionResolver"}]},"canDeactivate":[{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"CanDeactivateDetailGuard","line":91,"character":24}],"data":{"breadcrumb":{"__symbolic":"reference","name":"collectionBreadcrumb"}}},{"path":"assets","component":{"__symbolic":"reference","name":"AssetListComponent"},"data":{"breadcrumb":{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@biesbjerg/ngx-translate-extract-marker","name":"marker","line":100,"character":24},"arguments":["breadcrumb.assets"]}}},{"path":"assets/:id","component":{"__symbolic":"reference","name":"AssetDetailComponent"},"resolve":{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"createResolveData","line":106,"character":17},"arguments":[{"__symbolic":"reference","name":"AssetResolver"}]},"data":{"breadcrumb":{"__symbolic":"reference","name":"assetBreadcrumb"}}}],"productBreadcrumb":{"__symbolic":"function","parameters":["data","params"],"value":{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"detailBreadcrumb","line":114,"character":11},"arguments":[{"__symbolic":"error","message":"Lambda not supported","line":118,"character":17,"module":"./catalog.routes"}]}},"productVariantEditorBreadcrumb":{"__symbolic":"function","parameters":["data","params"],"value":{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"data"},"member":"entity"},"member":"pipe"},"arguments":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"rxjs/operators","name":"map","line":125,"character":8},"arguments":[{"__symbolic":"error","message":"Lambda not supported","line":125,"character":12,"module":"./catalog.routes"}]}]}},"productOptionsEditorBreadcrumb":{"__symbolic":"function","parameters":["data","params"],"value":{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"data"},"member":"entity"},"member":"pipe"},"arguments":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"rxjs/operators","name":"map","line":146,"character":8},"arguments":[{"__symbolic":"error","message":"Lambda not supported","line":146,"character":12,"module":"./catalog.routes"}]}]}},"facetBreadcrumb":{"__symbolic":"function","parameters":["data","params"],"value":{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"detailBreadcrumb","line":166,"character":11},"arguments":[{"__symbolic":"error","message":"Lambda not supported","line":170,"character":17,"module":"./catalog.routes"}]}},"collectionBreadcrumb":{"__symbolic":"function","parameters":["data","params"],"value":{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"detailBreadcrumb","line":176,"character":11},"arguments":[{"__symbolic":"error","message":"Lambda not supported","line":180,"character":17,"module":"./catalog.routes"}]}},"assetBreadcrumb":{"__symbolic":"function","parameters":["data","params"],"value":{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"detailBreadcrumb","line":186,"character":11},"arguments":[{"__symbolic":"error","message":"Lambda not supported","line":190,"character":17,"module":"./catalog.routes"}]}},"ApplyFacetDialogComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":9,"character":1},"arguments":[{"selector":"vdr-apply-facet-dialog","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":13,"character":21},"member":"OnPush"},"template":"<ng-template vdrDialogTitle>{{ 'catalog.add-facets' | translate }}</ng-template>\n\n<vdr-facet-value-selector\n    [facets]=\"facets\"\n    (selectedValuesChange)=\"selectedValues = $event\"\n></vdr-facet-value-selector>\n\n<ng-template vdrDialogButtons>\n    <button type=\"button\" class=\"btn\" (click)=\"cancel()\">{{ 'common.cancel' | translate }}</button>\n    <button\n        type=\"submit\"\n        (click)=\"selectValues()\"\n        [disabled]=\"selectedValues.length === 0\"\n        class=\"btn btn-primary\"\n    >\n        {{ 'catalog.add-facets' | translate }}\n    </button>\n</ng-template>\n","styles":[""]}]}],"members":{"selector":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":16,"character":5},"arguments":[{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"FacetValueSelectorComponent","line":16,"character":15}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":22,"character":40}]}],"ngAfterViewInit":[{"__symbolic":"method"}],"selectValues":[{"__symbolic":"method"}],"cancel":[{"__symbolic":"method"}]}},"AssetDetailComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"BaseDetailComponent","line":19,"character":42},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":13,"character":1},"arguments":[{"selector":"vdr-asset-detail","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":17,"character":21},"member":"OnPush"},"template":"<vdr-action-bar>\n    <vdr-ab-left>\n        <vdr-entity-info [entity]=\"entity$ | async\"></vdr-entity-info>\n    </vdr-ab-left>\n\n    <vdr-ab-right>\n        <vdr-action-bar-items locationId=\"asset-detail\"></vdr-action-bar-items>\n        <button\n            *vdrIfPermissions=\"['UpdateCatalog', 'UpdateAsset']\"\n            class=\"btn btn-primary\"\n            (click)=\"save()\"\n            [disabled]=\"detailForm.invalid || detailForm.pristine\"\n        >\n            {{ 'common.update' | translate }}\n        </button>\n    </vdr-ab-right>\n</vdr-action-bar>\n<vdr-asset-preview\n    [asset]=\"entity$ | async\"\n    [editable]=\"true\"\n    [customFields]=\"customFields\"\n    [customFieldsForm]=\"detailForm.get('customFields')\"\n    (assetChange)=\"onAssetChange($event)\"\n></vdr-asset-preview>\n","styles":[":host{display:flex;flex-direction:column;height:100%}\n"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"Router","line":24,"character":16},{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":25,"character":15},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"ServerConfigService","line":26,"character":29},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"NotificationService","line":27,"character":37},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"DataService","line":28,"character":31},{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":29,"character":29}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"onAssetChange":[{"__symbolic":"method"}],"save":[{"__symbolic":"method"}],"setFormValues":[{"__symbolic":"method"}]}},"AssetListComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"BaseListComponent","line":26,"character":12},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":20,"character":1},"arguments":[{"selector":"vdr-asset-list","template":"<vdr-action-bar>\n    <vdr-ab-left [grow]=\"true\">\n        <vdr-asset-search-input\n            class=\"pr4 mt1\"\n            [tags]=\"allTags$ | async\"\n            (searchTermChange)=\"searchTerm$.next($event)\"\n            (tagsChange)=\"filterByTags$.next($event)\"\n        ></vdr-asset-search-input>\n    </vdr-ab-left>\n    <vdr-ab-right>\n        <vdr-action-bar-items locationId=\"asset-list\"></vdr-action-bar-items>\n        <vdr-asset-file-input\n            (selectFiles)=\"filesSelected($event)\"\n            [uploading]=\"uploading\"\n            dropZoneTarget=\".content-area\"\n        ></vdr-asset-file-input>\n    </vdr-ab-right>\n</vdr-action-bar>\n\n<vdr-asset-gallery\n    [assets]=\"(items$ | async)! | paginate: (paginationConfig$ | async) || {}\"\n    [multiSelect]=\"true\"\n    [canDelete]=\"['DeleteCatalog', 'DeleteAsset'] | hasPermission\"\n    (deleteAssets)=\"deleteAssets($event)\"\n></vdr-asset-gallery>\n\n<div class=\"paging-controls\">\n    <vdr-items-per-page-controls\n        [itemsPerPage]=\"itemsPerPage$ | async\"\n        (itemsPerPageChange)=\"setItemsPerPage($event)\"\n    ></vdr-items-per-page-controls>\n\n    <vdr-pagination-controls\n        [currentPage]=\"currentPage$ | async\"\n        [itemsPerPage]=\"itemsPerPage$ | async\"\n        [totalItems]=\"totalItems$ | async\"\n        (pageChange)=\"setPageNumber($event)\"\n    ></vdr-pagination-controls>\n</div>\n","styles":[":host{display:flex;flex-direction:column;height:100%}vdr-asset-gallery{flex:1}.paging-controls{padding-top:6px;border-top:1px solid var(--color-component-border-100);display:flex;justify-content:space-between}.search-input{margin-top:6px;min-width:300px}\n"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"NotificationService","line":35,"character":37},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"ModalService","line":36,"character":30},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"DataService","line":37,"character":29},{"__symbolic":"reference","module":"@angular/router","name":"Router","line":38,"character":16},{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":39,"character":15}]}],"ngOnInit":[{"__symbolic":"method"}],"filesSelected":[{"__symbolic":"method"}],"deleteAssets":[{"__symbolic":"method"}],"showModalAndDelete":[{"__symbolic":"method"}]}},"AssetChange":{"__symbolic":"interface"},"AssetsComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":31,"character":1},"arguments":[{"selector":"vdr-assets","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":35,"character":21},"member":"OnPush"},"template":"<div class=\"card\" *ngIf=\"!compact; else compactView\">\n    <div class=\"card-img\">\n        <div class=\"featured-asset\">\n            <img\n                *ngIf=\"featuredAsset\"\n                [src]=\"featuredAsset | assetPreview:'small'\"\n                (click)=\"previewAsset(featuredAsset)\"\n            />\n            <div class=\"placeholder\" *ngIf=\"!featuredAsset\" (click)=\"selectAssets()\">\n                <clr-icon shape=\"image\" size=\"128\"></clr-icon>\n                <div>{{ 'catalog.no-featured-asset' | translate }}</div>\n            </div>\n        </div>\n    </div>\n    <div class=\"card-block\"><ng-container *ngTemplateOutlet=\"assetList\"></ng-container></div>\n    <div class=\"card-footer\" *vdrIfPermissions=\"updatePermissions\">\n        <button class=\"btn\" (click)=\"selectAssets()\">\n            <clr-icon shape=\"attachment\"></clr-icon>\n            {{ 'asset.add-asset' | translate }}\n        </button>\n    </div>\n</div>\n\n<ng-template #compactView>\n    <div class=\"featured-asset compact\">\n        <img\n            *ngIf=\"featuredAsset\"\n            [src]=\"featuredAsset | assetPreview:'thumb'\"\n            (click)=\"previewAsset(featuredAsset)\"\n        />\n\n        <div class=\"placeholder\" *ngIf=\"!featuredAsset\" (click)=\"selectAssets()\"><clr-icon shape=\"image\" size=\"150\"></clr-icon></div>\n    </div>\n    <ng-container *ngTemplateOutlet=\"assetList\"></ng-container>\n    <button\n        *vdrIfPermissions=\"updatePermissions\"\n        class=\"compact-select btn btn-icon btn-sm btn-block\"\n        [title]=\"'asset.add-asset' | translate\"\n        (click)=\"selectAssets()\"\n    >\n        <clr-icon shape=\"attachment\"></clr-icon>\n        {{ 'asset.add-asset' | translate }}\n    </button>\n</ng-template>\n\n<ng-template #assetList>\n    <div class=\"all-assets\" [class.compact]=\"compact\" cdkDropListGroup>\n        <div\n            *ngFor=\"let asset of assets; let index = index\"\n            class=\"drop-list\"\n            cdkDropList\n            cdkDropListOrientation=\"horizontal\"\n            [cdkDropListData]=\"index\"\n            [cdkDropListDisabled]=\"!(updatePermissions | hasPermission)\"\n            (cdkDropListDropped)=\"dropListDropped($event)\"\n        >\n            <vdr-dropdown cdkDrag>\n                <div\n                    class=\"asset-thumb\"\n                    vdrDropdownTrigger\n                    [class.featured]=\"isFeatured(asset)\"\n                    [title]=\"\"\n                    tabindex=\"0\"\n                >\n                    <img [src]=\"asset | assetPreview:'tiny'\" />\n                </div>\n                <vdr-dropdown-menu vdrPosition=\"bottom-right\">\n                    <button type=\"button\" vdrDropdownItem (click)=\"previewAsset(asset)\">\n                        {{ 'asset.preview' | translate }}\n                    </button>\n                    <button\n                        type=\"button\"\n                        [disabled]=\"isFeatured(asset) || !(updatePermissions | hasPermission)\"\n                        vdrDropdownItem\n                        (click)=\"setAsFeatured(asset)\"\n                    >\n                        {{ 'asset.set-as-featured-asset' | translate }}\n                    </button>\n                    <div class=\"dropdown-divider\"></div>\n                    <button\n                        type=\"button\"\n                        class=\"remove-asset\"\n                        vdrDropdownItem\n                        [disabled]=\"!(updatePermissions | hasPermission)\"\n                        (click)=\"removeAsset(asset)\"\n                    >\n                        {{ 'asset.remove-asset' | translate }}\n                    </button>\n                </vdr-dropdown-menu>\n            </vdr-dropdown>\n        </div>\n    </div>\n</ng-template>\n","styles":[":host{width:340px;display:block}:host.compact{width:162px}.placeholder{text-align:center;color:var(--color-grey-300)}.featured-asset{text-align:center;background:var(--color-component-bg-200);padding:6px;cursor:pointer;border-radius:var(--border-radius-img)}.featured-asset img{border-radius:var(--border-radius-img)}.featured-asset.compact{width:100%;min-height:40px;position:relative;padding:6px}.featured-asset .compact-select{position:absolute;bottom:6px;right:6px;margin:0}.all-assets{display:flex;flex-wrap:wrap}.all-assets .drop-list{min-width:60px}.all-assets .asset-thumb{margin:3px;padding:0;border:2px solid var(--color-component-border-100);border-radius:var(--border-radius-img);cursor:pointer}.all-assets .asset-thumb img{width:50px;height:50px;border-radius:var(--border-radius-img)}.all-assets .asset-thumb.featured{border-color:var(--color-primary-500);border-radius:calc(var(--border-radius-img) + 2px)}.all-assets .remove-asset{color:var(--color-warning-500)}.all-assets.compact .drop-list{min-width:54px}.all-assets.compact .asset-thumb{margin:1px;border-width:1px}.all-assets.compact .cdk-drag-placeholder{width:50px}.all-assets.compact .cdk-drag-placeholder .asset-thumb{width:50px}.cdk-drag-animating{transition:transform .25s cubic-bezier(0,0,.2,1)}.example-box:last-child{border:none}.all-assets.cdk-drop-list-dragging vdr-dropdown:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}.cdk-drop-list-dragging>*:not(.cdk-drag-placeholder){display:none}\n"]}]}],"members":{"assetsSetter":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":38,"character":5},"arguments":["assets"]}]}],"featuredAsset":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":43,"character":5}}]}],"compact":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostBinding","line":44,"character":5},"arguments":["class.compact"]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":45,"character":5}}]}],"change":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":47,"character":5}}]}],"updatePermissions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":51,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"ModalService","line":54,"character":38},{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":54,"character":76}]}],"selectAssets":[{"__symbolic":"method"}],"setAsFeatured":[{"__symbolic":"method"}],"isFeatured":[{"__symbolic":"method"}],"previewAsset":[{"__symbolic":"method"}],"removeAsset":[{"__symbolic":"method"}],"emitChangeEvent":[{"__symbolic":"method"}],"dropListDropped":[{"__symbolic":"method"}]}},"AssignProductsToChannelDialogComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":10,"character":1},"arguments":[{"selector":"vdr-assign-products-to-channel-dialog","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":14,"character":21},"member":"OnPush"},"template":"<ng-template vdrDialogTitle>\n    <ng-container *ngIf=\"isProductVariantMode; else productModeTitle\">{{\n        'catalog.assign-variants-to-channel' | translate\n    }}</ng-container>\n    <ng-template #productModeTitle>{{ 'catalog.assign-products-to-channel' | translate }}</ng-template>\n</ng-template>\n\n<div class=\"flex\">\n    <clr-input-container>\n        <label>{{ 'common.channel' | translate }}</label>\n        <vdr-channel-assignment-control\n            clrInput\n            [multiple]=\"false\"\n            [includeDefaultChannel]=\"false\"\n            [disableChannelIds]=\"currentChannelIds\"\n            [formControl]=\"selectedChannelIdControl\"\n        ></vdr-channel-assignment-control>\n    </clr-input-container>\n    <div class=\"flex-spacer\"></div>\n    <clr-input-container>\n        <label>{{ 'catalog.price-conversion-factor' | translate }}</label>\n        <input clrInput type=\"number\" min=\"0\" max=\"99999\" [formControl]=\"priceFactorControl\" />\n    </clr-input-container>\n</div>\n\n<div class=\"channel-price-preview\">\n    <label class=\"clr-control-label\">{{ 'catalog.channel-price-preview' | translate }}</label>\n    <table class=\"table\">\n        <thead>\n            <tr>\n                <th>{{ 'common.name' | translate }}</th>\n                <th>\n                    {{\n                        'catalog.price-in-channel'\n                            | translate: { channel: currentChannel?.code | channelCodeToLabel | translate }\n                    }}\n                </th>\n                <th>\n                    <ng-template [ngIf]=\"selectedChannel\" [ngIfElse]=\"noSelection\">\n                        {{ 'catalog.price-in-channel' | translate: { channel: selectedChannel?.code } }}\n                    </ng-template>\n                    <ng-template #noSelection>\n                        {{ 'catalog.no-channel-selected' | translate }}\n                    </ng-template>\n                </th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let row of variantsPreview$ | async\">\n                <td>{{ row.name }}</td>\n                <td>{{ row.price | localeCurrency: currentChannel?.currencyCode }}</td>\n                <td>\n                    <ng-template [ngIf]=\"selectedChannel\" [ngIfElse]=\"noChannelSelected\">\n                        {{ row.pricePreview | localeCurrency: selectedChannel?.currencyCode }}\n                    </ng-template>\n                    <ng-template #noChannelSelected> - </ng-template>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n\n<ng-template vdrDialogButtons>\n    <button type=\"button\" class=\"btn\" (click)=\"cancel()\">{{ 'common.cancel' | translate }}</button>\n    <button type=\"submit\" (click)=\"assign()\" [disabled]=\"!selectedChannel\" class=\"btn btn-primary\">\n        <ng-template [ngIf]=\"selectedChannel\" [ngIfElse]=\"noSelection\">\n            {{ 'catalog.assign-to-named-channel' | translate: { channelCode: selectedChannel?.code } }}\n        </ng-template>\n        <ng-template #noSelection>\n            {{ 'catalog.no-channel-selected' | translate }}\n        </ng-template>\n    </button>\n</ng-template>\n","styles":["vdr-channel-assignment-control{min-width:200px}.channel-price-preview{margin-top:24px}.channel-price-preview table.table{margin-top:6px}\n"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"DataService","line":34,"character":37},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"NotificationService","line":34,"character":79}]}],"ngOnInit":[{"__symbolic":"method"}],"selectChannel":[{"__symbolic":"method"}],"assign":[{"__symbolic":"method"}],"cancel":[{"__symbolic":"method"}],"getTopVariants":[{"__symbolic":"method"}]}},"AssignToChannelDialogComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"vdr-assign-to-channel-dialog","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":9,"character":21},"member":"OnPush"},"template":"<ng-template vdrDialogTitle>\n    {{ 'catalog.assign-to-channel' | translate }}\n</ng-template>\n<clr-input-container class=\"mb4\">\n    <label>{{ 'common.channel' | translate }}</label>\n    <vdr-channel-assignment-control\n        clrInput\n        [multiple]=\"false\"\n        [includeDefaultChannel]=\"false\"\n        [formControl]=\"selectedChannelIdControl\"\n    ></vdr-channel-assignment-control>\n</clr-input-container>\n\n<ng-template vdrDialogButtons>\n    <button type=\"button\" class=\"btn\" (click)=\"cancel()\">{{ 'common.cancel' | translate }}</button>\n    <button type=\"submit\" (click)=\"assign()\" [disabled]=\"!selectedChannel\" class=\"btn btn-primary\">\n        <ng-template [ngIf]=\"selectedChannel\" [ngIfElse]=\"noSelection\">\n            {{ 'catalog.assign-to-named-channel' | translate: { channelCode: selectedChannel?.code } }}\n        </ng-template>\n        <ng-template #noSelection>\n            {{ 'catalog.no-channel-selected' | translate }}\n        </ng-template>\n    </button>\n</ng-template>\n","styles":["vdr-channel-assignment-control{min-width:200px}\n"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"DataService","line":20,"character":37},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"NotificationService","line":20,"character":79}]}],"ngOnInit":[{"__symbolic":"method"}],"selectChannel":[{"__symbolic":"method"}],"assign":[{"__symbolic":"method"}],"cancel":[{"__symbolic":"method"}]}},"BulkAddFacetValuesDialogComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":40,"character":1},"arguments":[{"selector":"vdr-bulk-add-facet-values-dialog","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":44,"character":21},"member":"OnPush"},"template":"<ng-template vdrDialogTitle>\n    {{ 'catalog.edit-facet-values' | translate }}\n</ng-template>\n\n<div class=\"flex\">\n    <div class=\"flex center\">\n        <div class=\"mr2\">\n            {{ 'catalog.add-facet-value' | translate }}\n        </div>\n        <vdr-facet-value-selector\n            [facets]=\"facets\"\n            (selectedValuesChange)=\"selectedValues = $event\"\n        ></vdr-facet-value-selector>\n    </div>\n</div>\n\n<table class=\"table\" *ngIf=\"state !== 'loading'; else placeholder\">\n    <tbody>\n        <tr *ngFor=\"let item of items\">\n            <td class=\"left align-middle\">\n                <div>{{ item.name }}</div>\n                <div *ngIf=\"item.sku\" class=\"sku\">{{ item.sku }}</div>\n            </td>\n            <td class=\"left\">\n                <vdr-facet-value-chip\n                    *ngFor=\"let facetValue of item.facetValues\"\n                    [facetValue]=\"facetValue\"\n                    (remove)=\"removeFacetValue(item, facetValue.id)\"\n                ></vdr-facet-value-chip>\n            </td>\n        </tr>\n    </tbody>\n</table>\n\n<ng-template #placeholder>\n    <div class=\"loading\">\n    <clr-spinner></clr-spinner>\n    </div>\n</ng-template>\n\n<ng-template vdrDialogButtons>\n    <button type=\"button\" class=\"btn\" (click)=\"cancel()\">{{ 'common.cancel' | translate }}</button>\n    <button\n        type=\"submit\"\n        (click)=\"addFacetValues()\"\n        [disabled]=\"selectedValues.length === 0 && facetValuesRemoved === false\"\n        class=\"btn btn-primary\"\n    >\n        {{ 'common.update' | translate }}\n    </button>\n</ng-template>\n","styles":[".loading{min-height:25vh;display:flex;justify-content:center;align-items:center}.sku{color:var(--color-text-300)}\n"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"DataService","line":60,"character":37},{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":60,"character":77}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"cancel":[{"__symbolic":"method"}],"removeFacetValue":[{"__symbolic":"method"}],"addFacetValues":[{"__symbolic":"method"}]}},"GET_PRODUCTS_WITH_FACET_VALUES_BY_IDS":{"__symbolic":"error","message":"Tagged template expressions are not supported in metadata","line":2,"character":53,"module":"./components/bulk-add-facet-values-dialog/bulk-add-facet-values-dialog.graphql"},"GET_VARIANTS_WITH_FACET_VALUES_BY_IDS":{"__symbolic":"error","message":"Tagged template expressions are not supported in metadata","line":23,"character":53,"module":"./components/bulk-add-facet-values-dialog/bulk-add-facet-values-dialog.graphql"},"UPDATE_PRODUCTS_BULK":{"__symbolic":"error","message":"Tagged template expressions are not supported in metadata","line":45,"character":36,"module":"./components/bulk-add-facet-values-dialog/bulk-add-facet-values-dialog.graphql"},"UPDATE_VARIANTS_BULK":{"__symbolic":"error","message":"Tagged template expressions are not supported in metadata","line":59,"character":36,"module":"./components/bulk-add-facet-values-dialog/bulk-add-facet-values-dialog.graphql"},"CollectionContentsComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":33,"character":1},"arguments":[{"selector":"vdr-collection-contents","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":37,"character":21},"member":"OnPush"},"template":"<div class=\"contents-header\">\n    <div class=\"header-title-row\">\n        <ng-container\n            *ngTemplateOutlet=\"headerTemplate; context: { $implicit: contentsTotalItems$ | async }\"\n        ></ng-container>\n    </div>\n    <input\n        type=\"text\"\n        [placeholder]=\"'catalog.filter-by-name' | translate\"\n        [formControl]=\"filterTermControl\"\n    />\n</div>\n<div class=\"table-wrapper\">\n    <div class=\"progress loop\" [class.visible]=\"isLoading\"></div>\n    <vdr-data-table\n        [class.loading]=\"isLoading\"\n        [items]=\"contents$ | async\"\n        [itemsPerPage]=\"contentsItemsPerPage$ | async\"\n        [totalItems]=\"contentsTotalItems$ | async\"\n        [currentPage]=\"contentsCurrentPage$ | async\"\n        (pageChange)=\"setContentsPageNumber($event)\"\n        (itemsPerPageChange)=\"setContentsItemsPerPage($event)\"\n    >\n        <ng-template let-variant=\"item\">\n            <td class=\"left align-middle\">{{ variant.name }}</td>\n            <td class=\"left align-middle\"><small class=\"sku\">{{ variant.sku }}</small></td>\n            <td class=\"right align-middle\">\n                <vdr-table-row-action\n                    iconShape=\"edit\"\n                    [label]=\"'common.edit' | translate\"\n                    [linkTo]=\"['/catalog/products', variant.productId, { tab: 'variants' }]\"\n                ></vdr-table-row-action>\n            </td>\n        </ng-template>\n    </vdr-data-table>\n</div>\n","styles":[".contents-header{background-color:var(--color-component-bg-100);position:sticky;top:0;padding:6px;z-index:1;border-bottom:1px solid var(--color-component-border-200)}.contents-header .header-title-row{display:flex;justify-content:space-between;align-items:center}.contents-header .clr-input{width:100%}:host{display:block}:host ::ng-deep table{margin-top:-1px}vdr-data-table{opacity:1;transition:opacity .3s}vdr-data-table.loading{opacity:.5}.table-wrapper{position:relative}.progress{position:absolute;top:0;left:0;overflow:hidden;height:6px;opacity:0;transition:opacity .1s}.progress.visible{opacity:1}.sku{color:var(--color-text-200)}\n"]}]}],"members":{"collectionId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":40,"character":5}}]}],"parentId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":41,"character":5}}]}],"updatedFilters":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":42,"character":5}}]}],"previewUpdatedFilters":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":43,"character":5}}]}],"headerTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":44,"character":5},"arguments":[{"__symbolic":"reference","module":"@angular/core","name":"TemplateRef","line":44,"character":18},{"static":true}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":58,"character":31},{"__symbolic":"reference","module":"@angular/router","name":"Router","line":58,"character":63},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"DataService","line":58,"character":92}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"setContentsPageNumber":[{"__symbolic":"method"}],"setContentsItemsPerPage":[{"__symbolic":"method"}],"refresh":[{"__symbolic":"method"}],"setParam":[{"__symbolic":"method"}]}},"CollectionDetailComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"BaseDetailComponent","line":47,"character":12},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":40,"character":1},"arguments":[{"selector":"vdr-collection-detail","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":44,"character":21},"member":"OnPush"},"template":"<vdr-action-bar>\n    <vdr-ab-left>\n        <vdr-entity-info [entity]=\"entity$ | async\"></vdr-entity-info>\n        <vdr-language-selector\n            [disabled]=\"isNew$ | async\"\n            [availableLanguageCodes]=\"availableLanguages$ | async\"\n            [currentLanguageCode]=\"languageCode$ | async\"\n            (languageCodeChange)=\"setLanguage($event)\"\n        ></vdr-language-selector>\n    </vdr-ab-left>\n\n    <vdr-ab-right>\n        <vdr-action-bar-items locationId=\"collection-detail\"></vdr-action-bar-items>\n        <button\n            class=\"btn btn-primary\"\n            *ngIf=\"isNew$ | async; else updateButton\"\n            (click)=\"create()\"\n            [disabled]=\"detailForm.invalid || detailForm.pristine\"\n        >\n            {{ 'common.create' | translate }}\n        </button>\n        <ng-template #updateButton>\n            <button\n                *vdrIfPermissions=\"updatePermission\"\n                class=\"btn btn-primary\"\n                (click)=\"save()\"\n                [disabled]=\"(detailForm.invalid || detailForm.pristine) && !assetsChanged()\"\n            >\n                {{ 'common.update' | translate }}\n            </button>\n        </ng-template>\n    </vdr-ab-right>\n</vdr-action-bar>\n<form class=\"form\" [formGroup]=\"detailForm\" *ngIf=\"entity$ | async as collection\">\n\n    <nav role=\"navigation\">\n        <ul class=\"collection-breadcrumbs\">\n            <li *ngFor=\"let breadcrumb of collection.breadcrumbs; let isFirst = first; let isLast = last\">\n                <a [routerLink]=\"['/catalog/collections']\" *ngIf=\"isFirst\">{{ 'catalog.root-collection' | translate }}</a>\n                <a [routerLink]=\"['/catalog/collections', breadcrumb.id]\" *ngIf=\"!isFirst && !isLast\">{{ breadcrumb.name | translate }}</a>\n                <ng-container *ngIf=\"isLast\">{{ breadcrumb.name | translate }}</ng-container>\n            </li>\n        </ul>\n    </nav>\n    <div class=\"clr-row\">\n        <div class=\"clr-col\">\n            <vdr-form-field [label]=\"'catalog.visibility' | translate\" for=\"visibility\">\n                <clr-toggle-wrapper>\n                    <input\n                        type=\"checkbox\"\n                        clrToggle\n                        formControlName=\"visible\"\n                        id=\"visibility\"\n                        [vdrDisabled]=\"!(updatePermission | hasPermission)\"\n                    />\n                    <label class=\"visible-toggle\">\n                        <ng-container *ngIf=\"detailForm.value.visible; else private\">{{\n                            'catalog.public' | translate\n                            }}</ng-container>\n                        <ng-template #private>{{ 'catalog.private' | translate }}</ng-template>\n                    </label>\n                </clr-toggle-wrapper>\n            </vdr-form-field>\n            <vdr-form-field [label]=\"'common.name' | translate\" for=\"name\">\n                <input\n                    id=\"name\"\n                    type=\"text\"\n                    formControlName=\"name\"\n                    [readonly]=\"!(updatePermission | hasPermission)\"\n                    (input)=\"updateSlug($event.target.value)\"\n                />\n            </vdr-form-field>\n            <vdr-form-field\n                [label]=\"'catalog.slug' | translate\"\n                for=\"slug\"\n                [errors]=\"{ pattern: ('catalog.slug-pattern-error' | translate) }\"\n            >\n                <input\n                    id=\"slug\"\n                    type=\"text\"\n                    formControlName=\"slug\"\n                    [readonly]=\"!(updatePermission | hasPermission)\"\n                />\n            </vdr-form-field>\n            <vdr-rich-text-editor\n                formControlName=\"description\"\n                [readonly]=\"!(updatePermission | hasPermission)\"\n                [label]=\"'common.description' | translate\"\n            ></vdr-rich-text-editor>\n\n            <section formGroupName=\"customFields\" *ngIf=\"customFields.length\">\n                <label>{{ 'common.custom-fields' | translate }}</label>\n                <vdr-tabbed-custom-fields\n                    entityName=\"Collection\"\n                    [customFields]=\"customFields\"\n                    [customFieldsFormGroup]=\"detailForm.get(['customFields'])\"\n                    [readonly]=\"!(updatePermission | hasPermission)\"\n                ></vdr-tabbed-custom-fields>\n            </section>\n            <vdr-custom-detail-component-host\n                locationId=\"collection-detail\"\n                [entity$]=\"entity$\"\n                [detailForm]=\"detailForm\"\n            ></vdr-custom-detail-component-host>\n        </div>\n        <div class=\"clr-col-md-auto\">\n            <vdr-assets\n                [assets]=\"collection.assets\"\n                [featuredAsset]=\"collection.featuredAsset\"\n                [updatePermissions]=\"updatePermission\"\n                (change)=\"assetChanges = $event\"\n            ></vdr-assets>\n        </div>\n    </div>\n    <div class=\"clr-row\" formArrayName=\"filters\">\n        <div class=\"clr-col\">\n            <label>{{ 'catalog.filters' | translate }}</label>\n            <ng-container *ngFor=\"let filter of filters; index as i; trackBy:trackByFn\">\n                <vdr-configurable-input\n                    (remove)=\"removeFilter(i)\"\n                    [position]=\"i\"\n                    [operation]=\"filter\"\n                    [operationDefinition]=\"getFilterDefinition(filter)\"\n                    [formControlName]=\"i\"\n                    [readonly]=\"!(updatePermission | hasPermission)\"\n                ></vdr-configurable-input>\n            </ng-container>\n\n            <div *vdrIfPermissions=\"updatePermission\">\n                <vdr-dropdown>\n                    <button class=\"btn btn-outline\" vdrDropdownTrigger>\n                        <clr-icon shape=\"plus\"></clr-icon>\n                        {{ 'marketing.add-condition' | translate }}\n                    </button>\n                    <vdr-dropdown-menu vdrPosition=\"bottom-left\">\n                        <button\n                            *ngFor=\"let filter of allFilters\"\n                            type=\"button\"\n                            vdrDropdownItem\n                            (click)=\"addFilter(filter)\"\n                        >\n                            {{ filter.description }}\n                        </button>\n                    </vdr-dropdown-menu>\n                </vdr-dropdown>\n            </div>\n        </div>\n        <div class=\"clr-col\">\n            <vdr-collection-contents\n                [collectionId]=\"id\"\n                [parentId]=\"parentId$ | async\"\n                [updatedFilters]=\"updatedFilters$ | async\"\n                [previewUpdatedFilters]=\"livePreview\"\n                #collectionContents\n            >\n                <ng-template let-count>\n                    <div class=\"contents-title\">\n                        {{ 'catalog.collection-contents' | translate }} ({{\n                        'common.results-count' | translate: {count: count}\n                        }})\n                    </div>\n                    <clr-checkbox-wrapper [class.disabled]=\"detailForm.get('filters')?.pristine\">\n                        <input\n                            type=\"checkbox\"\n                            clrCheckbox\n                            [ngModelOptions]=\"{ standalone: true }\"\n                            [disabled]=\"detailForm.get('filters')?.pristine\"\n                            [ngModel]=\"livePreview\"\n                            (ngModelChange)=\"toggleLivePreview()\"\n                        />\n                        <label>{{ 'catalog.live-preview-contents' | translate }}</label>\n                    </clr-checkbox-wrapper>\n                </ng-template>\n            </vdr-collection-contents>\n        </div>\n    </div>\n</form>\n","styles":["@charset \"UTF-8\";.visible-toggle{margin-top:-3px!important}clr-checkbox-wrapper{transition:opacity .3s}clr-checkbox-wrapper.disabled{opacity:.5}.collection-breadcrumbs{list-style-type:none;background-color:var(--color-component-bg-200);padding:2px 6px;margin-bottom:6px;border-radius:var(--clr-global-borderradius)}.collection-breadcrumbs li{font-size:.65rem;display:inline-block;margin-right:10px}.collection-breadcrumbs li:not(:last-child):after{content:\"\\203a\";top:0;color:var(--color-grey-400);margin-left:10px}\n"]}]}],"members":{"contentsComponent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":60,"character":5},"arguments":["collectionContents"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"Router","line":63,"character":16},{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":64,"character":15},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"ServerConfigService","line":65,"character":29},{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":66,"character":32},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"DataService","line":67,"character":31},{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":68,"character":29},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"NotificationService","line":69,"character":37},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"ModalService","line":70,"character":30},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"LocalStorageService","line":71,"character":37}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"getFilterDefinition":[{"__symbolic":"method"}],"assetsChanged":[{"__symbolic":"method"}],"updateSlug":[{"__symbolic":"method"}],"addFilter":[{"__symbolic":"method"}],"removeFilter":[{"__symbolic":"method"}],"create":[{"__symbolic":"method"}],"save":[{"__symbolic":"method"}],"canDeactivate":[{"__symbolic":"method"}],"toggleLivePreview":[{"__symbolic":"method"}],"trackByFn":[{"__symbolic":"method"}],"setFormValues":[{"__symbolic":"method"}],"getUpdatedCollection":[{"__symbolic":"method"}],"mapOperationsToInputs":[{"__symbolic":"method"}]}},"deleteCollectionsBulkAction":{"__symbolic":"error","message":"Lambda not supported","line":26,"character":24,"module":"./components/collection-list/collection-list-bulk-actions"},"assignCollectionsToChannelBulkAction":{"__symbolic":"error","message":"Lambda not supported","line":80,"character":24,"module":"./components/collection-list/collection-list-bulk-actions"},"removeCollectionsFromChannelBulkAction":{"__symbolic":"error","message":"Lambda not supported","line":121,"character":28,"module":"./components/collection-list/collection-list-bulk-actions"},"CollectionListComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":28,"character":1},"arguments":[{"selector":"vdr-collection-list","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":32,"character":21},"member":"OnPush"},"template":"<vdr-action-bar>\n    <vdr-ab-left>\n        <div class=\"\">\n            <input\n                type=\"text\"\n                name=\"searchTerm\"\n                [formControl]=\"filterTermControl\"\n                [placeholder]=\"'catalog.filter-by-name' | translate\"\n                class=\"clr-input search-input\"\n            />\n            <div class=\"flex center\">\n                <clr-toggle-wrapper\n                    class=\"expand-all-toggle mt2\"\n                >\n                    <input type=\"checkbox\" clrToggle [(ngModel)]=\"expandAll\" (change)=\"toggleExpandAll()\" />\n                    <label>\n                        {{ 'catalog.expand-all-collections' | translate }}\n                    </label>\n                </clr-toggle-wrapper>\n                <vdr-language-selector\n                    class=\"mt2\"\n                    [availableLanguageCodes]=\"availableLanguages$ | async\"\n                    [currentLanguageCode]=\"contentLanguage$ | async\"\n                    (languageCodeChange)=\"setLanguage($event)\"\n                ></vdr-language-selector>\n            </div>\n        </div>\n    </vdr-ab-left>\n    <vdr-ab-right>\n        <vdr-action-bar-items locationId=\"collection-list\"></vdr-action-bar-items>\n        <a\n            class=\"btn btn-primary\"\n            *vdrIfPermissions=\"['CreateCatalog', 'CreateCollection']\"\n            [routerLink]=\"['./create']\"\n        >\n            <clr-icon shape=\"plus\"></clr-icon>\n            {{ 'catalog.create-new-collection' | translate }}\n        </a>\n    </vdr-ab-right>\n</vdr-action-bar>\n<div class=\"bulk-select-controls\">\n    <input\n        type=\"checkbox\"\n        clrCheckbox\n        [checked]=\"selectionManager.areAllCurrentItemsSelected()\"\n        (click)=\"selectionManager.toggleSelectAll()\"\n    />\n    <vdr-bulk-action-menu\n        class=\"ml2\"\n        locationId=\"collection-list\"\n        [hostComponent]=\"this\"\n        [selectionManager]=\"selectionManager\"\n    ></vdr-bulk-action-menu>\n</div>\n<div class=\"collection-wrapper\">\n    <vdr-collection-tree\n        [collections]=\"items$ | async\"\n        [activeCollectionId]=\"activeCollectionId$ | async\"\n        [expandAll]=\"expandAll\"\n        [expandedIds]=\"expandedIds\"\n        [selectionManager]=\"selectionManager\"\n        (rearrange)=\"onRearrange($event)\"\n        (deleteCollection)=\"deleteCollection($event)\"\n    ></vdr-collection-tree>\n\n    <div class=\"collection-contents\" [class.expanded]=\"activeCollectionId$ | async\">\n        <vdr-collection-contents [collectionId]=\"activeCollectionId$ | async\">\n            <ng-template let-count>\n                <div class=\"collection-title\">\n                    {{ activeCollectionTitle$ | async }} ({{\n                        'common.results-count' | translate: { count: count }\n                    }})\n                </div>\n                <button type=\"button\" class=\"close-button\" (click)=\"closeContents()\">\n                    <clr-icon shape=\"close\"></clr-icon>\n                </button>\n            </ng-template>\n        </vdr-collection-contents>\n    </div>\n</div>\n","styles":[":host{height:100%;display:flex;flex-direction:column}.bulk-select-controls{min-height:36px;padding-left:14px;display:flex;align-items:center;border-bottom:1px solid var(--color-component-border-200)}.expand-all-toggle{display:block}.collection-wrapper{display:flex;height:calc(100% - 50px)}.collection-wrapper vdr-collection-tree{flex:1;height:100%;overflow:auto}.collection-wrapper .collection-contents{height:100%;width:0;opacity:0;visibility:hidden;overflow:auto;transition:width .3s,opacity .2s .3s,visibility 0s .3s}.collection-wrapper .collection-contents.expanded{width:30vw;visibility:visible;opacity:1;padding-left:12px}.collection-wrapper .collection-contents .close-button{margin:0;background:none;border:none;cursor:pointer}.paging-controls{padding-top:6px;border-top:1px solid var(--color-component-border-100);display:flex;justify-content:space-between}\n"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"DataService","line":48,"character":29},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"NotificationService","line":49,"character":37},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"ModalService","line":50,"character":30},{"__symbolic":"reference","module":"@angular/router","name":"Router","line":51,"character":24},{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":52,"character":23},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"ServerConfigService","line":53,"character":37},{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":54,"character":35}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"toggleExpandAll":[{"__symbolic":"method"}],"onRearrange":[{"__symbolic":"method"}],"deleteCollection":[{"__symbolic":"method"}],"closeContents":[{"__symbolic":"method"}],"setLanguage":[{"__symbolic":"method"}],"refresh":[{"__symbolic":"method"}]}},"HasParent":{"__symbolic":"interface"},"TreeNode":{"__symbolic":"interface"},"RootNode":{"__symbolic":"interface"},"arrayToTree":{"__symbolic":"function"},"CollectionTreeNodeComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":21,"character":1},"arguments":[{"selector":"vdr-collection-tree-node","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":25,"character":21},"member":"OnPush"},"template":"<div\n    cdkDropList\n    class=\"tree-node\"\n    #dropList\n    [cdkDropListData]=\"collectionTree\"\n    [cdkDropListDisabled]=\"!(hasUpdatePermission$ | async)\"\n    (cdkDropListDropped)=\"drop($event)\"\n>\n    <div\n        class=\"collection\"\n        [class.private]=\"collection.isPrivate\"\n        *ngFor=\"let collection of collectionTree.children; index as i; trackBy: trackByFn\"\n        cdkDrag\n        [cdkDragData]=\"collection\"\n    >\n        <div\n            class=\"collection-detail\"\n            [ngClass]=\"'depth-' + depth\"\n            [class.active]=\"collection.id === activeCollectionId\"\n        >\n            <div>\n                <input\n                    type=\"checkbox\"\n                    clrCheckbox\n                    [checked]=\"selectionManager.isSelected(collection)\"\n                    (click)=\"selectionManager.toggleSelection(collection, $event)\"\n                />\n            </div>\n            <div class=\"name\">\n                <button\n                    class=\"icon-button folder-button\"\n                    [disabled]=\"expandAll\"\n                    *ngIf=\"collection.children?.length; else folderSpacer\"\n                    (click)=\"toggleExpanded(collection)\"\n                >\n                    <clr-icon shape=\"folder\" *ngIf=\"!collection.expanded && !expandAll\"></clr-icon>\n                    <clr-icon shape=\"folder-open\" *ngIf=\"collection.expanded || expandAll\"></clr-icon>\n                </button>\n                <ng-template #folderSpacer>\n                    <div class=\"folder-button-spacer\"></div>\n                </ng-template>\n                {{ collection.name }}\n            </div>\n            <div class=\"flex-spacer\"></div>\n            <vdr-chip *ngIf=\"collection.isPrivate\">{{ 'catalog.private' | translate }}</vdr-chip>\n            <a\n                class=\"btn btn-link btn-sm\"\n                [routerLink]=\"['./', { contents: collection.id }]\"\n                queryParamsHandling=\"preserve\"\n            >\n                <clr-icon shape=\"view-list\"></clr-icon>\n                {{ 'catalog.view-contents' | translate }}\n            </a>\n            <a class=\"btn btn-link btn-sm\" [routerLink]=\"['/catalog/collections/', collection.id]\">\n                <clr-icon shape=\"edit\"></clr-icon>\n                {{ 'common.edit' | translate }}\n            </a>\n            <div class=\"drag-handle\" cdkDragHandle *vdrIfPermissions=\"['UpdateCatalog', 'UpdateCollection']\">\n                <clr-icon shape=\"drag-handle\" size=\"24\"></clr-icon>\n            </div>\n            <vdr-dropdown>\n                <button class=\"icon-button\" vdrDropdownTrigger (click)=\"getMoveListItems(collection)\">\n                    <clr-icon shape=\"ellipsis-vertical\"></clr-icon>\n                </button>\n                <vdr-dropdown-menu vdrPosition=\"bottom-right\">\n                    <a\n                        class=\"dropdown-item\"\n                        [routerLink]=\"['./', 'create', { parentId: collection.id }]\"\n                        *vdrIfPermissions=\"['CreateCatalog', 'CreateCollection']\"\n                    >\n                        <clr-icon shape=\"plus\"></clr-icon>\n                        {{ 'catalog.create-new-collection' | translate }}\n                    </a>\n                    <div class=\"dropdown-divider\"></div>\n                    <button\n                        type=\"button\"\n                        vdrDropdownItem\n                        [disabled]=\"i === 0 || !(hasUpdatePermission$ | async)\"\n                        (click)=\"moveUp(collection, i)\"\n                    >\n                        <clr-icon shape=\"caret up\"></clr-icon>\n                        {{ 'catalog.move-up' | translate }}\n                    </button>\n                    <button\n                        type=\"button\"\n                        vdrDropdownItem\n                        [disabled]=\"\n                            i === collectionTree.children.length - 1 || !(hasUpdatePermission$ | async)\n                        \"\n                        (click)=\"moveDown(collection, i)\"\n                    >\n                        <clr-icon shape=\"caret down\"></clr-icon>\n                        {{ 'catalog.move-down' | translate }}\n                    </button>\n                    <h4 class=\"dropdown-header\">{{ 'catalog.move-to' | translate }}</h4>\n                    <button\n                        type=\"button\"\n                        vdrDropdownItem\n                        *ngFor=\"let item of moveListItems\"\n                        (click)=\"move(collection, item.id)\"\n                        [disabled]=\"!(hasUpdatePermission$ | async)\"\n                    >\n                        <div class=\"move-to-item\">\n                            <div class=\"move-icon\">\n                                <clr-icon shape=\"child-arrow\"></clr-icon>\n                            </div>\n                            <div class=\"path\">\n                                {{ item.path }}\n                            </div>\n                        </div>\n                    </button>\n                    <div class=\"dropdown-divider\"></div>\n                    <button\n                        class=\"button\"\n                        vdrDropdownItem\n                        (click)=\"delete(collection.id)\"\n                        [disabled]=\"!(hasDeletePermission$ | async)\"\n                    >\n                        <clr-icon shape=\"trash\" class=\"is-danger\"></clr-icon>\n                        {{ 'common.delete' | translate }}\n                    </button>\n                </vdr-dropdown-menu>\n            </vdr-dropdown>\n        </div>\n        <vdr-collection-tree-node\n            *ngIf=\"collection.expanded || expandAll\"\n            [expandAll]=\"expandAll\"\n            [collectionTree]=\"collection\"\n            [activeCollectionId]=\"activeCollectionId\"\n            [selectionManager]=\"selectionManager\"\n        ></vdr-collection-tree-node>\n    </div>\n</div>\n","styles":[":host{display:block}.collection{background-color:var(--clr-table-bgcolor);border-radius:var(--clr-global-borderradius);font-size:.65rem;transition:transform .25s cubic-bezier(0,0,.2,1);margin-bottom:2px;border-left:2px solid transparent;transition:border-left-color .2s}.collection.private{background-color:var(--color-component-bg-200)}.collection .collection-detail{padding:6px 12px;display:flex;align-items:center;justify-content:space-between;border-bottom:1px solid var(--color-component-border-100)}.collection .collection-detail.active{background-color:var(--clr-global-selection-color)}.collection .collection-detail.depth-1{padding-left:36px}.collection .collection-detail.depth-2{padding-left:60px}.collection .collection-detail.depth-3{padding-left:84px}.collection .collection-detail.depth-4{padding-left:108px}.collection .collection-detail .folder-button-spacer{display:inline-block;width:28px}.tree-node{display:block;background-color:var(--clr-table-bgcolor);border-radius:var(--clr-global-borderradius);overflow:hidden}.tree-node.cdk-drop-list-dragging>.collection{border-left-color:var(--color-primary-300)}.drag-placeholder{min-height:120px;background-color:var(--color-component-bg-300);transition:transform .25s cubic-bezier(0,0,.2,1)}.cdk-drag-preview{box-sizing:border-box;border-radius:4px;box-shadow:0 5px 5px -3px #0003,0 8px 10px 1px #00000024,0 3px 14px 2px #0000001f}.cdk-drag-placeholder{opacity:0}.cdk-drag-animating{transition:transform .25s cubic-bezier(0,0,.2,1)}.example-list.cdk-drop-list-dragging .tree-node:not(.cdk-drag-placeholder){transition:transform .25s cubic-bezier(0,0,.2,1)}.move-to-item{display:flex;white-space:normal;align-items:baseline}.move-to-item .move-icon{flex:none;margin-right:3px}.move-to-item .path{line-height:18px}\n"]}]}],"members":{"collectionTree":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":30,"character":5}}]}],"activeCollectionId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":31,"character":5}}]}],"expandAll":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":32,"character":5}}]}],"selectionManager":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":33,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"SkipSelf","line":40,"character":9}},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":40,"character":21}}],null,null,null,null,null],"parameters":[{"__symbolic":"reference","name":"CollectionTreeNodeComponent"},{"__symbolic":"reference","name":"CollectionTreeComponent"},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"DataService","line":42,"character":29},{"__symbolic":"reference","module":"@angular/router","name":"Router","line":43,"character":24},{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":44,"character":23},{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":45,"character":35}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"trackByFn":[{"__symbolic":"method"}],"toggleExpanded":[{"__symbolic":"method"}],"getMoveListItems":[{"__symbolic":"method"}],"move":[{"__symbolic":"method"}],"moveUp":[{"__symbolic":"method"}],"moveDown":[{"__symbolic":"method"}],"drop":[{"__symbolic":"method"}],"delete":[{"__symbolic":"method"}]}},"RearrangeEvent":{"__symbolic":"interface"},"CollectionPartial":{"__symbolic":"interface"},"CollectionTreeComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":17,"character":1},"arguments":[{"selector":"vdr-collection-tree","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":21,"character":21},"member":"OnPush"},"template":"<vdr-collection-tree-node\n    *ngIf=\"collectionTree\"\n    cdkDropListGroup\n    [expandAll]=\"expandAll\"\n    [collectionTree]=\"collectionTree\"\n    [selectionManager]=\"selectionManager\"\n    [activeCollectionId]=\"activeCollectionId\"\n></vdr-collection-tree-node>\n","styles":[""]}]}],"members":{"collections":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":5}}]}],"activeCollectionId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":25,"character":5}}]}],"expandAll":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":5}}]}],"expandedIds":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":27,"character":5}}]}],"selectionManager":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":28,"character":5}}]}],"rearrange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":29,"character":5}}]}],"deleteCollection":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":30,"character":5}}]}],"ngOnChanges":[{"__symbolic":"method"}],"onDrop":[{"__symbolic":"method"}],"onMove":[{"__symbolic":"method"}],"onDelete":[{"__symbolic":"method"}],"getMoveListItems":[{"__symbolic":"method"}],"calculateAllMoveListItems":[{"__symbolic":"method"}],"isRootNode":[{"__symbolic":"method"}]}},"ConfirmVariantDeletionDialogComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"vdr-confirm-variant-deletion-dialog","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":7,"character":21},"member":"OnPush"},"template":"<ng-template vdrDialogTitle>\n    {{ 'catalog.confirm-deletion-of-unused-variants-title' | translate }}\n</ng-template>\n{{ 'catalog.confirm-deletion-of-unused-variants-body' | translate }}\n<ul>\n    <li *ngFor=\"let variant of variants\">{{ variant.name }} ({{ variant.sku }})</li>\n</ul>\n<ng-template vdrDialogButtons>\n    <button type=\"button\" class=\"btn\" (click)=\"cancel()\">{{ 'common.cancel' | translate }}</button>\n    <button type=\"submit\" (click)=\"confirm()\" class=\"btn btn-primary\">\n        {{ 'common.confirm' | translate }}\n    </button>\n</ng-template>\n","styles":[""]}]}],"members":{"confirm":[{"__symbolic":"method"}],"cancel":[{"__symbolic":"method"}]}},"FacetDetailComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"BaseDetailComponent","line":34,"character":12},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":27,"character":1},"arguments":[{"selector":"vdr-facet-detail","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":31,"character":21},"member":"OnPush"},"template":"<vdr-action-bar>\n    <vdr-ab-left>\n        <vdr-entity-info [entity]=\"entity$ | async\"></vdr-entity-info>\n        <vdr-language-selector\n            [disabled]=\"isNew$ | async\"\n            [availableLanguageCodes]=\"availableLanguages$ | async\"\n            [currentLanguageCode]=\"languageCode$ | async\"\n            (languageCodeChange)=\"setLanguage($event)\"\n        ></vdr-language-selector>\n    </vdr-ab-left>\n\n    <vdr-ab-right>\n        <vdr-action-bar-items locationId=\"facet-detail\"></vdr-action-bar-items>\n        <button\n            class=\"btn btn-primary\"\n            *ngIf=\"isNew$ | async; else updateButton\"\n            (click)=\"create()\"\n            [disabled]=\"detailForm.invalid || detailForm.pristine\"\n        >\n            {{ 'common.create' | translate }}\n        </button>\n        <ng-template #updateButton>\n            <button\n                *vdrIfPermissions=\"updatePermission\"\n                class=\"btn btn-primary\"\n                (click)=\"save()\"\n                [disabled]=\"detailForm.invalid || detailForm.pristine\"\n            >\n                {{ 'common.update' | translate }}\n            </button>\n        </ng-template>\n    </vdr-ab-right>\n</vdr-action-bar>\n\n<form class=\"form\" [formGroup]=\"detailForm\" *ngIf=\"entity$ | async as facet\">\n    <section class=\"form-block\" formGroupName=\"facet\">\n        <vdr-form-field [label]=\"'catalog.visibility' | translate\" for=\"visibility\">\n            <clr-toggle-wrapper>\n                <input\n                    type=\"checkbox\"\n                    clrToggle\n                    [vdrDisabled]=\"!(updatePermission | hasPermission)\"\n                    formControlName=\"visible\"\n                    id=\"visibility\"\n                />\n                <label class=\"visible-toggle\">\n                    <ng-container *ngIf=\"detailForm.value.facet.visible; else private\">{{\n                        'catalog.public' | translate\n                    }}</ng-container>\n                    <ng-template #private>{{ 'catalog.private' | translate }}</ng-template>\n                </label>\n            </clr-toggle-wrapper>\n        </vdr-form-field>\n        <vdr-form-field [label]=\"'common.name' | translate\" for=\"name\">\n            <input\n                id=\"name\"\n                type=\"text\"\n                formControlName=\"name\"\n                [readonly]=\"!(updatePermission | hasPermission)\"\n                (input)=\"updateCode(facet.code, $event.target.value)\"\n            />\n        </vdr-form-field>\n        <vdr-form-field\n            [label]=\"'common.code' | translate\"\n            for=\"code\"\n            [readOnlyToggle]=\"updatePermission | hasPermission\"\n        >\n            <input\n                id=\"code\"\n                type=\"text\"\n                [readonly]=\"!(updatePermission | hasPermission)\"\n                formControlName=\"code\"\n            />\n        </vdr-form-field>\n\n        <section formGroupName=\"customFields\" *ngIf=\"customFields.length\">\n            <label>{{ 'common.custom-fields' | translate }}</label>\n            <vdr-tabbed-custom-fields\n                entityName=\"Facet\"\n                [customFields]=\"customFields\"\n                [customFieldsFormGroup]=\"detailForm.get(['facet', 'customFields'])\"\n                [readonly]=\"!(updatePermission | hasPermission)\"\n            ></vdr-tabbed-custom-fields>\n        </section>\n        <vdr-custom-detail-component-host\n            locationId=\"facet-detail\"\n            [entity$]=\"entity$\"\n            [detailForm]=\"detailForm\"\n        ></vdr-custom-detail-component-host>\n    </section>\n\n    <section class=\"form-block\" *ngIf=\"!(isNew$ | async)\">\n        <label>{{ 'catalog.facet-values' | translate }}</label>\n\n        <table class=\"facet-values-list table\" formArrayName=\"values\" *ngIf=\"0 < getValuesFormArray().length\">\n            <thead>\n                <tr>\n                    <th></th>\n                    <th>{{ 'common.name' | translate }}</th>\n                    <th>{{ 'common.code' | translate }}</th>\n                    <ng-container *ngIf=\"customValueFields.length\">\n                        <th>{{ 'common.custom-fields' | translate }}</th>\n                    </ng-container>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr class=\"facet-value\" *ngFor=\"let value of values; let i = index\" [formGroupName]=\"i\">\n                    <td class=\"align-middle\">\n                        <vdr-entity-info [entity]=\"value\"></vdr-entity-info>\n                    </td>\n                    <td class=\"align-middle\">\n                        <input\n                            type=\"text\"\n                            formControlName=\"name\"\n                            [readonly]=\"!(updatePermission | hasPermission)\"\n                            (input)=\"updateValueCode(facet.values[i]?.code, $event.target.value, i)\"\n                        />\n                    </td>\n                    <td class=\"align-middle\"><input type=\"text\" formControlName=\"code\" readonly /></td>\n                    <td class=\"\" *ngIf=\"customValueFields.length\">\n                        <vdr-tabbed-custom-fields\n                            entityName=\"FacetValue\"\n                            [customFields]=\"customValueFields\"\n                            [compact]=\"true\"\n                            [customFieldsFormGroup]=\"detailForm.get(['values', i, 'customFields'])\"\n                            [readonly]=\"!(updatePermission | hasPermission)\"\n                        ></vdr-tabbed-custom-fields>\n                    </td>\n                    <td class=\"align-middle\">\n                        <vdr-dropdown>\n                            <button type=\"button\" class=\"btn btn-link btn-sm\" vdrDropdownTrigger>\n                                {{ 'common.actions' | translate }}\n                                <clr-icon shape=\"caret down\"></clr-icon>\n                            </button>\n                            <vdr-dropdown-menu vdrPosition=\"bottom-right\">\n                                <button\n                                    type=\"button\"\n                                    class=\"delete-button\"\n                                    (click)=\"deleteFacetValue(facet.values[i]?.id, i)\"\n                                    [disabled]=\"!(updatePermission | hasPermission)\"\n                                    vdrDropdownItem\n                                >\n                                    <clr-icon shape=\"trash\" class=\"is-danger\"></clr-icon>\n                                    {{ 'common.delete' | translate }}\n                                </button>\n                            </vdr-dropdown-menu>\n                        </vdr-dropdown>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n\n        <div>\n            <button\n                type=\"button\"\n                class=\"btn btn-secondary\"\n                *vdrIfPermissions=\"['CreateCatalog', 'CreateFacet']\"\n                (click)=\"addFacetValue()\"\n            >\n                <clr-icon shape=\"add\"></clr-icon>\n                {{ 'catalog.add-facet-value' | translate }}\n            </button>\n        </div>\n    </section>\n</form>\n","styles":[".visible-toggle{margin-top:-3px!important}\n"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"Router","line":44,"character":16},{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":45,"character":15},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"ServerConfigService","line":46,"character":29},{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":47,"character":32},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"DataService","line":48,"character":31},{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":49,"character":29},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"NotificationService","line":50,"character":37},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"ModalService","line":51,"character":30}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"updateCode":[{"__symbolic":"method"}],"updateValueCode":[{"__symbolic":"method"}],"customValueFieldIsSet":[{"__symbolic":"method"}],"getValuesFormArray":[{"__symbolic":"method"}],"addFacetValue":[{"__symbolic":"method"}],"create":[{"__symbolic":"method"}],"save":[{"__symbolic":"method"}],"deleteFacetValue":[{"__symbolic":"method"}],"showModalAndDelete":[{"__symbolic":"method"}],"setFormValues":[{"__symbolic":"method"}],"getUpdatedFacet":[{"__symbolic":"method"}],"getCreatedFacetValues":[{"__symbolic":"method"}],"getUpdatedFacetValues":[{"__symbolic":"method"}]}},"deleteFacetsBulkAction":{"__symbolic":"error","message":"Lambda not supported","line":26,"character":24,"module":"./components/facet-list/facet-list-bulk-actions"},"assignFacetsToChannelBulkAction":{"__symbolic":"error","message":"Lambda not supported","line":109,"character":24,"module":"./components/facet-list/facet-list-bulk-actions"},"removeFacetsFromChannelBulkAction":{"__symbolic":"error","message":"Lambda not supported","line":149,"character":24,"module":"./components/facet-list/facet-list-bulk-actions"},"FacetListComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"BaseListComponent","line":25,"character":12},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":19,"character":1},"arguments":[{"selector":"vdr-facet-list","template":"<vdr-action-bar>\n    <vdr-ab-left>\n        <div class=\"\">\n            <input\n                type=\"text\"\n                name=\"searchTerm\"\n                [formControl]=\"filterTermControl\"\n                [placeholder]=\"'catalog.filter-by-name' | translate\"\n                class=\"clr-input search-input\"\n            />\n            <div>\n                <vdr-language-selector\n                    [availableLanguageCodes]=\"availableLanguages$ | async\"\n                    [currentLanguageCode]=\"contentLanguage$ | async\"\n                    (languageCodeChange)=\"setLanguage($event)\"\n                ></vdr-language-selector>\n            </div>\n        </div>\n    </vdr-ab-left>\n    <vdr-ab-right>\n        <vdr-action-bar-items locationId=\"facet-list\"></vdr-action-bar-items>\n        <a\n            class=\"btn btn-primary\"\n            *vdrIfPermissions=\"['CreateCatalog', 'CreateFacet']\"\n            [routerLink]=\"['./create']\"\n        >\n            <clr-icon shape=\"plus\"></clr-icon>\n            {{ 'catalog.create-new-facet' | translate }}\n        </a>\n    </vdr-ab-right>\n</vdr-action-bar>\n\n<vdr-data-table\n    [items]=\"items$ | async\"\n    [itemsPerPage]=\"itemsPerPage$ | async\"\n    [totalItems]=\"totalItems$ | async\"\n    [currentPage]=\"currentPage$ | async\"\n    (pageChange)=\"setPageNumber($event)\"\n    (itemsPerPageChange)=\"setItemsPerPage($event)\"\n    [selectionManager]=\"selectionManager\"\n>\n    <vdr-bulk-action-menu\n        locationId=\"facet-list\"\n        [hostComponent]=\"this\"\n        [selectionManager]=\"selectionManager\"\n    ></vdr-bulk-action-menu>\n    <vdr-dt-column>{{ 'common.code' | translate }}</vdr-dt-column>\n    <vdr-dt-column>{{ 'common.name' | translate }}</vdr-dt-column>\n    <vdr-dt-column [expand]=\"true\">{{ 'catalog.values' | translate }}</vdr-dt-column>\n    <vdr-dt-column>{{ 'catalog.visibility' | translate }}</vdr-dt-column>\n    <vdr-dt-column></vdr-dt-column>\n    <vdr-dt-column></vdr-dt-column>\n    <ng-template let-facet=\"item\">\n        <td class=\"left align-middle\" [class.private]=\"facet.isPrivate\">{{ facet.code }}</td>\n        <td class=\"left align-middle\" [class.private]=\"facet.isPrivate\">{{ facet.name }}</td>\n        <td class=\"left align-middle\" [class.private]=\"facet.isPrivate\">\n            <vdr-facet-value-chip\n                *ngFor=\"let value of facet.values | slice: 0:displayLimit[facet.id] || 3\"\n                [facetValue]=\"value\"\n                [removable]=\"false\"\n                [displayFacetName]=\"false\"\n            ></vdr-facet-value-chip>\n            <button\n                class=\"btn btn-sm btn-secondary btn-icon\"\n                *ngIf=\"facet.values.length > initialLimit\"\n                (click)=\"toggleDisplayLimit(facet)\"\n            >\n                <ng-container *ngIf=\"(displayLimit[facet.id] || 0) < facet.values.length; else collapse\">\n                    <clr-icon shape=\"plus\"></clr-icon>\n                    {{ facet.values.length - initialLimit }}\n                </ng-container>\n                <ng-template #collapse>\n                    <clr-icon shape=\"minus\"></clr-icon>\n                </ng-template>\n            </button>\n        </td>\n        <td class=\"left align-middle\" [class.private]=\"facet.isPrivate\">\n            <vdr-chip>\n                <ng-container *ngIf=\"!facet.isPrivate; else private\">{{\n                    'catalog.public' | translate\n                }}</ng-container>\n                <ng-template #private>{{ 'catalog.private' | translate }}</ng-template>\n            </vdr-chip>\n        </td>\n        <td class=\"right align-middle\" [class.private]=\"facet.isPrivate\">\n            <vdr-table-row-action\n                iconShape=\"edit\"\n                [label]=\"'common.edit' | translate\"\n                [linkTo]=\"['./', facet.id]\"\n            ></vdr-table-row-action>\n        </td>\n        <td class=\"right align-middle\" [class.private]=\"facet.isPrivate\">\n            <vdr-dropdown>\n                <button type=\"button\" class=\"btn btn-link btn-sm\" vdrDropdownTrigger>\n                    {{ 'common.actions' | translate }}\n                    <clr-icon shape=\"caret down\"></clr-icon>\n                </button>\n                <vdr-dropdown-menu vdrPosition=\"bottom-right\">\n                    <button\n                        type=\"button\"\n                        class=\"delete-button\"\n                        (click)=\"deleteFacet(facet.id)\"\n                        [disabled]=\"!(['DeleteCatalog', 'DeleteFacet'] | hasPermission)\"\n                        vdrDropdownItem\n                    >\n                        <clr-icon shape=\"trash\" class=\"is-danger\"></clr-icon>\n                        {{ 'common.delete' | translate }}\n                    </button>\n                </vdr-dropdown-menu>\n            </vdr-dropdown>\n        </td>\n    </ng-template>\n</vdr-data-table>\n","styles":["td.private{background-color:var(--color-component-bg-200)}\n"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"DataService","line":36,"character":29},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"ModalService","line":37,"character":30},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"NotificationService","line":38,"character":37},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"ServerConfigService","line":39,"character":37},{"__symbolic":"reference","module":"@angular/router","name":"Router","line":40,"character":16},{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":41,"character":15}]}],"ngOnInit":[{"__symbolic":"method"}],"toggleDisplayLimit":[{"__symbolic":"method"}],"deleteFacet":[{"__symbolic":"method"}],"setLanguage":[{"__symbolic":"method"}],"showModalAndDelete":[{"__symbolic":"method"}]}},"CreateVariantValues":{"__symbolic":"interface"},"CreateProductVariantsConfig":{"__symbolic":"interface"},"GenerateProductVariantsComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":19,"character":1},"arguments":[{"selector":"vdr-generate-product-variants","template":"<div *ngFor=\"let group of optionGroups\" class=\"option-groups\">\n    <div class=\"name\">\n        <label>{{ 'catalog.option' | translate }}</label>\n        <input\n            #optionGroupName\n            placeholder=\"e.g. Size\"\n            clrInput\n            [(ngModel)]=\"group.name\"\n            name=\"name\"\n            required\n            (keydown.enter)=\"handleEnter($event, optionValueInputComponent)\"\n        />\n    </div>\n    <div class=\"values\">\n        <label>{{ 'catalog.option-values' | translate }}</label>\n        <vdr-option-value-input\n            #optionValueInputComponent\n            [(ngModel)]=\"group.values\"\n            (ngModelChange)=\"generateVariants()\"\n            (edit)=\"generateVariants()\"\n            [groupName]=\"group.name\"\n            [disabled]=\"group.name === ''\"\n        ></vdr-option-value-input>\n    </div>\n    <div class=\"remove-group\">\n        <button\n            class=\"btn btn-icon btn-warning-outline\"\n            [title]=\"'catalog.remove-option' | translate\"\n            (click)=\"removeOption(group.name)\"\n        >\n            <clr-icon shape=\"trash\"></clr-icon>\n        </button>\n    </div>\n</div>\n<button class=\"btn btn-primary-outline btn-sm\" (click)=\"addOption()\">\n    <clr-icon shape=\"plus\"></clr-icon>\n    {{ 'catalog.add-option' | translate }}\n</button>\n\n<div class=\"variants-preview\">\n    <table class=\"table\">\n        <thead>\n            <tr>\n                <th *ngIf=\"1 < variants.length\">{{ 'common.create' | translate }}</th>\n                <th *ngIf=\"1 < variants.length\">{{ 'catalog.variant' | translate }}</th>\n                <th>{{ 'catalog.sku' | translate }}</th>\n                <th>{{ 'catalog.price' | translate }}</th>\n                <th>{{ 'catalog.stock-on-hand' | translate }}</th>\n            </tr>\n        </thead>\n        <tr\n            *ngFor=\"let variant of variants; trackBy: trackByFn\"\n            [class.disabled]=\"!variantFormValues[variant.id].enabled\"\n        >\n            <td *ngIf=\"1 < variants.length\">\n                <input\n                    type=\"checkbox\"\n                    (change)=\"onFormChange()\"\n                    [(ngModel)]=\"variantFormValues[variant.id].enabled\"\n                    clrCheckbox\n                />\n            </td>\n            <td *ngIf=\"1 < variants.length\">\n                {{ variant.values.join(' ') }}\n            </td>\n            <td>\n                <clr-input-container>\n                    <input\n                        clrInput\n                        type=\"text\"\n                        (change)=\"onFormChange()\"\n                        [(ngModel)]=\"variantFormValues[variant.id].sku\"\n                        [placeholder]=\"'catalog.sku' | translate\"\n                    />\n                </clr-input-container>\n            </td>\n            <td>\n                <clr-input-container>\n                    <vdr-currency-input\n                        clrInput\n                        [(ngModel)]=\"variantFormValues[variant.id].price\"\n                        (ngModelChange)=\"onFormChange()\"\n                        [currencyCode]=\"currencyCode\"\n                    ></vdr-currency-input>\n                </clr-input-container>\n            </td>\n            <td>\n                <clr-input-container>\n                    <input\n                        clrInput\n                        type=\"number\"\n                        [(ngModel)]=\"variantFormValues[variant.id].stock\"\n                        (change)=\"onFormChange()\"\n                        min=\"0\"\n                        step=\"1\"\n                    />\n                </clr-input-container>\n            </td>\n        </tr>\n    </table>\n</div>\n","styles":[":host{display:block;margin-bottom:120px}.option-groups{display:flex}.values{flex:1;margin:0 6px}.remove-group{padding-top:18px}.variants-preview tr.disabled td{background-color:var(--color-component-bg-100);color:var(--color-grey-400)}\n"]}]}],"members":{"variantsChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":25,"character":5}}]}],"groupNameInputs":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChildren","line":26,"character":5},"arguments":["optionGroupName",{"read":{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":26,"character":45}}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"DataService","line":31,"character":37}]}],"ngOnInit":[{"__symbolic":"method"}],"addOption":[{"__symbolic":"method"}],"removeOption":[{"__symbolic":"method"}],"generateVariants":[{"__symbolic":"method"}],"trackByFn":[{"__symbolic":"method"}],"handleEnter":[{"__symbolic":"method"}],"onFormChange":[{"__symbolic":"method"}],"copyFromDefault":[{"__symbolic":"method"}]}},"OPTION_VALUE_INPUT_VALUE_ACCESSOR":{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALUE_ACCESSOR","line":21,"character":13},"useExisting":{"__symbolic":"reference","name":"OptionValueInputComponent"},"multi":true},"OptionValueInputComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":32,"character":1},"arguments":[{"selector":"vdr-option-value-input","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":36,"character":21},"member":"Default"},"providers":[{"__symbolic":"reference","name":"OPTION_VALUE_INPUT_VALUE_ACCESSOR"}],"template":"<div class=\"input-wrapper\" [class.focus]=\"isFocussed\" (click)=\"textArea.focus()\">\n    <div class=\"chips\" *ngIf=\"0 < optionValues.length\">\n        <vdr-chip\n            *ngFor=\"let option of optionValues; last as isLast; index as i\"\n            [icon]=\"option.locked ? 'lock' : 'times'\"\n            [class.selected]=\"isLast && lastSelected\"\n            [class.locked]=\"option.locked\"\n            [colorFrom]=\"groupName\"\n            (iconClick)=\"removeOption(option)\"\n        >\n            <span [hidden]=\"editingIndex !== i\">\n                <input\n                    #editNameInput\n                    type=\"text\"\n                    [ngModel]=\"option.name\"\n                    (blur)=\"updateOption(i, $event)\"\n                    (click)=\"$event.cancelBubble = true\"\n                />\n            </span>\n            <span\n                class=\"option-name\"\n                [class.editable]=\"!option.locked && !option.id\"\n                (click)=\"editName(i, $event)\" [hidden]=\"editingIndex === i\">{{ option.name }}</span>\n        </vdr-chip>\n    </div>\n    <textarea\n        #textArea\n        (keyup)=\"handleKey($event)\"\n        (focus)=\"isFocussed = true\"\n        (blur)=\"handleBlur()\"\n        [(ngModel)]=\"input\"\n        [disabled]=\"disabled\"\n    ></textarea>\n</div>\n","styles":[".input-wrapper{background-color:#fff;border-radius:3px!important;border:1px solid var(--color-grey-300)!important;cursor:text}.input-wrapper.focus{border-color:var(--color-primary-500)!important;box-shadow:0 0 1px 1px var(--color-primary-100)}.input-wrapper .chips{padding:5px}.input-wrapper textarea{border:none;width:100%;height:24px;margin-top:3px;padding:0 6px}.input-wrapper textarea:focus{outline:none}.input-wrapper textarea:disabled{background-color:var(--color-component-bg-100)}vdr-chip ::ng-deep .wrapper{margin:0 3px}vdr-chip.locked{opacity:.8}vdr-chip.selected ::ng-deep .wrapper{border-color:var(--color-warning-500)!important;box-shadow:0 0 1px 1px var(--color-warning-400);opacity:.6}vdr-chip .option-name.editable:hover{outline:1px solid var(--color-component-bg-300);outline-offset:1px;border-radius:1px}vdr-chip input{padding:0!important;margin-top:-2px;margin-bottom:-2px}\n"]}]}],"members":{"groupName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":40,"character":5}}]}],"textArea":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":41,"character":5},"arguments":["textArea",{"static":true}]}]}],"nameInputs":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChildren","line":42,"character":5},"arguments":["editNameInput",{"read":{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":42,"character":43}}]}]}],"options":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":43,"character":5}}]}],"add":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":44,"character":5}}]}],"remove":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":45,"character":5}}]}],"edit":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":46,"character":5}}]}],"disabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":47,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":60,"character":40}]}],"registerOnChange":[{"__symbolic":"method"}],"registerOnTouched":[{"__symbolic":"method"}],"setDisabledState":[{"__symbolic":"method"}],"writeValue":[{"__symbolic":"method"}],"focus":[{"__symbolic":"method"}],"editName":[{"__symbolic":"method"}],"updateOption":[{"__symbolic":"method"}],"removeOption":[{"__symbolic":"method"}],"handleKey":[{"__symbolic":"method"}],"handleBlur":[{"__symbolic":"method"}],"addOptionValue":[{"__symbolic":"method"}],"parseInputIntoOptions":[{"__symbolic":"method"}],"removeLastOption":[{"__symbolic":"method"}]}},"TabName":{"__symbolic":"interface"},"VariantFormValue":{"__symbolic":"interface"},"SelectedAssets":{"__symbolic":"interface"},"PaginationConfig":{"__symbolic":"interface"},"ProductDetailComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"BaseDetailComponent","line":97,"character":12},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":90,"character":1},"arguments":[{"selector":"vdr-product-detail","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":94,"character":21},"member":"OnPush"},"template":"<vdr-action-bar>\n    <vdr-ab-left>\n        <div class=\"flex clr-flex-row\">\n            <vdr-entity-info [entity]=\"entity$ | async\"></vdr-entity-info>\n            <clr-toggle-wrapper *vdrIfPermissions=\"['UpdateCatalog', 'UpdateProduct']\">\n                <input\n                    type=\"checkbox\"\n                    clrToggle\n                    name=\"enabled\"\n                    [formControl]=\"detailForm.get(['product', 'enabled'])\"\n                />\n                <label>{{ 'common.enabled' | translate }}</label>\n            </clr-toggle-wrapper>\n        </div>\n        <vdr-language-selector\n            [disabled]=\"isNew$ | async\"\n            [availableLanguageCodes]=\"availableLanguages$ | async\"\n            [currentLanguageCode]=\"languageCode$ | async\"\n            (languageCodeChange)=\"setLanguage($event)\"\n        ></vdr-language-selector>\n    </vdr-ab-left>\n\n    <vdr-ab-right>\n        <vdr-action-bar-items locationId=\"product-detail\"></vdr-action-bar-items>\n        <button\n            class=\"btn btn-primary\"\n            *ngIf=\"isNew$ | async; else updateButton\"\n            (click)=\"create()\"\n            [disabled]=\"detailForm.invalid || detailForm.pristine || !variantsToCreateAreValid()\"\n        >\n            {{ 'common.create' | translate }}\n        </button>\n        <ng-template #updateButton>\n            <button\n                *vdrIfPermissions=\"['UpdateCatalog', 'UpdateProduct']\"\n                class=\"btn btn-primary\"\n                (click)=\"save()\"\n                [disabled]=\"\n                    (detailForm.invalid || detailForm.pristine) && !assetsChanged() && !variantAssetsChanged()\n                \"\n            >\n                {{ 'common.update' | translate }}\n            </button>\n        </ng-template>\n    </vdr-ab-right>\n</vdr-action-bar>\n\n<form class=\"form\" [formGroup]=\"detailForm\" *ngIf=\"product$ | async as product\">\n    <button type=\"submit\" hidden x-data=\"prevents enter key from triggering other buttons\"></button>\n    <clr-tabs>\n        <clr-tab>\n            <button clrTabLink (click)=\"navigateToTab('details')\">\n                {{ 'catalog.product-details' | translate }}\n            </button>\n            <clr-tab-content *clrIfActive=\"(activeTab$ | async) === 'details'\">\n                <div class=\"clr-row\">\n                    <div class=\"clr-col\">\n                        <section class=\"form-block\" formGroupName=\"product\">\n                            <ng-container *ngIf=\"!(isNew$ | async)\">\n                                <ng-container *vdrIfMultichannel>\n                                    <vdr-form-item\n                                        [label]=\"'common.channels' | translate\"\n                                        *vdrIfDefaultChannelActive\n                                    >\n                                        <div class=\"flex channel-assignment\">\n                                            <ng-container *ngFor=\"let channel of productChannels$ | async\">\n                                                <vdr-chip\n                                                    *ngIf=\"!isDefaultChannel(channel.code)\"\n                                                    icon=\"times-circle\"\n                                                    (iconClick)=\"removeFromChannel(channel.id)\"\n                                                >\n                                                    <vdr-channel-badge\n                                                        [channelCode]=\"channel.code\"\n                                                    ></vdr-channel-badge>\n                                                    {{ channel.code | channelCodeToLabel }}\n                                                </vdr-chip>\n                                            </ng-container>\n                                            <button class=\"btn btn-sm\" (click)=\"assignToChannel()\">\n                                                <clr-icon shape=\"layers\"></clr-icon>\n                                                {{ 'catalog.assign-to-channel' | translate }}\n                                            </button>\n                                        </div>\n                                    </vdr-form-item>\n                                </ng-container>\n                            </ng-container>\n                            <vdr-form-field [label]=\"'catalog.product-name' | translate\" for=\"name\">\n                                <input\n                                    id=\"name\"\n                                    type=\"text\"\n                                    formControlName=\"name\"\n                                    [readonly]=\"!(['UpdateCatalog', 'UpdateProduct'] | hasPermission)\"\n                                    (input)=\"updateSlug($event.target.value)\"\n                                />\n                            </vdr-form-field>\n                            <div\n                                class=\"auto-rename-wrapper\"\n                                [class.visible]=\"\n                                    (isNew$ | async) === false && detailForm.get(['product', 'name'])?.dirty\n                                \"\n                            >\n                                <clr-checkbox-wrapper>\n                                    <input\n                                        clrCheckbox\n                                        type=\"checkbox\"\n                                        id=\"auto-update\"\n                                        formControlName=\"autoUpdateVariantNames\"\n                                    />\n                                    <label>{{\n                                        'catalog.auto-update-product-variant-name' | translate\n                                    }}</label>\n                                </clr-checkbox-wrapper>\n                            </div>\n                            <vdr-form-field\n                                [label]=\"'catalog.slug' | translate\"\n                                for=\"slug\"\n                                [errors]=\"{ pattern: 'catalog.slug-pattern-error' | translate }\"\n                            >\n                                <input\n                                    id=\"slug\"\n                                    type=\"text\"\n                                    formControlName=\"slug\"\n                                    [readonly]=\"!(['UpdateCatalog', 'UpdateProduct'] | hasPermission)\"\n                                />\n                            </vdr-form-field>\n                            <vdr-form-field\n                                [label]=\"'common.description' | translate\"\n                                for=\"description\"\n                                [errors]=\"{ pattern: 'catalog.description-pattern-error' | translate }\"\n                            >\n                                <textarea\n                                    rows=\"9\"\n                                    id=\"slug\"\n                                    type=\"text\"\n                                    formControlName=\"description\"\n                                    [readonly]=\"!(['UpdateCatalog', 'UpdateProduct'] | hasPermission)\"\n                                ></textarea>\n                            </vdr-form-field>\n\n                            <section formGroupName=\"customFields\" *ngIf=\"customFields.length\">\n                                <label>{{ 'common.custom-fields' | translate }}</label>\n                                <vdr-tabbed-custom-fields\n                                    entityName=\"Product\"\n                                    [customFields]=\"customFields\"\n                                    [customFieldsFormGroup]=\"detailForm.get(['product', 'customFields'])\"\n                                    [readonly]=\"!(['UpdateCatalog', 'UpdateProduct'] | hasPermission)\"\n                                ></vdr-tabbed-custom-fields>\n                            </section>\n                            <vdr-custom-detail-component-host\n                                locationId=\"product-detail\"\n                                [entity$]=\"entity$\"\n                                [detailForm]=\"detailForm\"\n                            ></vdr-custom-detail-component-host>\n                        </section>\n                    </div>\n                    <div class=\"clr-col-md-auto\">\n                        <vdr-assets\n                            [assets]=\"assetChanges.assets || product.assets\"\n                            [featuredAsset]=\"assetChanges.featuredAsset || product.featuredAsset\"\n                            [updatePermissions]=\"updatePermissions\"\n                            (change)=\"assetChanges = $event\"\n                        ></vdr-assets>\n                        <div class=\"facets\">\n                            <vdr-facet-value-chip\n                                *ngFor=\"let facetValue of facetValues$ | async\"\n                                [facetValue]=\"facetValue\"\n                                [removable]=\"['UpdateCatalog', 'UpdateProduct'] | hasPermission\"\n                                (remove)=\"removeProductFacetValue(facetValue.id)\"\n                            ></vdr-facet-value-chip>\n                            <button\n                                class=\"btn btn-sm btn-secondary\"\n                                *vdrIfPermissions=\"['UpdateCatalog', 'UpdateProduct']\"\n                                (click)=\"selectProductFacetValue()\"\n                            >\n                                <clr-icon shape=\"plus\"></clr-icon>\n                                {{ 'catalog.add-facets' | translate }}\n                            </button>\n                        </div>\n                    </div>\n                </div>\n\n                <div *ngIf=\"isNew$ | async\">\n                    <h4>{{ 'catalog.product-variants' | translate }}</h4>\n                    <vdr-generate-product-variants\n                        (variantsChange)=\"createVariantsConfig = $event\"\n                    ></vdr-generate-product-variants>\n                </div>\n            </clr-tab-content>\n        </clr-tab>\n        <clr-tab *ngIf=\"!(isNew$ | async)\">\n            <button clrTabLink (click)=\"navigateToTab('variants')\">\n                {{ 'catalog.product-variants' | translate }}\n            </button>\n            <clr-tab-content *clrIfActive=\"(activeTab$ | async) === 'variants'\">\n                <section class=\"form-block\">\n                    <div class=\"view-mode\">\n                        <div class=\"btn-group\">\n                            <button\n                                class=\"btn btn-secondary-outline\"\n                                (click)=\"variantDisplayMode = 'card'\"\n                                [class.btn-primary]=\"variantDisplayMode === 'card'\"\n                            >\n                                <clr-icon shape=\"list\"></clr-icon>\n                                <span class=\"full-label\">{{\n                                    'catalog.display-variant-cards' | translate\n                                }}</span>\n                            </button>\n                            <button\n                                class=\"btn\"\n                                (click)=\"variantDisplayMode = 'table'\"\n                                [class.btn-primary]=\"variantDisplayMode === 'table'\"\n                            >\n                                <clr-icon shape=\"table\"></clr-icon>\n                                <span class=\"full-label\">{{\n                                    'catalog.display-variant-table' | translate\n                                }}</span>\n                            </button>\n                        </div>\n                        <div class=\"variant-filter\">\n                            <input\n                                [formControl]=\"filterInput\"\n                                [placeholder]=\"'catalog.filter-by-name-or-sku' | translate\"\n                            />\n                            <button class=\"icon-button\" (click)=\"filterInput.setValue('')\">\n                                <clr-icon shape=\"times\"></clr-icon>\n                            </button>\n                        </div>\n                        <div class=\"flex-spacer\"></div>\n                        <a\n                            *vdrIfPermissions=\"['UpdateCatalog', 'UpdateProduct']\"\n                            [routerLink]=\"['./', 'manage-variants']\"\n                            class=\"btn btn-secondary edit-variants-btn mb0 mr0\"\n                        >\n                            <clr-icon shape=\"add-text\"></clr-icon>\n                            {{ 'catalog.manage-variants' | translate }}\n                        </a>\n                    </div>\n\n                    <div class=\"pagination-row mt4\" *ngIf=\"10 < (paginationConfig$ | async)?.totalItems\">\n                        <vdr-items-per-page-controls\n                            [itemsPerPage]=\"itemsPerPage$ | async\"\n                            (itemsPerPageChange)=\"setItemsPerPage($event)\"\n                        ></vdr-items-per-page-controls>\n\n                        <vdr-pagination-controls\n                            [id]=\"(paginationConfig$ | async)?.id\"\n                            [currentPage]=\"currentPage$ | async\"\n                            [itemsPerPage]=\"itemsPerPage$ | async\"\n                            (pageChange)=\"setPage($event)\"\n                        ></vdr-pagination-controls>\n                    </div>\n\n                    <vdr-product-variants-table\n                        *ngIf=\"variantDisplayMode === 'table'\"\n                        [variants]=\"variants$ | async\"\n                        [paginationConfig]=\"paginationConfig$ | async\"\n                        [optionGroups]=\"product.optionGroups\"\n                        [channelPriceIncludesTax]=\"channelPriceIncludesTax$ | async\"\n                        [productVariantsFormArray]=\"detailForm.get('variants')\"\n                        [pendingAssetChanges]=\"variantAssetChanges\"\n                    ></vdr-product-variants-table>\n                    <vdr-product-variants-list\n                        *ngIf=\"variantDisplayMode === 'card'\"\n                        [variants]=\"variants$ | async\"\n                        [paginationConfig]=\"paginationConfig$ | async\"\n                        [channelPriceIncludesTax]=\"channelPriceIncludesTax$ | async\"\n                        [facets]=\"facets$ | async\"\n                        [optionGroups]=\"product.optionGroups\"\n                        [productVariantsFormArray]=\"detailForm.get('variants')\"\n                        [taxCategories]=\"taxCategories$ | async\"\n                        [customFields]=\"customVariantFields\"\n                        [customOptionFields]=\"customOptionFields\"\n                        [activeLanguage]=\"languageCode$ | async\"\n                        [pendingAssetChanges]=\"variantAssetChanges\"\n                        (assignToChannel)=\"assignVariantToChannel($event)\"\n                        (removeFromChannel)=\"removeVariantFromChannel($event)\"\n                        (assetChange)=\"variantAssetChange($event)\"\n                        (updateProductOption)=\"updateProductOption($event)\"\n                        (selectionChange)=\"selectedVariantIds = $event\"\n                        (selectFacetValueClick)=\"selectVariantFacetValue($event)\"\n                    ></vdr-product-variants-list>\n                </section>\n                <div class=\"pagination-row mt4\" *ngIf=\"10 < (paginationConfig$ | async)?.totalItems\">\n                    <vdr-items-per-page-controls\n                        [itemsPerPage]=\"itemsPerPage$ | async\"\n                        (itemsPerPageChange)=\"setItemsPerPage($event)\"\n                    ></vdr-items-per-page-controls>\n\n                    <vdr-pagination-controls\n                        [id]=\"(paginationConfig$ | async)?.id\"\n                        [currentPage]=\"currentPage$ | async\"\n                        [itemsPerPage]=\"itemsPerPage$ | async\"\n                        (pageChange)=\"setPage($event)\"\n                    ></vdr-pagination-controls>\n                </div>\n            </clr-tab-content>\n        </clr-tab>\n    </clr-tabs>\n</form>\n","styles":[":host ::ng-deep trix-toolbar{top:24px}textarea{width:100%}.facets{margin-top:12px;display:flex;flex-wrap:wrap;align-items:center}@media screen and (min-width: 768px){.facets{max-width:340px}}vdr-action-bar clr-toggle-wrapper{margin-top:12px}.variant-filter{flex:1;display:flex}.variant-filter input{flex:1;max-width:initial;border-radius:3px 0 0 3px!important}.variant-filter .icon-button{border:1px solid var(--color-component-border-300);background-color:var(--color-component-bg-100);border-radius:0 3px 3px 0;border-left:none}.group-name{padding-right:6px}.view-mode{display:flex;flex-direction:column;justify-content:space-between}@media screen and (min-width: 768px){.view-mode{flex-direction:row}}.edit-variants-btn{margin-top:0}.channel-assignment{flex-wrap:wrap;max-height:144px;overflow-y:auto}.auto-rename-wrapper{overflow:hidden;max-height:0;padding-left:9.5rem;margin-bottom:0;transition:max-height .2s,margin-bottom .2s}.auto-rename-wrapper.visible{max-height:24px;margin-bottom:12px}.pagination-row{display:flex;align-items:baseline;justify-content:space-between}\n"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":130,"character":15},{"__symbolic":"reference","module":"@angular/router","name":"Router","line":131,"character":16},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"ServerConfigService","line":132,"character":29},{"__symbolic":"reference","name":"ProductDetailService"},{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":134,"character":29},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"ModalService","line":135,"character":30},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"NotificationService","line":136,"character":37},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"DataService","line":137,"character":31},{"__symbolic":"reference","module":"@angular/common","name":"Location","line":138,"character":26},{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":139,"character":32}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"navigateToTab":[{"__symbolic":"method"}],"isDefaultChannel":[{"__symbolic":"method"}],"setPage":[{"__symbolic":"method"}],"setItemsPerPage":[{"__symbolic":"method"}],"assignToChannel":[{"__symbolic":"method"}],"removeFromChannel":[{"__symbolic":"method"}],"assignVariantToChannel":[{"__symbolic":"method"}],"removeVariantFromChannel":[{"__symbolic":"method"}],"assetsChanged":[{"__symbolic":"method"}],"variantAssetsChanged":[{"__symbolic":"method"}],"variantAssetChange":[{"__symbolic":"method"}],"updateSlug":[{"__symbolic":"method"}],"selectProductFacetValue":[{"__symbolic":"method"}],"updateProductOption":[{"__symbolic":"method"}],"removeProductFacetValue":[{"__symbolic":"method"}],"selectVariantFacetValue":[{"__symbolic":"method"}],"variantsToCreateAreValid":[{"__symbolic":"method"}],"displayFacetValueModal":[{"__symbolic":"method"}],"create":[{"__symbolic":"method"}],"save":[{"__symbolic":"method"}],"canDeactivate":[{"__symbolic":"method"}],"setFormValues":[{"__symbolic":"method"}],"buildVariantFormArray":[{"__symbolic":"method"}],"getUpdatedProduct":[{"__symbolic":"method"}],"getUpdatedProductVariants":[{"__symbolic":"method"}],"getProductFormGroup":[{"__symbolic":"method"}],"updateSlugAfterSave":[{"__symbolic":"method"}]}},"deleteProductsBulkAction":{"__symbolic":"error","message":"Lambda not supported","line":27,"character":24,"module":"./components/product-list/product-list-bulk-actions"},"assignProductsToChannelBulkAction":{"__symbolic":"error","message":"Lambda not supported","line":80,"character":24,"module":"./components/product-list/product-list-bulk-actions"},"removeProductsFromChannelBulkAction":{"__symbolic":"error","message":"Lambda not supported","line":107,"character":24,"module":"./components/product-list/product-list-bulk-actions"},"assignFacetValuesToProductsBulkAction":{"__symbolic":"error","message":"Lambda not supported","line":172,"character":24,"module":"./components/product-list/product-list-bulk-actions"},"ProductListComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"BaseListComponent","line":27,"character":12},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":21,"character":1},"arguments":[{"selector":"vdr-products-list","template":"<vdr-action-bar>\n    <vdr-ab-left [grow]=\"true\">\n        <div class=\"search-form\">\n            <vdr-product-search-input\n                #productSearchInputComponent\n                [facetValueResults]=\"facetValues$ | async\"\n                (searchTermChange)=\"setSearchTerm($event)\"\n                (facetValueChange)=\"setFacetValueIds($event)\"\n            ></vdr-product-search-input>\n            <vdr-dropdown class=\"search-settings-menu mr3\">\n                <button\n                    type=\"button\"\n                    class=\"icon-button search-index-button\"\n                    [title]=\"\n                        (pendingSearchIndexUpdates\n                            ? 'catalog.pending-search-index-updates'\n                            : 'catalog.search-index-controls'\n                        ) | translate\n                    \"\n                    vdrDropdownTrigger\n                >\n                    <clr-icon shape=\"cog\"></clr-icon>\n                    <vdr-status-badge *ngIf=\"pendingSearchIndexUpdates\" type=\"warning\"></vdr-status-badge>\n                </button>\n                <vdr-dropdown-menu vdrPosition=\"bottom-right\">\n                    <h4 class=\"dropdown-header\">{{ 'catalog.search-index-controls' | translate }}</h4>\n                    <ng-container *ngIf=\"pendingSearchIndexUpdates\">\n                        <button\n                            type=\"button\"\n                            class=\"run-updates-button\"\n                            vdrDropdownItem\n                            (click)=\"runPendingSearchIndexUpdates()\"\n                            [disabled]=\"!(['UpdateCatalog', 'UpdateProduct'] | hasPermission)\"\n                        >\n                            <vdr-status-badge type=\"warning\"></vdr-status-badge>\n                            {{\n                                'catalog.run-pending-search-index-updates'\n                                    | translate: { count: pendingSearchIndexUpdates }\n                            }}\n                        </button>\n                        <div class=\"dropdown-divider\"></div>\n                    </ng-container>\n                    <button\n                        type=\"button\"\n                        vdrDropdownItem\n                        (click)=\"rebuildSearchIndex()\"\n                        [disabled]=\"!(['UpdateCatalog', 'UpdateProduct'] | hasPermission)\"\n                    >\n                        {{ 'catalog.rebuild-search-index' | translate }}\n                    </button>\n                </vdr-dropdown-menu>\n            </vdr-dropdown>\n        </div>\n        <div class=\"flex wrap\">\n            <clr-toggle-wrapper class=\"mt2\">\n                <input type=\"checkbox\" clrToggle [(ngModel)]=\"groupByProduct\" (ngModelChange)=\"refresh()\" />\n                <label>\n                    {{ 'catalog.group-by-product' | translate }}\n                </label>\n            </clr-toggle-wrapper>\n            <vdr-language-selector\n                [availableLanguageCodes]=\"availableLanguages$ | async\"\n                [currentLanguageCode]=\"contentLanguage$ | async\"\n                (languageCodeChange)=\"setLanguage($event)\"\n            ></vdr-language-selector>\n        </div>\n    </vdr-ab-left>\n    <vdr-ab-right>\n        <vdr-action-bar-items locationId=\"product-list\"></vdr-action-bar-items>\n        <a\n            class=\"btn btn-primary\"\n            [routerLink]=\"['./create']\"\n            *vdrIfPermissions=\"['CreateCatalog', 'CreateProduct']\"\n        >\n            <clr-icon shape=\"plus\"></clr-icon>\n            {{ 'catalog.create-new-product' | translate }}\n        </a>\n    </vdr-ab-right>\n</vdr-action-bar>\n\n<vdr-data-table\n    [items]=\"items$ | async\"\n    [itemsPerPage]=\"itemsPerPage$ | async\"\n    [totalItems]=\"totalItems$ | async\"\n    [currentPage]=\"currentPage$ | async\"\n    (pageChange)=\"setPageNumber($event)\"\n    (itemsPerPageChange)=\"setItemsPerPage($event)\"\n    [selectionManager]=\"selectionManager\"\n>\n    <vdr-bulk-action-menu\n        locationId=\"product-list\"\n        [hostComponent]=\"this\"\n        [selectionManager]=\"selectionManager\"\n    ></vdr-bulk-action-menu>\n    <vdr-dt-column> </vdr-dt-column>\n    <vdr-dt-column></vdr-dt-column>\n    <vdr-dt-column></vdr-dt-column>\n    <vdr-dt-column></vdr-dt-column>\n    <ng-template let-result=\"item\">\n        <td class=\"left align-middle image-col\" [class.disabled]=\"!result.enabled\">\n            <div class=\"image-placeholder\">\n                <img\n                    *ngIf=\"\n                        groupByProduct\n                            ? result.productAsset\n                            : result.productVariantAsset || result.productAsset as asset;\n                        else imagePlaceholder\n                    \"\n                    [src]=\"asset | assetPreview: 'tiny'\"\n                />\n                <ng-template #imagePlaceholder>\n                    <div class=\"placeholder\">\n                        <clr-icon shape=\"image\" size=\"48\"></clr-icon>\n                    </div>\n                </ng-template>\n            </div>\n        </td>\n        <td class=\"left align-middle\" [class.disabled]=\"!result.enabled\">\n            <div>{{ groupByProduct ? result.productName : result.productVariantName }}</div>\n            <div *ngIf=\"!groupByProduct\" class=\"sku\">{{ result.sku }}</div>\n        </td>\n        <td class=\"align-middle\" [class.disabled]=\"!result.enabled\">\n            <vdr-chip *ngIf=\"!result.enabled\">{{ 'common.disabled' | translate }}</vdr-chip>\n        </td>\n        <td class=\"right align-middle\" [class.disabled]=\"!result.enabled\">\n            <vdr-table-row-action\n                class=\"edit-button\"\n                iconShape=\"edit\"\n                [label]=\"'common.edit' | translate\"\n                [linkTo]=\"['./', result.productId]\"\n            ></vdr-table-row-action>\n            <vdr-dropdown>\n                <button type=\"button\" class=\"btn btn-link btn-sm\" vdrDropdownTrigger>\n                    {{ 'common.actions' | translate }}\n                    <clr-icon shape=\"caret down\"></clr-icon>\n                </button>\n                <vdr-dropdown-menu vdrPosition=\"bottom-right\">\n                    <button\n                        type=\"button\"\n                        class=\"delete-button\"\n                        (click)=\"deleteProduct(result.productId)\"\n                        [disabled]=\"!(['DeleteCatalog', 'DeleteProduct'] | hasPermission)\"\n                        vdrDropdownItem\n                    >\n                        <clr-icon shape=\"trash\" class=\"is-danger\"></clr-icon>\n                        {{ 'common.delete' | translate }}\n                    </button>\n                </vdr-dropdown-menu>\n            </vdr-dropdown>\n        </td>\n    </ng-template>\n</vdr-data-table>\n","styles":[".image-col{width:70px}.image-placeholder{width:50px;height:50px;background-color:var(--color-component-bg-200)}.image-placeholder img{border-radius:var(--border-radius-img)}.image-placeholder .placeholder{text-align:center;color:var(--color-grey-300)}.search-form{display:flex;align-items:center;width:100%}vdr-product-search-input{min-width:300px}@media screen and (max-width: 768px){vdr-product-search-input{min-width:100px}}.search-settings-menu{margin:0 12px}td.disabled{background-color:var(--color-component-bg-200)}.search-index-button{position:relative}.search-index-button vdr-status-badge{right:0;top:0}.run-updates-button{position:relative}.run-updates-button vdr-status-badge{left:10px;top:10px}.edit-button{margin-right:24px}.sku{color:var(--color-text-300)}\n"]}]}],"members":{"productSearchInput":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":40,"character":5},"arguments":["productSearchInputComponent",{"static":true}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"DataService","line":44,"character":29},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"ModalService","line":45,"character":30},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"NotificationService","line":46,"character":37},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"JobQueueService","line":47,"character":33},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"ServerConfigService","line":48,"character":37},{"__symbolic":"reference","module":"@angular/router","name":"Router","line":49,"character":16},{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":50,"character":15}]}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"setSearchTerm":[{"__symbolic":"method"}],"setFacetValueIds":[{"__symbolic":"method"}],"rebuildSearchIndex":[{"__symbolic":"method"}],"runPendingSearchIndexUpdates":[{"__symbolic":"method"}],"deleteProduct":[{"__symbolic":"method"}],"setLanguage":[{"__symbolic":"method"}]}},"ProductOptionsEditorComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"BaseDetailComponent","line":35,"character":12},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":28,"character":1},"arguments":[{"selector":"vdr-product-options-editor","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":32,"character":21},"member":"OnPush"},"template":"<vdr-action-bar>\n    <vdr-ab-left>\n        <vdr-language-selector\n            [availableLanguageCodes]=\"availableLanguages$ | async\"\n            [currentLanguageCode]=\"languageCode$ | async\"\n            (languageCodeChange)=\"setLanguage($event)\"\n        ></vdr-language-selector>\n    </vdr-ab-left>\n\n    <vdr-ab-right>\n        <div class=\"flex center\">\n            <div class=\"mr2\">\n                <clr-checkbox-wrapper>\n                    <input\n                        clrCheckbox\n                        type=\"checkbox\"\n                        id=\"auto-update\"\n                        [(ngModel)]=\"autoUpdateVariantNames\"\n                    />\n                    <label>{{ 'catalog.auto-update-product-variant-name' | translate }}</label>\n                </clr-checkbox-wrapper>\n            </div>\n            <button\n                *vdrIfPermissions=\"updatePermission\"\n                class=\"btn btn-primary\"\n                (click)=\"save()\"\n                [disabled]=\"detailForm.pristine || detailForm.invalid\"\n            >\n                {{ 'common.update' | translate }}\n            </button>\n        </div>\n    </vdr-ab-right>\n</vdr-action-bar>\n<form class=\"form\" [formGroup]=\"detailForm\" *ngIf=\"optionGroups$ | async as optionGroups\">\n    <div formGroupName=\"optionGroups\" class=\"clr-row\">\n        <div class=\"clr-col-12 clr-col-xl-6\" *ngFor=\"let optionGroup of getOptionGroups(); index as i\">\n            <section class=\"card\" [formArrayName]=\"i\">\n                <div class=\"card-header option-group-header\">\n                    <vdr-entity-info [entity]=\"optionGroup.value\"></vdr-entity-info>\n                    <div class=\"ml2\">{{ optionGroup.value.code }}</div>\n                </div>\n                <div class=\"card-block\">\n                    <vdr-form-field [label]=\"'common.name' | translate\" for=\"name\">\n                        <input\n                            [id]=\"'name-' + i\"\n                            type=\"text\"\n                            formControlName=\"name\"\n                            [readonly]=\"!(updatePermission | hasPermission)\"\n                        />\n                    </vdr-form-field>\n                    <vdr-form-field [label]=\"'common.code' | translate\" for=\"code\">\n                        <input\n                            [id]=\"'code-' + i\"\n                            type=\"text\"\n                            [readonly]=\"!(updatePermission | hasPermission)\"\n                            formControlName=\"code\"\n                        />\n                    </vdr-form-field>\n                </div>\n                <section class=\"card-block\">\n                    <table class=\"facet-values-list table mt2 mb4\" formGroupName=\"options\">\n                        <thead>\n                            <tr>\n                                <th></th>\n                                <th>{{ 'common.name' | translate }}</th>\n                                <th>{{ 'common.code' | translate }}</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr\n                                class=\"facet-value\"\n                                *ngFor=\"let option of getOptions(optionGroup); let i = index\"\n                                [formGroupName]=\"i\"\n                            >\n                                <td class=\"align-middle\">\n                                    <vdr-entity-info [entity]=\"option.value\"></vdr-entity-info>\n                                </td>\n                                <td class=\"align-middle\">\n                                    <input\n                                        type=\"text\"\n                                        formControlName=\"name\"\n                                        [readonly]=\"!(updatePermission | hasPermission)\"\n                                    />\n                                </td>\n                                <td class=\"align-middle\"><input type=\"text\" formControlName=\"code\" /></td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </section>\n            </section>\n        </div>\n    </div>\n</form>\n","styles":[".option-group-header{display:flex;align-items:baseline}\n"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":48,"character":25},{"__symbolic":"reference","module":"@angular/router","name":"Router","line":49,"character":26},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"ServerConfigService","line":50,"character":39},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"DataService","line":51,"character":31},{"__symbolic":"reference","name":"ProductDetailService"},{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":53,"character":29},{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":54,"character":32},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"NotificationService","line":55,"character":37}]}],"ngOnInit":[{"__symbolic":"method"}],"getOptionGroups":[{"__symbolic":"method"}],"getOptions":[{"__symbolic":"method"}],"save":[{"__symbolic":"method"}],"getUpdatedOptionGroup":[{"__symbolic":"method"}],"getUpdatedOption":[{"__symbolic":"method"}],"setFormValues":[{"__symbolic":"method"}]}},"GeneratedVariant":{"__symbolic":"class","members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"error","message":"Could not resolve type","line":37,"character":24,"context":{"typeName":"Partial"},"module":"./components/product-variants-editor/product-variants-editor.component"}]}]}},"ProductVariantsEditorComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":56,"character":1},"arguments":[{"selector":"vdr-product-variants-editor","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":60,"character":21},"member":"Default"},"template":"<vdr-action-bar>\n    <vdr-ab-right>\n        <button\n            class=\"btn btn-primary\"\n            (click)=\"save()\"\n            [disabled]=\"(!formValueChanged && !optionsChanged) || getVariantsToAdd().length === 0\"\n        >\n            {{ 'common.add-new-variants' | translate: { count: getVariantsToAdd().length } }}\n        </button>\n    </vdr-ab-right>\n</vdr-action-bar>\n\n<div *ngFor=\"let group of optionGroups; index as i\" class=\"option-groups\">\n    <div class=\"name\">\n        <label>{{ 'catalog.option' | translate }}</label>\n        <input clrInput [(ngModel)]=\"group.name\" name=\"name\" [readonly]=\"!group.isNew\" />\n    </div>\n    <div class=\"values\">\n        <label>{{ 'catalog.option-values' | translate }}</label>\n        <vdr-option-value-input\n            #optionValueInputComponent\n            [options]=\"group.values\"\n            [groupName]=\"group.name\"\n            [disabled]=\"group.name === ''\"\n            (add)=\"addOption(i, $event.name)\"\n            (remove)=\"removeOption(i, $event)\"\n        ></vdr-option-value-input>\n    </div>\n    <div>\n        <button\n            [disabled]=\"group.locked\"\n            class=\"btn btn-icon btn-danger-outline mt5\" (click)=\"removeOptionGroup(group)\">\n            <clr-icon shape=\"trash\"></clr-icon>\n        </button>\n    </div>\n</div>\n<button class=\"btn btn-primary-outline btn-sm\" (click)=\"addOptionGroup()\">\n    <clr-icon shape=\"plus\"></clr-icon>\n    {{ 'catalog.add-option' | translate }}\n</button>\n\n<div class=\"variants-preview\">\n    <table class=\"table\">\n        <thead>\n            <tr>\n                <th></th>\n                <th>{{ 'catalog.variant' | translate }}</th>\n                <th>{{ 'catalog.sku' | translate }}</th>\n                <th>{{ 'catalog.price' | translate }}</th>\n                <th>{{ 'catalog.stock-on-hand' | translate }}</th>\n                <th></th>\n            </tr>\n        </thead>\n        <tr *ngFor=\"let variant of generatedVariants\" [class.disabled]=\"!variant.enabled || variant.existing\">\n            <td class=\"left\">\n                <clr-checkbox-wrapper *ngIf=\"!variant.existing\">\n                    <input\n                        type=\"checkbox\"\n                        [(ngModel)]=\"variant.enabled\"\n                        name=\"enabled\"\n                        clrCheckbox\n                        (ngModelChange)=\"formValueChanged = true\"\n                    />\n                    <label>{{ 'common.create' | translate }}</label>\n                </clr-checkbox-wrapper>\n            </td>\n            <td>\n                {{ getVariantName(variant) | translate }}\n            </td>\n            <td>\n                <div class=\"flex center\">\n                    <clr-input-container *ngIf=\"!variant.existing\">\n                        <input\n                            clrInput\n                            type=\"text\"\n                            [(ngModel)]=\"variant.sku\"\n                            [placeholder]=\"'catalog.sku' | translate\"\n                            name=\"sku\"\n                            required\n                            (ngModelChange)=\"onFormChanged(variant)\"\n                        />\n                    </clr-input-container>\n                    <span *ngIf=\"variant.existing\">{{ variant.sku }}</span>\n                </div>\n            </td>\n            <td>\n                <div class=\"flex center\">\n                    <clr-input-container *ngIf=\"!variant.existing\">\n                        <vdr-currency-input\n                            clrInput\n                            [(ngModel)]=\"variant.price\"\n                            name=\"price\"\n                            [currencyCode]=\"currencyCode\"\n                            (ngModelChange)=\"onFormChanged(variant)\"\n                        ></vdr-currency-input>\n                    </clr-input-container>\n                    <span *ngIf=\"variant.existing\">{{ variant.price | localeCurrency: currencyCode }}</span>\n                </div>\n            </td>\n            <td>\n                <div class=\"flex center\">\n                    <clr-input-container *ngIf=\"!variant.existing\">\n                        <input\n                            clrInput\n                            type=\"number\"\n                            [(ngModel)]=\"variant.stock\"\n                            name=\"stock\"\n                            min=\"0\"\n                            step=\"1\"\n                            (ngModelChange)=\"onFormChanged(variant)\"\n                        />\n                    </clr-input-container>\n                    <span *ngIf=\"variant.existing\">{{ variant.stock }}</span>\n                </div>\n            </td>\n            <td>\n                <vdr-dropdown *ngIf=\"variant.productVariantId as productVariantId\">\n                    <button class=\"icon-button\" vdrDropdownTrigger>\n                        <clr-icon shape=\"ellipsis-vertical\"></clr-icon>\n                    </button>\n                    <vdr-dropdown-menu vdrPosition=\"bottom-right\">\n                        <button\n                            type=\"button\"\n                            class=\"delete-button\"\n                            (click)=\"deleteVariant(productVariantId, variant.options)\"\n                            vdrDropdownItem\n                        >\n                            <clr-icon shape=\"trash\" class=\"is-danger\"></clr-icon>\n                            {{ 'common.delete' | translate }}\n                        </button>\n                    </vdr-dropdown-menu>\n                </vdr-dropdown>\n            </td>\n        </tr>\n    </table>\n</div>\n","styles":[".option-groups{display:flex}.option-groups:first-of-type{margin-top:24px}.values{flex:1;margin:0 6px}.variants-preview tr.disabled td{background-color:var(--color-component-bg-100);color:var(--color-grey-400)}\n"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":72,"character":23},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"DataService","line":73,"character":29},{"__symbolic":"reference","name":"ProductDetailService"},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"NotificationService","line":75,"character":37},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"ModalService","line":76,"character":30}]}],"ngOnInit":[{"__symbolic":"method"}],"onFormChanged":[{"__symbolic":"method"}],"canDeactivate":[{"__symbolic":"method"}],"getVariantsToAdd":[{"__symbolic":"method"}],"getVariantName":[{"__symbolic":"method"}],"addOptionGroup":[{"__symbolic":"method"}],"removeOptionGroup":[{"__symbolic":"method"}],"addOption":[{"__symbolic":"method"}],"removeOption":[{"__symbolic":"method"}],"generateVariants":[{"__symbolic":"method"}],"getVariantPrototype":[{"__symbolic":"method"}],"deleteVariant":[{"__symbolic":"method"}],"save":[{"__symbolic":"method"}],"checkUniqueSkus":[{"__symbolic":"method"}],"confirmDeletionOfObsoleteVariants":[{"__symbolic":"method"}],"getObsoleteVariants":[{"__symbolic":"method"}],"hasOnlyDefaultVariant":[{"__symbolic":"method"}],"addOptionGroupsToProduct":[{"__symbolic":"method"}],"addNewOptionsToGroups":[{"__symbolic":"method"}],"fetchOptionGroups":[{"__symbolic":"method"}],"createNewProductVariants":[{"__symbolic":"method"}],"deleteObsoleteVariants":[{"__symbolic":"method"}],"reFetchProduct":[{"__symbolic":"method"}],"initOptionsAndVariants":[{"__symbolic":"method"}],"optionsAreEqual":[{"__symbolic":"method"}],"optionsAreSubset":[{"__symbolic":"method"}],"toOptionString":[{"__symbolic":"method"}]}},"VariantAssetChange":{"__symbolic":"interface"},"ProductVariantsListComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":47,"character":1},"arguments":[{"selector":"vdr-product-variants-list","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":51,"character":21},"member":"OnPush"},"template":"<div class=\"variants-list\">\n    <div\n        class=\"variant-container card\"\n        *ngFor=\"\n            let variant of variants | paginate: paginationConfig || { itemsPerPage: 10, currentPage: 1 };\n            trackBy: trackById;\n            let i = index\n        \"\n        [class.disabled]=\"!formGroupMap.get(variant.id)?.get('enabled')?.value\"\n    >\n        <ng-container *ngIf=\"formGroupMap.get(variant.id) as formGroup\" [formGroup]=\"formGroup\">\n            <div class=\"card-block header-row\">\n                <div class=\"details\">\n                    <vdr-title-input class=\"sku\" [readonly]=\"!(updatePermission | hasPermission)\">\n                        <clr-input-container>\n                            <input\n                                clrInput\n                                type=\"text\"\n                                formControlName=\"sku\"\n                                [readonly]=\"!(updatePermission | hasPermission)\"\n                                [placeholder]=\"'catalog.sku' | translate\"\n                            />\n                        </clr-input-container>\n                    </vdr-title-input>\n                    <vdr-title-input class=\"name\" [readonly]=\"!(updatePermission | hasPermission)\">\n                        <clr-input-container>\n                            <input\n                                clrInput\n                                type=\"text\"\n                                formControlName=\"name\"\n                                [readonly]=\"!(updatePermission | hasPermission)\"\n                                [placeholder]=\"'common.name' | translate\"\n                            />\n                        </clr-input-container>\n                    </vdr-title-input>\n                </div>\n                <div class=\"right-controls\">\n                    <clr-toggle-wrapper *vdrIfPermissions=\"updatePermission\">\n                        <input type=\"checkbox\" clrToggle name=\"enabled\" formControlName=\"enabled\" />\n                        <label>{{ 'common.enabled' | translate }}</label>\n                    </clr-toggle-wrapper>\n                </div>\n            </div>\n            <div class=\"card-block\">\n                <div class=\"variant-body\">\n                    <div class=\"assets\">\n                        <vdr-assets\n                            [compact]=\"true\"\n                            [assets]=\"pendingAssetChanges[variant.id]?.assets || variant.assets\"\n                            [featuredAsset]=\"\n                                pendingAssetChanges[variant.id]?.featuredAsset || variant.featuredAsset\n                            \"\n                            [updatePermissions]=\"updatePermission\"\n                            (change)=\"onAssetChange(variant.id, $event)\"\n                        ></vdr-assets>\n                    </div>\n                    <div class=\"variant-form-inputs\">\n                        <div class=\"standard-fields\">\n                            <div class=\"variant-form-input-row\">\n                                <div class=\"tax-category\">\n                                    <clr-select-container\n                                        *vdrIfPermissions=\"updatePermission; else taxCategoryLabel\"\n                                    >\n                                        <label>{{ 'catalog.tax-category' | translate }}</label>\n                                        <select clrSelect name=\"options\" formControlName=\"taxCategoryId\">\n                                            <option\n                                                *ngFor=\"let taxCategory of taxCategories\"\n                                                [value]=\"taxCategory.id\"\n                                            >\n                                                {{ taxCategory.name }}\n                                            </option>\n                                        </select>\n                                    </clr-select-container>\n                                    <ng-template #taxCategoryLabel>\n                                        <label class=\"clr-control-label\">{{\n                                            'catalog.tax-category' | translate\n                                        }}</label>\n                                        <div class=\"tax-category-label\">\n                                            {{ getTaxCategoryName(formGroup) }}\n                                        </div>\n                                    </ng-template>\n                                </div>\n                                <div class=\"price\">\n                                    <clr-input-container>\n                                        <label>{{ 'catalog.price' | translate }}</label>\n                                        <vdr-currency-input\n                                            *ngIf=\"!channelPriceIncludesTax\"\n                                            clrInput\n                                            [currencyCode]=\"variant.currencyCode\"\n                                            [readonly]=\"!(updatePermission | hasPermission)\"\n                                            formControlName=\"price\"\n                                        ></vdr-currency-input>\n                                        <vdr-currency-input\n                                            *ngIf=\"channelPriceIncludesTax\"\n                                            clrInput\n                                            [currencyCode]=\"variant.currencyCode\"\n                                            [readonly]=\"!(updatePermission | hasPermission)\"\n                                            formControlName=\"priceWithTax\"\n                                        ></vdr-currency-input>\n                                    </clr-input-container>\n                                </div>\n                                <vdr-variant-price-detail\n                                    [price]=\"formGroup.get('price')!.value\"\n                                    [currencyCode]=\"variant.currencyCode\"\n                                    [priceIncludesTax]=\"channelPriceIncludesTax\"\n                                    [taxCategoryId]=\"formGroup.get('taxCategoryId')!.value\"\n                                ></vdr-variant-price-detail>\n                            </div>\n                            <div class=\"variant-form-input-row\">\n                                <clr-select-container *vdrIfPermissions=\"updatePermission\">\n                                    <label\n                                        >{{ 'catalog.track-inventory' | translate }}\n                                        <vdr-help-tooltip\n                                            [content]=\"'catalog.track-inventory-tooltip' | translate\"\n                                        ></vdr-help-tooltip>\n                                    </label>\n                                    <select clrSelect name=\"options\" formControlName=\"trackInventory\">\n                                        <option [value]=\"GlobalFlag.TRUE\">\n                                            {{ 'catalog.track-inventory-true' | translate }}\n                                        </option>\n                                        <option [value]=\"GlobalFlag.FALSE\">\n                                            {{ 'catalog.track-inventory-false' | translate }}\n                                        </option>\n                                        <option [value]=\"GlobalFlag.INHERIT\">\n                                            {{ 'catalog.track-inventory-inherit' | translate }}\n                                        </option>\n                                    </select>\n                                </clr-select-container>\n                                <clr-input-container>\n                                    <label\n                                        >{{ 'catalog.stock-on-hand' | translate }}\n                                        <vdr-help-tooltip\n                                            [content]=\"'catalog.stock-on-hand-tooltip' | translate\"\n                                        ></vdr-help-tooltip\n                                    ></label>\n                                    <input\n                                        [class.inventory-untracked]=\"inventoryIsNotTracked(formGroup)\"\n                                        clrInput\n                                        type=\"number\"\n                                        [min]=\"getStockOnHandMinValue(formGroup)\"\n                                        step=\"1\"\n                                        formControlName=\"stockOnHand\"\n                                        [readonly]=\"!(updatePermission | hasPermission)\"\n                                        [vdrDisabled]=\"inventoryIsNotTracked(formGroup)\"\n                                    />\n                                </clr-input-container>\n                                <div [class.inventory-untracked]=\"inventoryIsNotTracked(formGroup)\">\n                                    <label class=\"clr-control-label\"\n                                        >{{ 'catalog.stock-allocated' | translate }}\n                                        <vdr-help-tooltip\n                                            [content]=\"'catalog.stock-allocated-tooltip' | translate\"\n                                        ></vdr-help-tooltip\n                                    ></label>\n                                    <div class=\"value\">\n                                        {{ variant.stockAllocated }}\n                                    </div>\n                                </div>\n                                <div [class.inventory-untracked]=\"inventoryIsNotTracked(formGroup)\">\n                                    <label class=\"clr-control-label\"\n                                        >{{ 'catalog.stock-saleable' | translate }}\n                                        <vdr-help-tooltip\n                                            [content]=\"'catalog.stock-saleable-tooltip' | translate\"\n                                        ></vdr-help-tooltip\n                                    ></label>\n                                    <div class=\"value\">\n                                        {{ getSaleableStockLevel(variant) }}\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"variant-form-input-row\">\n                                <div\n                                    class=\"out-of-stock-threshold-wrapper\"\n                                    [class.inventory-untracked]=\"inventoryIsNotTracked(formGroup)\"\n                                >\n                                    <label class=\"clr-control-label\"\n                                        >{{ 'catalog.out-of-stock-threshold' | translate\n                                        }}<vdr-help-tooltip\n                                            [content]=\"'catalog.out-of-stock-threshold-tooltip' | translate\"\n                                        ></vdr-help-tooltip\n                                    ></label>\n                                    <div class=\"flex\">\n                                        <clr-input-container>\n                                            <input\n                                                clrInput\n                                                type=\"number\"\n                                                [formControl]=\"formGroup.get('outOfStockThreshold')\"\n                                                [readonly]=\"!(updatePermission | hasPermission)\"\n                                                [vdrDisabled]=\"\n                                                    formGroup.get('useGlobalOutOfStockThreshold')?.value !==\n                                                        false || inventoryIsNotTracked(formGroup)\n                                                \"\n                                            />\n                                        </clr-input-container>\n                                        <clr-toggle-wrapper>\n                                            <input\n                                                type=\"checkbox\"\n                                                clrToggle\n                                                name=\"useGlobalOutOfStockThreshold\"\n                                                formControlName=\"useGlobalOutOfStockThreshold\"\n                                                [vdrDisabled]=\"\n                                                    !(updatePermission | hasPermission) ||\n                                                    inventoryIsNotTracked(formGroup)\n                                                \"\n                                            />\n                                            <label\n                                                >{{ 'catalog.use-global-value' | translate }} ({{\n                                                    globalOutOfStockThreshold\n                                                }})</label\n                                            >\n                                        </clr-toggle-wrapper>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"custom-fields\">\n                            <div class=\"variant-form-input-row\">\n                                <section formGroupName=\"customFields\" *ngIf=\"customFields.length\">\n                                    <vdr-tabbed-custom-fields\n                                        entityName=\"ProductVariant\"\n                                        [customFields]=\"customFields\"\n                                        [compact]=\"true\"\n                                        [customFieldsFormGroup]=\"formGroup.get('customFields')\"\n                                        [readonly]=\"!(updatePermission | hasPermission)\"\n                                    ></vdr-tabbed-custom-fields>\n                                </section>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"card-block\">\n                <div class=\"options-facets\">\n                    <vdr-entity-info [entity]=\"variant\"></vdr-entity-info>\n                    <div *ngIf=\"variant.options.length\">\n                        <div class=\"options\">\n                            <vdr-chip\n                                *ngFor=\"let option of variant.options | sort: 'groupId'\"\n                                [colorFrom]=\"optionGroupName(option.groupId)\"\n                                [invert]=\"true\"\n                                (iconClick)=\"editOption(option)\"\n                                [icon]=\"(updatePermission | hasPermission) && 'pencil'\"\n                            >\n                                <span class=\"option-group-name\">{{ optionGroupName(option.groupId) }}</span>\n                                {{ optionName(option) }}\n                            </vdr-chip>\n                            <a [routerLink]=\"['./', 'options']\" class=\"btn btn-link btn-sm\"\n                                >{{ 'catalog.edit-options' | translate }}...</a\n                            >\n                        </div>\n                    </div>\n                    <div class=\"flex-spacer\"></div>\n                    <div class=\"facets\">\n                        <vdr-facet-value-chip\n                            *ngFor=\"let facetValue of existingFacetValues(variant)\"\n                            [facetValue]=\"facetValue\"\n                            [removable]=\"updatePermission | hasPermission\"\n                            (remove)=\"removeFacetValue(variant, facetValue.id)\"\n                        ></vdr-facet-value-chip>\n                        <vdr-facet-value-chip\n                            *ngFor=\"let facetValue of pendingFacetValues(variant)\"\n                            [facetValue]=\"facetValue\"\n                            [removable]=\"updatePermission | hasPermission\"\n                            (remove)=\"removeFacetValue(variant, facetValue.id)\"\n                        ></vdr-facet-value-chip>\n                        <button\n                            *vdrIfPermissions=\"updatePermission\"\n                            class=\"btn btn-sm btn-secondary\"\n                            (click)=\"selectFacetValueClick.emit([variant.id])\"\n                        >\n                            <clr-icon shape=\"plus\"></clr-icon>\n                            {{ 'catalog.add-facets' | translate }}\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <ng-container *vdrIfMultichannel>\n                <div class=\"card-block\" *vdrIfDefaultChannelActive>\n                    <div class=\"flex channel-assignment\">\n                        <ng-container *ngFor=\"let channel of variant.channels\">\n                            <vdr-chip\n                                *ngIf=\"!isDefaultChannel(channel.code)\"\n                                icon=\"times-circle\"\n                                [title]=\"'catalog.remove-from-channel' | translate: { channelCode: channel.code }\"\n                                (iconClick)=\"\n                                    removeFromChannel.emit({ channelId: channel.id, variant: variant })\n                                \"\n                            >\n                                <vdr-channel-badge [channelCode]=\"channel.code\"></vdr-channel-badge>\n                                {{ channel.code | channelCodeToLabel }}\n                            </vdr-chip>\n                        </ng-container>\n                        <button class=\"btn btn-sm\" (click)=\"assignToChannel.emit(variant)\">\n                            <clr-icon shape=\"layers\"></clr-icon>\n                            {{ 'catalog.assign-to-channel' | translate }}\n                        </button>\n                    </div>\n                </div>\n            </ng-container>\n        </ng-container>\n    </div>\n</div>\n","styles":[".with-selected{display:flex;min-height:52px;align-items:center;border:1px solid var(--color-component-border-100);border-radius:3px;padding:6px 18px}.with-selected vdr-select-toggle{margin-right:12px}.with-selected>label{margin-right:12px}.variant-container{transition:background-color .2s;min-height:330px}.variant-container.disabled{background-color:var(--color-component-bg-200)}.variant-container .header-row{display:flex;align-items:center;flex-wrap:wrap}.variant-container .variant-body{display:flex;flex-direction:column}@media screen and (min-width: 768px){.variant-container .variant-body{flex-direction:row}}.variant-container .details{display:flex;flex-direction:column;flex:1;margin-right:12px}@media screen and (min-width: 768px){.variant-container .details{flex-direction:row;height:36px}}.variant-container .details .name{flex:1}.variant-container .details .name ::ng-deep .clr-control-container{width:100%}.variant-container .details .name ::ng-deep .clr-control-container input.clr-input{min-width:100%}.variant-container .details .sku{width:160px;margin-right:20px;flex:0}.variant-container .details ::ng-deep .name input{min-width:300px}.variant-container .right-controls{display:flex}.variant-container .tax-category-label{margin-top:3px}.variant-container .variant-form-inputs{flex:1;display:flex;flex-direction:column}@media screen and (min-width: 768px){.variant-container .variant-form-inputs{flex-direction:row}}.variant-container .variant-form-input-row{display:flex;flex-wrap:wrap}@media screen and (min-width: 768px){.variant-container .variant-form-input-row{margin:0 6px 8px 24px}}.variant-container .variant-form-input-row>*{margin-right:24px;margin-bottom:24px}.variant-container .track-inventory-toggle{margin-top:22px}.variant-container .clr-form-control{margin-top:0}.variant-container .facets{display:flex;flex-wrap:wrap;align-items:center}.variant-container .pricing{display:flex}.variant-container .pricing>div{margin-right:12px}.variant-container .option-group-name{color:var(--color-text-200);text-transform:uppercase;font-size:10px;margin-right:3px;height:11px}.variant-container .options-facets{display:flex;color:var(--color-grey-400)}.variant-container ::ng-deep .clr-control-container{width:100%}.channel-assignment{justify-content:flex-end;flex-wrap:wrap;max-height:110px;overflow-y:auto}.channel-assignment .btn{margin:6px 12px 6px 0}.out-of-stock-threshold-wrapper{display:flex;flex-direction:column}.out-of-stock-threshold-wrapper clr-toggle-wrapper{margin-left:24px}.inventory-untracked{opacity:.5}\n"]}]}],"members":{"formArray":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":54,"character":5},"arguments":["productVariantsFormArray"]}]}],"variants":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":55,"character":5}}]}],"paginationConfig":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":56,"character":5}}]}],"channelPriceIncludesTax":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":57,"character":5}}]}],"taxCategories":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":58,"character":5}}]}],"facets":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":59,"character":5}}]}],"optionGroups":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":60,"character":5}}]}],"customFields":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":61,"character":5}}]}],"customOptionFields":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":62,"character":5}}]}],"activeLanguage":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":63,"character":5}}]}],"pendingAssetChanges":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":64,"character":5}}]}],"assignToChannel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":65,"character":5}}]}],"removeFromChannel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":66,"character":5}}]}],"assetChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":70,"character":5}}]}],"selectionChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":71,"character":5}}]}],"selectFacetValueClick":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":72,"character":5}}]}],"updateProductOption":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":73,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":84,"character":32},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"ModalService","line":85,"character":30},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"DataService","line":86,"character":29}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"isDefaultChannel":[{"__symbolic":"method"}],"trackById":[{"__symbolic":"method"}],"inventoryIsNotTracked":[{"__symbolic":"method"}],"getTaxCategoryName":[{"__symbolic":"method"}],"getStockOnHandMinValue":[{"__symbolic":"method"}],"getSaleableStockLevel":[{"__symbolic":"method"}],"areAllSelected":[{"__symbolic":"method"}],"onAssetChange":[{"__symbolic":"method"}],"toggleSelectAll":[{"__symbolic":"method"}],"toggleSelectVariant":[{"__symbolic":"method"}],"optionGroupName":[{"__symbolic":"method"}],"optionName":[{"__symbolic":"method"}],"pendingFacetValues":[{"__symbolic":"method"}],"existingFacetValues":[{"__symbolic":"method"}],"removeFacetValue":[{"__symbolic":"method"}],"isVariantSelected":[{"__symbolic":"method"}],"editOption":[{"__symbolic":"method"}],"buildFormGroupMap":[{"__symbolic":"method"}],"getFacetValueIds":[{"__symbolic":"method"}]}},"ProductVariantsTableComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":15,"character":1},"arguments":[{"selector":"vdr-product-variants-table","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":19,"character":21},"member":"OnPush"},"template":"<table class=\"table\">\n    <thead>\n        <tr>\n            <th></th>\n            <th>{{ 'common.name' | translate }}</th>\n            <th>{{ 'catalog.sku' | translate }}</th>\n            <ng-container *ngFor=\"let optionGroup of optionGroups | sort: 'id'\">\n                <th>{{ optionGroup.name }}</th>\n            </ng-container>\n            <th>{{ 'catalog.price' | translate }}</th>\n            <th>{{ 'catalog.stock-on-hand' | translate }}</th>\n            <th>{{ 'common.enabled' | translate }}</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let variant of variants | paginate: paginationConfig; index as i; trackBy: trackByFn\">\n            <ng-container *ngIf=\"formGroupMap.get(variant.id) as formGroup\" [formGroup]=\"formGroup\">\n                <td class=\"left align-middle\" [class.disabled]=\"!formGroup.get('enabled')!.value\">\n                    <div class=\"card-img\">\n                        <div class=\"featured-asset\">\n                            <img\n                                *ngIf=\"getFeaturedAsset(variant) as featuredAsset; else placeholder\"\n                                [src]=\"featuredAsset | assetPreview: 'tiny'\"\n                            />\n                            <ng-template #placeholder>\n                                <div class=\"placeholder\">\n                                    <clr-icon shape=\"image\" size=\"48\"></clr-icon>\n                                </div>\n                            </ng-template>\n                        </div>\n                    </div>\n                </td>\n                <td class=\"left align-middle\" [class.disabled]=\"!formGroup.get('enabled')!.value\">\n                    <clr-input-container>\n                        <input\n                            clrInput\n                            type=\"text\"\n                            formControlName=\"name\"\n                            [readonly]=\"!(updatePermission | hasPermission)\"\n                            [placeholder]=\"'common.name' | translate\"\n                        />\n                    </clr-input-container>\n                </td>\n                <td class=\"left align-middle\" [class.disabled]=\"!formGroup.get('enabled')!.value\">\n                    <clr-input-container>\n                        <input\n                            clrInput\n                            type=\"text\"\n                            formControlName=\"sku\"\n                            [readonly]=\"!(updatePermission | hasPermission)\"\n                            [placeholder]=\"'catalog.sku' | translate\"\n                        />\n                    </clr-input-container>\n                </td>\n                <ng-container *ngFor=\"let option of variant.options | sort: 'groupId'\">\n                    <td\n                        class=\"left align-middle\"\n                        [class.disabled]=\"!formGroup.get('enabled')!.value\"\n                        [style.color]=\"optionGroupName(option.groupId) | stringToColor\"\n                    >\n                        {{ option.name }}\n                    </td>\n                </ng-container>\n                <td class=\"left align-middle price\" [class.disabled]=\"!formGroup.get('enabled')!.value\">\n                    <clr-input-container>\n                        <vdr-currency-input\n                            *ngIf=\"!channelPriceIncludesTax\"\n                            clrInput\n                            [currencyCode]=\"variant.currencyCode\"\n                            [readonly]=\"!(updatePermission | hasPermission)\"\n                            formControlName=\"price\"\n                        ></vdr-currency-input>\n                        <vdr-currency-input\n                            *ngIf=\"channelPriceIncludesTax\"\n                            clrInput\n                            [currencyCode]=\"variant.currencyCode\"\n                            [readonly]=\"!(updatePermission | hasPermission)\"\n                            formControlName=\"priceWithTax\"\n                        ></vdr-currency-input>\n                    </clr-input-container>\n                </td>\n                <td class=\"left align-middle stock\" [class.disabled]=\"!formGroup.get('enabled')!.value\">\n                    <clr-input-container>\n                        <input\n                            clrInput\n                            type=\"number\"\n                            min=\"0\"\n                            step=\"1\"\n                            formControlName=\"stockOnHand\"\n                            [readonly]=\"!(updatePermission | hasPermission)\"\n                        />\n                    </clr-input-container>\n                </td>\n                <td class=\"left align-middle stock\" [class.disabled]=\"!formGroup.get('enabled')!.value\">\n                    <clr-toggle-wrapper>\n                        <input\n                            type=\"checkbox\"\n                            clrToggle\n                            name=\"enabled\"\n                            formControlName=\"enabled\"\n                            [vdrDisabled]=\"!(updatePermission | hasPermission)\"\n                        />\n                    </clr-toggle-wrapper>\n                </td>\n            </ng-container>\n        </tr>\n    </tbody>\n</table>\n","styles":[".placeholder{color:var(--color-grey-300)}.stock input,.price input{max-width:96px}td{transition:background-color .2s}td.disabled{background-color:var(--color-component-bg-200)}\n"]}]}],"members":{"formArray":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":5},"arguments":["productVariantsFormArray"]}]}],"variants":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":5}}]}],"paginationConfig":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":24,"character":5}}]}],"channelPriceIncludesTax":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":25,"character":5}}]}],"optionGroups":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":5}}]}],"pendingAssetChanges":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":27,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectorRef","line":32,"character":40}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"trackByFn":[{"__symbolic":"method"}],"getFeaturedAsset":[{"__symbolic":"method"}],"optionGroupName":[{"__symbolic":"method"}],"buildFormGroupMap":[{"__symbolic":"method"}]}},"UpdateProductOptionDialogComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":12,"character":1},"arguments":[{"selector":"vdr-update-product-option-dialog","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":16,"character":21},"member":"OnPush"},"template":"<ng-template vdrDialogTitle>{{ 'catalog.update-product-option' | translate }}</ng-template>\n<vdr-form-field [label]=\"'catalog.option-name' | translate\" for=\"name\">\n    <input\n        id=\"name\"\n        type=\"text\"\n        #nameInput=\"ngModel\"\n        [(ngModel)]=\"name\"\n        required\n        (input)=\"updateCode($event.target.value)\"\n    />\n</vdr-form-field>\n<vdr-form-field [label]=\"'common.code' | translate\" for=\"code\">\n    <input id=\"code\" type=\"text\" #codeInput=\"ngModel\" required [(ngModel)]=\"code\" pattern=\"[a-z0-9_-]+\" />\n</vdr-form-field>\n<clr-checkbox-wrapper>\n    <input type=\"checkbox\" clrCheckbox [(ngModel)]=\"updateVariantName\" />\n    <label>{{ 'catalog.auto-update-option-variant-name' | translate }}</label>\n</clr-checkbox-wrapper>\n<section *ngIf=\"customFields.length\">\n    <label>{{ 'common.custom-fields' | translate }}</label>\n    <vdr-tabbed-custom-fields\n        entityName=\"ProductOption\"\n        [customFields]=\"customFields\"\n        [customFieldsFormGroup]=\"customFieldsForm\"\n        [readonly]=\"!(['UpdateCatalog', 'UpdateProduct'] | hasPermission)\"\n    ></vdr-tabbed-custom-fields>\n</section>\n\n<ng-template vdrDialogButtons>\n    <button type=\"button\" class=\"btn\" (click)=\"cancel()\">{{ 'common.cancel' | translate }}</button>\n    <button\n        type=\"submit\"\n        (click)=\"update()\"\n        [disabled]=\"\n            nameInput.invalid ||\n            codeInput.invalid ||\n            (nameInput.pristine && codeInput.pristine && customFieldsForm.pristine)\n        \"\n        class=\"btn btn-primary\"\n    >\n        {{ 'catalog.update-product-option' | translate }}\n    </button>\n</ng-template>\n","styles":[""]}]}],"members":{"ngOnInit":[{"__symbolic":"method"}],"update":[{"__symbolic":"method"}],"cancel":[{"__symbolic":"method"}],"updateCode":[{"__symbolic":"method"}]}},"VariantPriceDetailComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"vdr-variant-price-detail","changeDetection":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ChangeDetectionStrategy","line":9,"character":21},"member":"OnPush"},"template":"<label class=\"clr-control-label\">{{ 'catalog.taxes' | translate }}</label>\n<div *ngIf=\"priceIncludesTax\" class=\"value\">\n    {{ 'catalog.price-includes-tax-at' | translate: { rate: taxRate$ | async } }}\n</div>\n<div *ngIf=\"!priceIncludesTax\" class=\"value\">\n    {{\n        'catalog.price-with-tax-in-default-zone'\n            | translate: { price: grossPrice$ | async | localeCurrency: currencyCode, rate: taxRate$ | async }\n    }}\n</div>\n","styles":[":host{display:flex;flex-direction:column}.value{margin-top:3px}\n"]}]}],"members":{"priceIncludesTax":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":5}}]}],"price":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":5}}]}],"currencyCode":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":5}}]}],"taxCategoryId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"DataService","line":23,"character":37}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}]}},"ProductDetailService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":29,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"DataService","line":33,"character":37}]}],"getFacets":[{"__symbolic":"method"}],"getTaxCategories":[{"__symbolic":"method"}],"createProductWithVariants":[{"__symbolic":"method"}],"createProductOptionGroups":[{"__symbolic":"method"}],"createProductVariants":[{"__symbolic":"method"}],"updateProduct":[{"__symbolic":"method"}],"updateProductOption":[{"__symbolic":"method"}],"deleteProductVariant":[{"__symbolic":"method"}]},"statics":{"ɵprov":{}}},"replaceLast":{"__symbolic":"function"},"AssetResolver":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"BaseEntityResolver","line":8,"character":35},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":5,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"Router","line":9,"character":24},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"DataService","line":9,"character":45}]}]},"statics":{"ɵprov":{}}},"CollectionResolver":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"BaseEntityResolver","line":7,"character":40},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":4,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"Router","line":8,"character":24},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"DataService","line":8,"character":45}]}]},"statics":{"ɵprov":{}}},"FacetResolver":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"BaseEntityResolver","line":10,"character":35},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":7,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"Router","line":11,"character":24},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"DataService","line":11,"character":45}]}]},"statics":{"ɵprov":{}}},"ProductResolver":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"BaseEntityResolver","line":12,"character":37},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":9,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"DataService","line":13,"character":29},{"__symbolic":"reference","module":"@angular/router","name":"Router","line":13,"character":50}]}]},"statics":{"ɵprov":{}}},"ProductVariantsResolver":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"BaseEntityResolver","line":9,"character":45},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":6,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"Router","line":10,"character":24},{"__symbolic":"reference","module":"@vendure/admin-ui/core","name":"DataService","line":10,"character":45}]}]},"statics":{"ɵprov":{}}}},"origins":{"CatalogModule":"./catalog.module","catalogRoutes":"./catalog.routes","productBreadcrumb":"./catalog.routes","productVariantEditorBreadcrumb":"./catalog.routes","productOptionsEditorBreadcrumb":"./catalog.routes","facetBreadcrumb":"./catalog.routes","collectionBreadcrumb":"./catalog.routes","assetBreadcrumb":"./catalog.routes","ApplyFacetDialogComponent":"./components/apply-facet-dialog/apply-facet-dialog.component","AssetDetailComponent":"./components/asset-detail/asset-detail.component","AssetListComponent":"./components/asset-list/asset-list.component","AssetChange":"./components/assets/assets.component","AssetsComponent":"./components/assets/assets.component","AssignProductsToChannelDialogComponent":"./components/assign-products-to-channel-dialog/assign-products-to-channel-dialog.component","AssignToChannelDialogComponent":"./components/assign-to-channel-dialog/assign-to-channel-dialog.component","BulkAddFacetValuesDialogComponent":"./components/bulk-add-facet-values-dialog/bulk-add-facet-values-dialog.component","GET_PRODUCTS_WITH_FACET_VALUES_BY_IDS":"./components/bulk-add-facet-values-dialog/bulk-add-facet-values-dialog.graphql","GET_VARIANTS_WITH_FACET_VALUES_BY_IDS":"./components/bulk-add-facet-values-dialog/bulk-add-facet-values-dialog.graphql","UPDATE_PRODUCTS_BULK":"./components/bulk-add-facet-values-dialog/bulk-add-facet-values-dialog.graphql","UPDATE_VARIANTS_BULK":"./components/bulk-add-facet-values-dialog/bulk-add-facet-values-dialog.graphql","CollectionContentsComponent":"./components/collection-contents/collection-contents.component","CollectionDetailComponent":"./components/collection-detail/collection-detail.component","deleteCollectionsBulkAction":"./components/collection-list/collection-list-bulk-actions","assignCollectionsToChannelBulkAction":"./components/collection-list/collection-list-bulk-actions","removeCollectionsFromChannelBulkAction":"./components/collection-list/collection-list-bulk-actions","CollectionListComponent":"./components/collection-list/collection-list.component","HasParent":"./components/collection-tree/array-to-tree","TreeNode":"./components/collection-tree/array-to-tree","RootNode":"./components/collection-tree/array-to-tree","arrayToTree":"./components/collection-tree/array-to-tree","CollectionTreeNodeComponent":"./components/collection-tree/collection-tree-node.component","RearrangeEvent":"./components/collection-tree/collection-tree.component","CollectionPartial":"./components/collection-tree/collection-tree.component","CollectionTreeComponent":"./components/collection-tree/collection-tree.component","ConfirmVariantDeletionDialogComponent":"./components/confirm-variant-deletion-dialog/confirm-variant-deletion-dialog.component","FacetDetailComponent":"./components/facet-detail/facet-detail.component","deleteFacetsBulkAction":"./components/facet-list/facet-list-bulk-actions","assignFacetsToChannelBulkAction":"./components/facet-list/facet-list-bulk-actions","removeFacetsFromChannelBulkAction":"./components/facet-list/facet-list-bulk-actions","FacetListComponent":"./components/facet-list/facet-list.component","CreateVariantValues":"./components/generate-product-variants/generate-product-variants.component","CreateProductVariantsConfig":"./components/generate-product-variants/generate-product-variants.component","GenerateProductVariantsComponent":"./components/generate-product-variants/generate-product-variants.component","OPTION_VALUE_INPUT_VALUE_ACCESSOR":"./components/option-value-input/option-value-input.component","OptionValueInputComponent":"./components/option-value-input/option-value-input.component","TabName":"./components/product-detail/product-detail.component","VariantFormValue":"./components/product-detail/product-detail.component","SelectedAssets":"./components/product-detail/product-detail.component","PaginationConfig":"./components/product-detail/product-detail.component","ProductDetailComponent":"./components/product-detail/product-detail.component","deleteProductsBulkAction":"./components/product-list/product-list-bulk-actions","assignProductsToChannelBulkAction":"./components/product-list/product-list-bulk-actions","removeProductsFromChannelBulkAction":"./components/product-list/product-list-bulk-actions","assignFacetValuesToProductsBulkAction":"./components/product-list/product-list-bulk-actions","ProductListComponent":"./components/product-list/product-list.component","ProductOptionsEditorComponent":"./components/product-options-editor/product-options-editor.component","GeneratedVariant":"./components/product-variants-editor/product-variants-editor.component","ProductVariantsEditorComponent":"./components/product-variants-editor/product-variants-editor.component","VariantAssetChange":"./components/product-variants-list/product-variants-list.component","ProductVariantsListComponent":"./components/product-variants-list/product-variants-list.component","ProductVariantsTableComponent":"./components/product-variants-table/product-variants-table.component","UpdateProductOptionDialogComponent":"./components/update-product-option-dialog/update-product-option-dialog.component","VariantPriceDetailComponent":"./components/variant-price-detail/variant-price-detail.component","ProductDetailService":"./providers/product-detail/product-detail.service","replaceLast":"./providers/product-detail/replace-last","AssetResolver":"./providers/routing/asset-resolver","CollectionResolver":"./providers/routing/collection-resolver","FacetResolver":"./providers/routing/facet-resolver","ProductResolver":"./providers/routing/product-resolver","ProductVariantsResolver":"./providers/routing/product-variants-resolver"},"importAs":"@vendure/admin-ui/catalog"}